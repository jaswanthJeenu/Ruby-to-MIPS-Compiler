
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.2'

_lr_method = 'LALR'

_lr_signature = '\x11\x81\xcfob\xcf\xd2;\xf0\xe3\xef\xb2U\xfd\xff\x08'
    
_lr_action_items = {'NOTEQUAL':([17,18,19,21,25,26,30,31,35,36,54,78,79,98,99,100,103,108,109,110,111,112,113,115,116,117,118,119,120,],[-80,-73,-82,-87,64,-65,-68,-70,-86,-76,-65,-84,-85,-74,-75,-81,-83,-64,-63,-62,-67,-66,-61,-69,-72,-71,-77,-78,-79,]),'FLOAT_CONSTANTS':([2,3,4,16,20,22,24,29,32,33,34,49,50,56,57,58,60,64,65,66,67,68,69,70,71,72,73,74,75,76,77,80,81,82,95,96,97,123,124,135,143,],[-99,-99,-99,-99,-90,-92,-99,-89,79,-88,-91,-99,-99,-99,-99,-99,-99,-99,-99,-99,-99,-99,-99,-99,-99,-99,-99,-99,-99,-99,-99,-99,-99,-99,-99,-99,-99,-99,-99,-99,-99,]),'EQUAL':([1,5,14,],[16,-37,-38,]),'KEYWORD_until':([0,7,10,13,15,17,18,19,21,25,26,27,28,30,31,35,36,40,41,42,43,51,52,53,54,55,59,61,62,78,79,83,84,85,86,87,88,89,93,94,98,99,100,101,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,130,131,132,133,137,138,139,146,152,153,155,158,164,],[2,2,-6,-15,50,-80,-73,-82,-87,-60,-65,-53,-55,-68,-70,-86,-76,-95,2,-98,-97,-48,-51,-39,-65,-36,-23,-22,2,-84,-85,-21,-20,2,2,123,-96,50,-9,-11,-74,-75,-81,-52,-83,-59,-56,-58,-57,-64,-63,-62,-67,-66,-61,-54,-69,-72,-71,-77,-78,-79,-51,-49,-50,-12,-8,-13,-10,2,-47,2,-7,2,-14,]),'IFF':([17,18,19,21,25,26,30,31,35,36,54,78,79,98,99,100,103,108,109,110,111,112,113,115,116,117,118,119,120,],[-80,-73,-82,-87,65,-65,-68,-70,-86,-76,-65,-84,-85,-74,-75,-81,-83,-64,-63,-62,-67,-66,-61,-69,-72,-71,-77,-78,-79,]),'KEYWORD_in':([90,91,92,125,126,128,141,142,],[-24,-99,-25,-31,140,-30,-26,-27,]),'SHIFTL':([17,18,19,21,31,35,36,78,79,98,99,100,103,115,116,117,118,119,120,],[-80,-73,-82,-87,77,-86,-76,-84,-85,-74,-75,-81,-83,77,-72,-71,-77,-78,-79,]),'BITXOR':([17,18,19,21,26,30,31,35,36,54,78,79,98,99,100,103,108,109,110,111,112,113,115,116,117,118,119,120,131,132,],[-80,-73,-82,-87,72,-68,-70,-86,-76,72,-84,-85,-74,-75,-81,-83,72,72,72,-67,-66,72,-69,-72,-71,-77,-78,-79,72,72,]),'KEYWORD_end':([7,8,10,12,13,15,17,18,19,21,25,26,27,28,30,31,35,36,39,40,41,42,43,44,45,51,52,53,54,55,59,61,62,78,79,83,84,85,86,88,89,93,94,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,130,131,132,133,134,136,137,138,139,145,146,147,152,153,154,155,158,159,162,163,164,],[-99,-99,-6,-3,-15,-4,-80,-73,-82,-87,-60,-65,-53,-55,-68,-70,-86,-76,87,-95,-94,-98,-97,-93,-2,-48,-51,-39,-65,-36,-23,-22,-99,-84,-85,-21,-20,-99,-99,-96,-5,-9,-11,-74,-75,-81,-52,133,-83,-59,-56,-58,-57,-64,-63,-62,-67,-66,-61,-54,-69,-72,-71,-77,-78,-79,-99,137,-51,-49,-50,-12,-18,-99,-8,-13,-10,-17,-99,155,-47,-99,-16,-7,-99,-99,164,-19,-14,]),'DOUBLESTAR':([19,21,35,78,79,103,],[58,-87,-86,-84,-85,-83,]),'DIV':([17,19,21,35,36,78,79,98,99,100,103,118,119,120,],[-80,-82,-87,-86,81,-84,-85,81,81,-81,-83,-77,-78,-79,]),'KEYWORD_if':([0,7,40,41,42,43,59,61,62,83,84,85,86,88,146,153,158,],[3,3,-95,3,-98,-97,-23,-22,3,-21,-20,3,3,-96,3,3,3,]),'MINUS':([2,3,4,16,17,18,19,21,24,35,36,49,50,56,57,58,60,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,95,96,97,98,99,100,103,116,117,118,119,120,123,124,135,143,],[20,20,20,20,-80,57,-82,-87,20,-86,-76,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,-84,-85,20,20,20,20,20,20,-74,-75,-81,-83,57,57,-77,-78,-79,20,20,20,20,]),'KEYWORD_while':([0,7,10,13,15,17,18,19,21,25,26,27,28,30,31,35,36,40,41,42,43,51,52,53,54,55,59,61,62,78,79,83,84,85,86,87,88,89,93,94,98,99,100,101,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,130,131,132,133,137,138,139,146,152,153,155,158,164,],[4,4,-6,-15,49,-80,-73,-82,-87,-60,-65,-53,-55,-68,-70,-86,-76,-95,4,-98,-97,-48,-51,-39,-65,-36,-23,-22,4,-84,-85,-21,-20,4,4,124,-96,49,-9,-11,-74,-75,-81,-52,-83,-59,-56,-58,-57,-64,-63,-62,-67,-66,-61,-54,-69,-72,-71,-77,-78,-79,-51,-49,-50,-12,-8,-13,-10,4,-47,4,-7,4,-14,]),'DOUBLEDOT':([17,18,19,21,30,31,35,36,54,78,79,98,99,100,103,111,112,115,116,117,118,119,120,148,],[-80,-73,-82,-87,-68,-70,-86,-76,96,-84,-85,-74,-75,-81,-83,-67,-66,-69,-72,-71,-77,-78,-79,156,]),'GREATEREQUAL':([17,18,19,21,26,30,31,35,36,54,78,79,98,99,100,103,111,112,115,116,117,118,119,120,],[-80,-73,-82,-87,68,-68,-70,-86,-76,68,-84,-85,-74,-75,-81,-83,-67,-66,-69,-72,-71,-77,-78,-79,]),'TRIPLEDOT':([17,18,19,21,30,31,35,36,54,78,79,98,99,100,103,111,112,115,116,117,118,119,120,148,],[-80,-73,-82,-87,-68,-70,-86,-76,97,-84,-85,-74,-75,-81,-83,-67,-66,-69,-72,-71,-77,-78,-79,157,]),'QUESTION_MARK':([17,18,19,21,25,26,27,28,30,31,35,36,52,54,78,79,98,99,100,101,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,],[-80,-73,-82,-87,-60,-65,-53,-55,-68,-70,-86,-76,95,-65,-84,-85,-74,-75,-81,-52,-83,-59,-56,-58,-57,-64,-63,-62,-67,-66,-61,-54,-69,-72,-71,-77,-78,-79,]),'VARIABLES':([0,2,3,4,7,11,16,24,40,41,42,43,46,47,48,49,50,56,57,58,59,60,61,62,64,65,66,67,68,69,70,71,72,73,74,75,76,77,80,81,82,83,84,85,86,88,95,96,97,123,124,127,135,140,143,146,153,158,],[5,21,21,21,5,-99,21,21,-95,5,-98,-97,-29,-28,90,21,21,21,21,21,-23,21,-22,5,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,-21,-20,5,5,-96,21,21,21,21,21,141,21,149,21,5,5,5,]),'LESS':([17,18,19,21,26,30,31,35,36,54,78,79,98,99,100,103,111,112,115,116,117,118,119,120,],[-80,-73,-82,-87,70,-68,-70,-86,-76,70,-84,-85,-74,-75,-81,-83,-67,-66,-69,-72,-71,-77,-78,-79,]),'DELIM':([0,7,8,10,12,13,15,17,18,19,21,25,26,27,28,30,31,35,36,40,41,42,43,51,52,53,54,55,59,61,62,78,79,83,84,85,86,88,89,93,94,98,99,100,101,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,130,131,132,133,137,138,139,146,152,153,155,158,164,],[-99,-99,43,-6,-3,-15,-4,-80,-73,-82,-87,-60,-65,-53,-55,-68,-70,-86,-76,-95,43,-98,-97,-48,-51,-39,-65,-36,-23,-22,-99,-84,-85,-21,-20,-99,-99,-96,-5,-9,-11,-74,-75,-81,-52,-83,-59,-56,-58,-57,-64,-63,-62,-67,-66,-61,-54,-69,-72,-71,-77,-78,-79,-51,-49,-50,-12,-8,-13,-10,-99,-47,-99,-7,-99,-14,]),'BITCOMP':([2,3,4,16,24,49,50,56,57,58,60,64,65,66,67,68,69,70,71,72,73,74,75,76,77,80,81,82,95,96,97,123,124,135,143,],[22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,]),'PIPE':([17,18,19,21,26,30,31,35,36,54,78,79,98,99,100,103,108,109,110,111,112,113,115,116,117,118,119,120,131,132,],[-80,-73,-82,-87,71,-68,-70,-86,-76,71,-84,-85,-74,-75,-81,-83,71,71,71,-67,-66,71,-69,-72,-71,-77,-78,-79,71,71,]),'OPEN_PAREN':([2,3,4,11,16,24,49,50,56,57,58,60,64,65,66,67,68,69,70,71,72,73,74,75,76,77,80,81,82,95,96,97,123,124,135,143,],[24,24,24,47,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,]),'PLUS':([2,3,4,16,17,18,19,21,24,35,36,49,50,56,57,58,60,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,95,96,97,98,99,100,103,116,117,118,119,120,123,124,135,143,],[29,29,29,29,-80,56,-82,-87,29,-86,-76,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,-84,-85,29,29,29,29,29,29,-74,-75,-81,-83,56,56,-77,-78,-79,29,29,29,29,]),'KEYWORD_begin':([0,7,40,41,42,43,59,61,62,83,84,85,86,88,146,153,158,],[7,7,-95,7,-98,-97,-23,-22,7,-21,-20,7,7,-96,7,7,7,]),'COLON':([17,18,19,21,25,26,27,28,30,31,35,36,54,78,79,98,99,100,101,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,129,130,131,132,],[-80,-73,-82,-87,-60,-65,-53,-55,-68,-70,-86,-76,-65,-84,-85,-74,-75,-81,-52,-83,-59,-56,-58,-57,-64,-63,-62,-67,-66,-61,-54,-69,-72,-71,-77,-78,-79,143,-51,-49,-50,]),'$end':([0,6,8,9,10,12,13,15,17,18,19,21,25,26,27,28,30,31,35,36,40,41,42,43,44,45,51,52,53,54,55,78,79,88,89,93,94,98,99,100,101,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,130,131,132,133,137,138,139,152,155,164,],[-99,0,-99,-1,-6,-3,-15,-4,-80,-73,-82,-87,-60,-65,-53,-55,-68,-70,-86,-76,-95,-94,-98,-97,-93,-2,-48,-51,-39,-65,-36,-84,-85,-96,-5,-9,-11,-74,-75,-81,-52,-83,-59,-56,-58,-57,-64,-63,-62,-67,-66,-61,-54,-69,-72,-71,-77,-78,-79,-51,-49,-50,-12,-8,-13,-10,-47,-7,-14,]),'KEYWORD_else':([8,10,12,13,15,17,18,19,21,25,26,27,28,30,31,35,36,40,41,42,43,44,45,51,52,53,54,55,78,79,83,84,85,88,89,93,94,98,99,100,101,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,130,131,132,133,134,136,137,138,139,152,153,155,159,163,164,],[-99,-6,-3,-15,-4,-80,-73,-82,-87,-60,-65,-53,-55,-68,-70,-86,-76,-95,-94,-98,-97,-93,-2,-48,-51,-39,-65,-36,-84,-85,-21,-20,-99,-96,-5,-9,-11,-74,-75,-81,-52,-83,-59,-56,-58,-57,-64,-63,-62,-67,-66,-61,-54,-69,-72,-71,-77,-78,-79,-99,-51,-49,-50,-12,-18,146,-8,-13,-10,-47,-99,-7,-99,-19,-14,]),'DOUBLEEQUAL':([17,18,19,21,25,26,30,31,35,36,54,78,79,98,99,100,103,108,109,110,111,112,113,115,116,117,118,119,120,],[-80,-73,-82,-87,67,-65,-68,-70,-86,-76,-65,-84,-85,-74,-75,-81,-83,-64,-63,-62,-67,-66,-61,-69,-72,-71,-77,-78,-79,]),'LOGICALOR':([17,18,19,21,23,25,26,27,28,30,31,35,36,37,38,52,54,78,79,93,94,98,99,100,101,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,130,138,139,144,],[-80,-73,-82,-87,60,-60,-65,-53,-55,-68,-70,-86,-76,60,60,60,-65,-84,-85,60,60,-74,-75,-81,-52,-83,-59,-56,-58,-57,-64,-63,-62,-67,-66,-61,-54,-69,-72,-71,-77,-78,-79,60,60,60,60,]),'newline':([0,7,8,10,12,13,15,17,18,19,21,23,25,26,27,28,30,31,35,36,37,38,40,41,42,43,51,52,53,54,55,59,61,62,78,79,83,84,85,86,88,89,93,94,98,99,100,101,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,130,131,132,133,137,138,139,144,146,149,150,151,152,153,155,158,160,161,164,],[-99,-99,42,-6,-3,-15,-4,-80,-73,-82,-87,59,-60,-65,-53,-55,-68,-70,-86,-76,83,59,-95,42,-98,-97,-48,-51,-39,-65,-36,-23,-22,-99,-84,-85,-21,-20,-99,-99,-96,-5,-9,-11,-74,-75,-81,-52,-83,-59,-56,-58,-57,-64,-63,-62,-67,-66,-61,-54,-69,-72,-71,-77,-78,-79,-51,-49,-50,-12,-8,-13,-10,83,-99,-34,59,-35,-47,-99,-7,-99,-32,-33,-14,]),'KEYWORD_for':([0,7,40,41,42,43,59,61,62,83,84,85,86,88,146,153,158,],[11,11,-95,11,-98,-97,-23,-22,11,-21,-20,11,11,-96,11,11,11,]),'KEYWORD_then':([17,18,19,21,25,26,27,28,30,31,35,36,37,78,79,98,99,100,101,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,144,],[-80,-73,-82,-87,-60,-65,-53,-55,-68,-70,-86,-76,84,-84,-85,-74,-75,-81,-52,-83,-59,-56,-58,-57,-64,-63,-62,-67,-66,-61,-54,-69,-72,-71,-77,-78,-79,84,]),'LESSEQUAL':([17,18,19,21,26,30,31,35,36,54,78,79,98,99,100,103,111,112,115,116,117,118,119,120,],[-80,-73,-82,-87,73,-68,-70,-86,-76,73,-84,-85,-74,-75,-81,-83,-67,-66,-69,-72,-71,-77,-78,-79,]),'CLOSE_PAREN':([17,18,19,21,25,26,27,28,30,31,35,36,51,52,54,63,78,79,90,91,92,98,99,100,101,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,130,131,132,141,142,152,],[-80,-73,-82,-87,-60,-65,-53,-55,-68,-70,-86,-76,-48,-51,-65,103,-84,-85,-24,128,-25,-74,-75,-81,-52,-83,-59,-56,-58,-57,-64,-63,-62,-67,-66,-61,-54,-69,-72,-71,-77,-78,-79,-51,-49,-50,-26,-27,-47,]),'KEYWORD_elsif':([8,10,12,13,15,17,18,19,21,25,26,27,28,30,31,35,36,40,41,42,43,44,45,51,52,53,54,55,78,79,83,84,85,88,89,93,94,98,99,100,101,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,130,131,132,133,137,138,139,152,153,155,159,164,],[-99,-6,-3,-15,-4,-80,-73,-82,-87,-60,-65,-53,-55,-68,-70,-86,-76,-95,-94,-98,-97,-93,-2,-48,-51,-39,-65,-36,-84,-85,-21,-20,-99,-96,-5,-9,-11,-74,-75,-81,-52,-83,-59,-56,-58,-57,-64,-63,-62,-67,-66,-61,-54,-69,-72,-71,-77,-78,-79,135,-51,-49,-50,-12,-8,-13,-10,-47,-99,-7,135,-14,]),'INT_CONSTANTS':([2,3,4,16,20,22,24,29,32,33,34,49,50,56,57,58,60,64,65,66,67,68,69,70,71,72,73,74,75,76,77,80,81,82,95,96,97,123,124,135,140,143,156,157,],[-99,-99,-99,-99,-90,-92,-99,-89,78,-88,-91,-99,-99,-99,-99,-99,-99,-99,-99,-99,-99,-99,-99,-99,-99,-99,-99,-99,-99,-99,-99,-99,-99,-99,-99,-99,-99,-99,-99,-99,148,-99,160,161,]),'GREATER':([17,18,19,21,26,30,31,35,36,54,78,79,98,99,100,103,111,112,115,116,117,118,119,120,],[-80,-73,-82,-87,69,-68,-70,-86,-76,69,-84,-85,-74,-75,-81,-83,-67,-66,-69,-72,-71,-77,-78,-79,]),'MULTIPLY':([17,19,21,35,36,78,79,98,99,100,103,118,119,120,],[-80,-82,-87,-86,80,-84,-85,80,80,-81,-83,-77,-78,-79,]),'BITAND':([17,18,19,21,30,31,35,36,78,79,98,99,100,103,111,112,115,116,117,118,119,120,],[-80,-73,-82,-87,75,-70,-86,-76,-84,-85,-74,-75,-81,-83,75,75,-69,-72,-71,-77,-78,-79,]),'LOGICALAND':([17,18,19,21,25,26,27,28,30,31,35,36,54,78,79,98,99,100,101,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,],[-80,-73,-82,-87,-60,-65,74,-55,-68,-70,-86,-76,-65,-84,-85,-74,-75,-81,74,-83,-59,-56,-58,-57,-64,-63,-62,-67,-66,-61,-54,-69,-72,-71,-77,-78,-79,]),'SHIFTR':([17,18,19,21,31,35,36,78,79,98,99,100,103,115,116,117,118,119,120,],[-80,-73,-82,-87,76,-86,-76,-84,-85,-74,-75,-81,-83,76,-72,-71,-77,-78,-79,]),'BITNOT':([2,3,4,16,24,49,50,56,57,58,60,64,65,66,67,68,69,70,71,72,73,74,75,76,77,80,81,82,95,96,97,123,124,135,143,],[34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,]),'TRIPLEEQUAL':([17,18,19,21,25,26,30,31,35,36,54,78,79,98,99,100,103,108,109,110,111,112,113,115,116,117,118,119,120,],[-80,-73,-82,-87,66,-65,-68,-70,-86,-76,-65,-84,-85,-74,-75,-81,-83,-64,-63,-62,-67,-66,-61,-69,-72,-71,-77,-78,-79,]),'KEYWORD_do':([17,18,19,21,23,25,26,27,28,30,31,35,36,38,78,79,98,99,100,101,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,149,150,151,160,161,],[-80,-73,-82,-87,61,-60,-65,-53,-55,-68,-70,-86,-76,61,-84,-85,-74,-75,-81,-52,-83,-59,-56,-58,-57,-64,-63,-62,-67,-66,-61,-54,-69,-72,-71,-77,-78,-79,-34,61,-35,-32,-33,]),'COMMA':([90,91,92,141,142,],[-24,127,-25,-26,-27,]),'CONSTANTS':([0,2,3,4,7,11,16,24,40,41,42,43,46,47,48,49,50,56,57,58,59,60,61,62,64,65,66,67,68,69,70,71,72,73,74,75,76,77,80,81,82,83,84,85,86,88,95,96,97,123,124,127,135,140,143,146,153,158,],[14,35,35,35,14,-99,35,35,-95,14,-98,-97,-29,-28,92,35,35,35,35,35,-23,35,-22,14,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,-21,-20,14,14,-96,35,35,35,35,35,142,35,151,35,14,14,14,]),'MOD':([17,19,21,35,36,78,79,98,99,100,103,118,119,120,],[-80,-82,-87,-86,82,-84,-85,82,82,-81,-83,-77,-78,-79,]),}

_lr_action = { }
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = { }
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'mlhs':([0,7,41,62,85,86,146,153,158,],[1,1,1,1,1,1,1,1,1,]),'expr10':([2,3,4,16,24,49,50,60,64,65,66,67,68,69,70,71,72,73,74,75,76,77,95,96,97,123,124,135,143,],[18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,116,117,18,18,18,18,18,18,18,]),'expr11':([2,3,4,16,24,49,50,56,57,60,64,65,66,67,68,69,70,71,72,73,74,75,76,77,95,96,97,123,124,135,143,],[36,36,36,36,36,36,36,98,99,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,]),'expr12':([2,3,4,16,24,49,50,56,57,58,60,64,65,66,67,68,69,70,71,72,73,74,75,76,77,80,81,82,95,96,97,123,124,135,143,],[17,17,17,17,17,17,17,17,17,100,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,118,119,120,17,17,17,17,17,17,17,]),'expr13':([2,3,4,16,24,49,50,56,57,58,60,64,65,66,67,68,69,70,71,72,73,74,75,76,77,80,81,82,95,96,97,123,124,135,143,],[19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,]),'top_stmts':([0,7,62,85,86,146,153,158,],[8,8,8,8,8,8,8,8,]),'for_range':([140,],[150,]),'expr2':([16,24,95,143,],[51,51,129,152,]),'expr3':([2,3,4,16,24,49,50,95,123,124,135,143,],[23,37,38,52,52,93,94,130,138,139,144,130,]),'program':([0,],[6,]),'expr6':([2,3,4,16,24,49,50,60,64,65,66,67,74,95,123,124,135,143,],[25,25,25,25,25,25,25,25,104,105,106,107,25,25,25,25,25,25,]),'expr7':([2,3,4,16,24,49,50,60,64,65,66,67,68,69,70,73,74,95,96,97,123,124,135,143,],[26,26,26,54,54,26,26,26,26,26,26,26,108,109,110,113,26,54,131,132,26,26,26,54,]),'expr4':([2,3,4,16,24,49,50,60,95,123,124,135,143,],[27,27,27,27,27,27,27,101,27,27,27,27,27,]),'expr5':([2,3,4,16,24,49,50,60,74,95,123,124,135,143,],[28,28,28,28,28,28,28,28,114,28,28,28,28,28,]),'opt_oparen':([11,],[48,]),'expr8':([2,3,4,16,24,49,50,60,64,65,66,67,68,69,70,71,72,73,74,95,96,97,123,124,135,143,],[30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,111,112,30,30,30,30,30,30,30,30,30,]),'expr9':([2,3,4,16,24,49,50,60,64,65,66,67,68,69,70,71,72,73,74,75,95,96,97,123,124,135,143,],[31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,115,31,31,31,31,31,31,31,]),'opt_else_stmt':([136,],[147,]),'terms':([8,],[41,]),'opt_cparen':([91,],[126,]),'top_compstmt':([0,7,62,85,86,146,153,158,],[9,39,102,121,122,154,159,162,]),'term':([8,41,],[40,88,]),'stmt':([0,7,41,62,85,86,146,153,158,],[10,10,10,10,10,10,10,10,10,]),'multi_var':([48,],[91,]),'mrhs':([16,],[55,]),'elsif_tail':([121,159,],[136,163,]),'opt_then':([37,144,],[85,153,]),'opt_do':([23,38,150,],[62,86,158,]),'uexpr':([2,3,4,16,24,49,50,56,57,58,60,64,65,66,67,68,69,70,71,72,73,74,75,76,77,80,81,82,95,96,97,123,124,135,143,],[32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,]),'none':([0,2,3,4,7,8,11,16,24,49,50,56,57,58,60,62,64,65,66,67,68,69,70,71,72,73,74,75,76,77,80,81,82,85,86,91,95,96,97,121,123,124,135,136,143,146,153,158,159,],[12,33,33,33,12,44,46,33,33,33,33,33,33,33,33,12,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,12,12,125,33,33,33,134,33,33,33,145,33,12,12,12,134,]),'expr':([0,7,41,62,85,86,146,153,158,],[13,13,13,13,13,13,13,13,13,]),'opt_terms':([8,],[45,]),'expr1':([16,24,],[53,63,]),'top_stmt':([0,7,41,62,85,86,146,153,158,],[15,15,89,15,15,15,15,15,15,]),}

_lr_goto = { }
for _k, _v in _lr_goto_items.items():
   for _x,_y in zip(_v[0],_v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = { }
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> top_compstmt','program',1,'p_program','parser.py',6),
  ('top_compstmt -> top_stmts opt_terms','top_compstmt',2,'p_top_compstmt','parser.py',17),
  ('top_stmts -> none','top_stmts',1,'p_top_stmts','parser.py',27),
  ('top_stmts -> top_stmt','top_stmts',1,'p_top_stmts','parser.py',28),
  ('top_stmts -> top_stmts terms top_stmt','top_stmts',3,'p_top_stmts','parser.py',29),
  ('top_stmt -> stmt','top_stmt',1,'p_top_stmt','parser.py',38),
  ('top_stmt -> KEYWORD_if expr3 opt_then top_compstmt elsif_tail opt_else_stmt KEYWORD_end','top_stmt',7,'p_top_stmt','parser.py',39),
  ('top_stmt -> KEYWORD_while expr3 opt_do top_compstmt KEYWORD_end','top_stmt',5,'p_top_stmt','parser.py',40),
  ('top_stmt -> top_stmt KEYWORD_while expr3','top_stmt',3,'p_top_stmt','parser.py',41),
  ('top_stmt -> KEYWORD_begin top_compstmt KEYWORD_end KEYWORD_while expr3','top_stmt',5,'p_top_stmt','parser.py',42),
  ('top_stmt -> top_stmt KEYWORD_until expr3','top_stmt',3,'p_top_stmt','parser.py',43),
  ('top_stmt -> KEYWORD_until expr3 opt_do top_compstmt KEYWORD_end','top_stmt',5,'p_top_stmt','parser.py',44),
  ('top_stmt -> KEYWORD_begin top_compstmt KEYWORD_end KEYWORD_until expr3','top_stmt',5,'p_top_stmt','parser.py',45),
  ('top_stmt -> KEYWORD_for opt_oparen multi_var opt_cparen KEYWORD_in for_range opt_do top_compstmt KEYWORD_end','top_stmt',9,'p_top_stmt','parser.py',46),
  ('stmt -> expr','stmt',1,'p_stmt','parser.py',57),
  ('opt_else_stmt -> KEYWORD_else top_compstmt','opt_else_stmt',2,'p_opt_else_stmt','parser.py',70),
  ('opt_else_stmt -> none','opt_else_stmt',1,'p_opt_else_stmt','parser.py',71),
  ('elsif_tail -> none','elsif_tail',1,'p_elsif_tail','parser.py',81),
  ('elsif_tail -> KEYWORD_elsif expr3 opt_then top_compstmt elsif_tail','elsif_tail',5,'p_elsif_tail','parser.py',82),
  ('opt_then -> KEYWORD_then','opt_then',1,'p_opt_then','parser.py',91),
  ('opt_then -> newline','opt_then',1,'p_opt_then','parser.py',92),
  ('opt_do -> KEYWORD_do','opt_do',1,'p_opt_do','parser.py',101),
  ('opt_do -> newline','opt_do',1,'p_opt_do','parser.py',102),
  ('multi_var -> VARIABLES','multi_var',1,'p_multi_var','parser.py',111),
  ('multi_var -> CONSTANTS','multi_var',1,'p_multi_var','parser.py',112),
  ('multi_var -> multi_var COMMA VARIABLES','multi_var',3,'p_multi_var','parser.py',113),
  ('multi_var -> multi_var COMMA CONSTANTS','multi_var',3,'p_multi_var','parser.py',114),
  ('opt_oparen -> OPEN_PAREN','opt_oparen',1,'p_opt_oparen','parser.py',123),
  ('opt_oparen -> none','opt_oparen',1,'p_opt_oparen','parser.py',124),
  ('opt_cparen -> CLOSE_PAREN','opt_cparen',1,'p_opt_cparen','parser.py',133),
  ('opt_cparen -> none','opt_cparen',1,'p_opt_cparen','parser.py',134),
  ('for_range -> INT_CONSTANTS DOUBLEDOT INT_CONSTANTS','for_range',3,'p_for_range','parser.py',143),
  ('for_range -> INT_CONSTANTS TRIPLEDOT INT_CONSTANTS','for_range',3,'p_for_range','parser.py',144),
  ('for_range -> VARIABLES','for_range',1,'p_for_range','parser.py',145),
  ('for_range -> CONSTANTS','for_range',1,'p_for_range','parser.py',146),
  ('expr -> mlhs EQUAL mrhs','expr',3,'p_expr','parser.py',161),
  ('mlhs -> VARIABLES','mlhs',1,'p_mlhs','parser.py',170),
  ('mlhs -> CONSTANTS','mlhs',1,'p_mlhs','parser.py',171),
  ('mrhs -> expr1','mrhs',1,'p_mrhs','parser.py',199),
  ('primary -> INT_CONSTANTS','primary',1,'p_primary','parser.py',255),
  ('primary -> FLOAT_CONSTANTS','primary',1,'p_primary','parser.py',256),
  ('primary -> STRING_CONSTANTS','primary',1,'p_primary','parser.py',257),
  ('primary -> CHAR_CONSTANTS','primary',1,'p_primary','parser.py',258),
  ('primary -> BOOLEAN_CONSTANTS','primary',1,'p_primary','parser.py',259),
  ('primary -> CONSTANTS','primary',1,'p_primary','parser.py',260),
  ('primary -> VARIABLES','primary',1,'p_primary','parser.py',261),
  ('expr1 -> expr3 QUESTION_MARK expr2 COLON expr2','expr1',5,'p_expr1','parser.py',324),
  ('expr1 -> expr2','expr1',1,'p_expr1','parser.py',325),
  ('expr2 -> expr7 DOUBLEDOT expr7','expr2',3,'p_expr2','parser.py',334),
  ('expr2 -> expr7 TRIPLEDOT expr7','expr2',3,'p_expr2','parser.py',335),
  ('expr2 -> expr3','expr2',1,'p_expr2','parser.py',336),
  ('expr3 -> expr3 LOGICALOR expr4','expr3',3,'p_expr3','parser.py',345),
  ('expr3 -> expr4','expr3',1,'p_expr3','parser.py',346),
  ('expr4 -> expr4 LOGICALAND expr5','expr4',3,'p_expr4','parser.py',355),
  ('expr4 -> expr5','expr4',1,'p_expr4','parser.py',356),
  ('expr5 -> expr6 IFF expr6','expr5',3,'p_expr5','parser.py',365),
  ('expr5 -> expr6 DOUBLEEQUAL expr6','expr5',3,'p_expr5','parser.py',366),
  ('expr5 -> expr6 TRIPLEEQUAL expr6','expr5',3,'p_expr5','parser.py',367),
  ('expr5 -> expr6 NOTEQUAL expr6','expr5',3,'p_expr5','parser.py',368),
  ('expr5 -> expr6','expr5',1,'p_expr5','parser.py',369),
  ('expr6 -> expr7 LESSEQUAL expr7','expr6',3,'p_expr6','parser.py',378),
  ('expr6 -> expr7 LESS expr7','expr6',3,'p_expr6','parser.py',379),
  ('expr6 -> expr7 GREATER expr7','expr6',3,'p_expr6','parser.py',380),
  ('expr6 -> expr7 GREATEREQUAL expr7','expr6',3,'p_expr6','parser.py',381),
  ('expr6 -> expr7','expr6',1,'p_expr6','parser.py',382),
  ('expr7 -> expr7 BITXOR expr8','expr7',3,'p_expr7','parser.py',391),
  ('expr7 -> expr7 PIPE expr8','expr7',3,'p_expr7','parser.py',392),
  ('expr7 -> expr8','expr7',1,'p_expr7','parser.py',393),
  ('expr8 -> expr8 BITAND expr9','expr8',3,'p_expr8','parser.py',402),
  ('expr8 -> expr9','expr8',1,'p_expr8','parser.py',403),
  ('expr9 -> expr9 SHIFTL expr10','expr9',3,'p_expr9','parser.py',412),
  ('expr9 -> expr9 SHIFTR expr10','expr9',3,'p_expr9','parser.py',413),
  ('expr9 -> expr10','expr9',1,'p_expr9','parser.py',414),
  ('expr10 -> expr10 PLUS expr11','expr10',3,'p_expr10','parser.py',423),
  ('expr10 -> expr10 MINUS expr11','expr10',3,'p_expr10','parser.py',424),
  ('expr10 -> expr11','expr10',1,'p_expr10','parser.py',425),
  ('expr11 -> expr11 MULTIPLY expr12','expr11',3,'p_expr11','parser.py',434),
  ('expr11 -> expr11 DIV expr12','expr11',3,'p_expr11','parser.py',435),
  ('expr11 -> expr11 MOD expr12','expr11',3,'p_expr11','parser.py',436),
  ('expr11 -> expr12','expr11',1,'p_expr11','parser.py',437),
  ('expr12 -> expr13 DOUBLESTAR expr12','expr12',3,'p_expr12','parser.py',446),
  ('expr12 -> expr13','expr12',1,'p_expr12','parser.py',447),
  ('expr13 -> OPEN_PAREN expr1 CLOSE_PAREN','expr13',3,'p_expr13','parser.py',457),
  ('expr13 -> uexpr INT_CONSTANTS','expr13',2,'p_expr13','parser.py',458),
  ('expr13 -> uexpr FLOAT_CONSTANTS','expr13',2,'p_expr13','parser.py',459),
  ('expr13 -> CONSTANTS','expr13',1,'p_expr13','parser.py',460),
  ('expr13 -> VARIABLES','expr13',1,'p_expr13','parser.py',461),
  ('uexpr -> none','uexpr',1,'p_uexpr','parser.py',471),
  ('uexpr -> PLUS','uexpr',1,'p_uexpr','parser.py',472),
  ('uexpr -> MINUS','uexpr',1,'p_uexpr','parser.py',473),
  ('uexpr -> BITNOT','uexpr',1,'p_uexpr','parser.py',474),
  ('uexpr -> BITCOMP','uexpr',1,'p_uexpr','parser.py',475),
  ('opt_terms -> none','opt_terms',1,'p_opt_terms','parser.py',486),
  ('opt_terms -> terms','opt_terms',1,'p_opt_terms','parser.py',487),
  ('terms -> term','terms',1,'p_terms','parser.py',496),
  ('terms -> terms term','terms',2,'p_terms','parser.py',497),
  ('term -> DELIM','term',1,'p_term','parser.py',506),
  ('term -> newline','term',1,'p_term','parser.py',507),
  ('none -> <empty>','none',0,'p_none','parser.py',519),
]
