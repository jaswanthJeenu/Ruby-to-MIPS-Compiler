
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.5'

_lr_method = 'LALR'

_lr_signature = '07E4D843BBA817F140A367ED1C9972E0'
    
_lr_action_items = {'NOTEQUAL':([20,21,22,24,28,29,33,34,38,39,44,70,71,81,82,83,86,91,92,93,94,95,96,98,99,100,101,102,103,],[-62,-55,-64,-69,56,-47,-50,-52,-68,-58,-47,-66,-67,-56,-57,-63,-65,-46,-45,-44,-49,-48,-43,-51,-54,-53,-59,-60,-61,]),'FLOAT_CONSTANTS':([3,4,13,23,25,27,32,35,36,37,48,49,50,52,56,57,58,59,60,61,62,63,64,65,66,67,68,69,72,73,74,78,79,80,110,113,],[-81,-81,-81,-72,-74,-81,-71,71,-70,-73,-81,-81,-81,-81,-81,-81,-81,-81,-81,-81,-81,-81,-81,-81,-81,-81,-81,-81,-81,-81,-81,-81,-81,-81,-81,-81,]),'EQUAL':([1,5,12,],[13,-19,-20,]),'MULTIPLY':([20,22,24,38,39,70,71,81,82,83,86,101,102,103,],[-62,-64,-69,-68,72,-66,-67,72,72,-63,-65,-59,-60,-61,]),'IFF':([20,21,22,24,28,29,33,34,38,39,44,70,71,81,82,83,86,91,92,93,94,95,96,98,99,100,101,102,103,],[-62,-55,-64,-69,57,-47,-50,-52,-68,-58,-47,-66,-67,-56,-57,-63,-65,-46,-45,-44,-49,-48,-43,-51,-54,-53,-59,-60,-61,]),'SHIFTL':([20,21,22,24,34,38,39,70,71,81,82,83,86,98,99,100,101,102,103,],[-62,-55,-64,-69,69,-68,-58,-66,-67,-56,-57,-63,-65,69,-54,-53,-59,-60,-61,]),'BITXOR':([20,21,22,24,29,33,34,38,39,44,70,71,81,82,83,86,91,92,93,94,95,96,98,99,100,101,102,103,107,108,],[-62,-55,-64,-69,64,-50,-52,-68,-58,64,-66,-67,-56,-57,-63,-65,64,64,64,-49,-48,64,-51,-54,-53,-59,-60,-61,64,64,]),'KEYWORD_end':([2,8,9,10,11,14,15,16,17,18,19,20,21,22,24,26,28,29,30,31,33,34,38,39,40,41,42,43,44,45,46,47,51,53,54,70,71,75,76,77,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,106,107,108,109,111,112,114,115,116,117,118,119,120,121,122,123,],[-81,-6,-3,-9,-4,-77,-76,-80,-79,-75,-2,-62,-55,-64,-69,-81,-42,-47,-35,-37,-50,-52,-68,-58,-81,-30,-33,-21,-47,-18,-78,-5,-15,-14,-81,-66,-67,-17,-16,-81,-56,-57,-63,-34,-81,-65,-41,-38,-40,-39,-46,-45,-44,-49,-48,-43,-36,-51,-54,-53,-59,-60,-61,112,-33,-31,-32,-12,-81,-8,-81,-11,-81,121,-29,-81,-10,-7,-81,-13,]),'DOUBLESTAR':([22,24,38,70,71,86,],[50,-69,-68,-66,-67,-65,]),'DIV':([20,22,24,38,39,70,71,81,82,83,86,101,102,103,],[-62,-64,-69,-68,73,-66,-67,73,73,-63,-65,-59,-60,-61,]),'KEYWORD_if':([0,14,15,16,17,20,21,22,24,26,28,29,30,31,33,34,38,39,40,46,51,53,54,70,71,75,76,77,81,82,83,84,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,114,116,119,],[3,-77,3,-80,-79,-62,-55,-64,-69,-81,-42,-47,-35,-37,-50,-52,-68,-58,-81,-78,-15,-14,3,-66,-67,-17,-16,3,-56,-57,-63,-34,-65,-41,-38,-40,-39,-46,-45,-44,-49,-48,-43,-36,-51,-54,-53,-59,-60,-61,-81,3,3,]),'MINUS':([3,4,13,20,21,22,24,27,38,39,48,49,50,52,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,78,79,80,81,82,83,86,99,100,101,102,103,110,113,],[23,23,23,-62,49,-64,-69,23,-68,-58,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,-66,-67,23,23,23,23,23,23,-56,-57,-63,-65,49,49,-59,-60,-61,23,23,]),'KEYWORD_while':([0,14,15,16,17,20,21,22,24,26,28,29,30,31,33,34,38,39,40,46,51,53,54,70,71,75,76,77,81,82,83,84,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,114,116,119,],[4,-77,4,-80,-79,-62,-55,-64,-69,-81,-42,-47,-35,-37,-50,-52,-68,-58,-81,-78,-15,-14,4,-66,-67,-17,-16,4,-56,-57,-63,-34,-65,-41,-38,-40,-39,-46,-45,-44,-49,-48,-43,-36,-51,-54,-53,-59,-60,-61,-81,4,4,]),'DOUBLEDOT':([20,21,22,24,33,34,38,39,44,70,71,81,82,83,86,94,95,98,99,100,101,102,103,],[-62,-55,-64,-69,-50,-52,-68,-58,79,-66,-67,-56,-57,-63,-65,-49,-48,-51,-54,-53,-59,-60,-61,]),'GREATEREQUAL':([20,21,22,24,29,33,34,38,39,44,70,71,81,82,83,86,94,95,98,99,100,101,102,103,],[-62,-55,-64,-69,60,-50,-52,-68,-58,60,-66,-67,-56,-57,-63,-65,-49,-48,-51,-54,-53,-59,-60,-61,]),'TRIPLEDOT':([20,21,22,24,33,34,38,39,44,70,71,81,82,83,86,94,95,98,99,100,101,102,103,],[-62,-55,-64,-69,-50,-52,-68,-58,80,-66,-67,-56,-57,-63,-65,-49,-48,-51,-54,-53,-59,-60,-61,]),'QUESTION_MARK':([20,21,22,24,28,29,30,31,33,34,38,39,42,44,70,71,81,82,83,84,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,],[-62,-55,-64,-69,-42,-47,-35,-37,-50,-52,-68,-58,78,-47,-66,-67,-56,-57,-63,-34,-65,-41,-38,-40,-39,-46,-45,-44,-49,-48,-43,-36,-51,-54,-53,-59,-60,-61,]),'VARIABLES':([0,3,4,13,14,15,16,17,20,21,22,24,26,27,28,29,30,31,33,34,38,39,40,46,48,49,50,51,52,53,54,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,110,113,114,116,119,],[5,24,24,24,-77,5,-80,-79,-62,-55,-64,-69,-81,24,-42,-47,-35,-37,-50,-52,-68,-58,-81,-78,24,24,24,-15,24,-14,5,24,24,24,24,24,24,24,24,24,24,24,24,24,24,-66,-67,24,24,24,-17,-16,5,24,24,24,-56,-57,-63,-34,-65,-41,-38,-40,-39,-46,-45,-44,-49,-48,-43,-36,-51,-54,-53,-59,-60,-61,24,24,-81,5,5,]),'LESS':([20,21,22,24,29,33,34,38,39,44,70,71,81,82,83,86,94,95,98,99,100,101,102,103,],[-62,-55,-64,-69,62,-50,-52,-68,-58,62,-66,-67,-56,-57,-63,-65,-49,-48,-51,-54,-53,-59,-60,-61,]),'DELIM':([0,2,8,9,10,11,14,15,16,17,20,21,22,24,26,28,29,30,31,33,34,38,39,40,41,42,43,44,45,46,47,51,53,54,70,71,75,76,77,81,82,83,84,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,106,107,108,112,114,116,118,119,121,],[-81,17,-6,-3,-9,-4,-77,17,-80,-79,-62,-55,-64,-69,-81,-42,-47,-35,-37,-50,-52,-68,-58,-81,-30,-33,-21,-47,-18,-78,-5,-15,-14,-81,-66,-67,-17,-16,-81,-56,-57,-63,-34,-65,-41,-38,-40,-39,-46,-45,-44,-49,-48,-43,-36,-51,-54,-53,-59,-60,-61,-33,-31,-32,-8,-81,-81,-29,-81,-7,]),'BITCOMP':([3,4,13,27,48,49,50,52,56,57,58,59,60,61,62,63,64,65,66,67,68,69,72,73,74,78,79,80,110,113,],[25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,]),'PIPE':([20,21,22,24,29,33,34,38,39,44,70,71,81,82,83,86,91,92,93,94,95,96,98,99,100,101,102,103,107,108,],[-62,-55,-64,-69,63,-50,-52,-68,-58,63,-66,-67,-56,-57,-63,-65,63,63,63,-49,-48,63,-51,-54,-53,-59,-60,-61,63,63,]),'OPEN_PAREN':([3,4,13,27,48,49,50,52,56,57,58,59,60,61,62,63,64,65,66,67,68,69,72,73,74,78,79,80,110,113,],[27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,]),'PLUS':([3,4,13,20,21,22,24,27,38,39,48,49,50,52,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,78,79,80,81,82,83,86,99,100,101,102,103,110,113,],[32,32,32,-62,48,-64,-69,32,-68,-58,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,-66,-67,32,32,32,32,32,32,-56,-57,-63,-65,48,48,-59,-60,-61,32,32,]),'COLON':([20,21,22,24,28,29,30,31,33,34,38,39,44,70,71,81,82,83,84,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,105,106,107,108,],[-62,-55,-64,-69,-42,-47,-35,-37,-50,-52,-68,-58,-47,-66,-67,-56,-57,-63,-34,-65,-41,-38,-40,-39,-46,-45,-44,-49,-48,-43,-36,-51,-54,-53,-59,-60,-61,113,-33,-31,-32,]),'$end':([0,2,6,7,8,9,10,11,14,15,16,17,18,19,20,21,22,24,28,29,30,31,33,34,38,39,41,42,43,44,45,46,47,70,71,81,82,83,84,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,106,107,108,112,118,121,],[-81,-81,0,-1,-6,-3,-9,-4,-77,-76,-80,-79,-75,-2,-62,-55,-64,-69,-42,-47,-35,-37,-50,-52,-68,-58,-30,-33,-21,-47,-18,-78,-5,-66,-67,-56,-57,-63,-34,-65,-41,-38,-40,-39,-46,-45,-44,-49,-48,-43,-36,-51,-54,-53,-59,-60,-61,-33,-31,-32,-8,-29,-7,]),'KEYWORD_else':([2,8,9,10,11,14,15,16,17,18,19,20,21,22,24,26,28,29,30,31,33,34,38,39,41,42,43,44,45,46,47,51,53,54,70,71,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,106,107,108,109,111,112,114,118,119,121,122,123,],[-81,-6,-3,-9,-4,-77,-76,-80,-79,-75,-2,-62,-55,-64,-69,-81,-42,-47,-35,-37,-50,-52,-68,-58,-30,-33,-21,-47,-18,-78,-5,-15,-14,-81,-66,-67,-56,-57,-63,-34,-81,-65,-41,-38,-40,-39,-46,-45,-44,-49,-48,-43,-36,-51,-54,-53,-59,-60,-61,-33,-31,-32,-12,116,-8,-81,-29,-81,-7,-81,-13,]),'DOUBLEEQUAL':([20,21,22,24,28,29,33,34,38,39,44,70,71,81,82,83,86,91,92,93,94,95,96,98,99,100,101,102,103,],[-62,-55,-64,-69,59,-47,-50,-52,-68,-58,-47,-66,-67,-56,-57,-63,-65,-46,-45,-44,-49,-48,-43,-51,-54,-53,-59,-60,-61,]),'LOGICALOR':([20,21,22,24,26,28,29,30,31,33,34,38,39,40,42,44,70,71,81,82,83,84,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,106,114,],[-62,-55,-64,-69,52,-42,-47,-35,-37,-50,-52,-68,-58,52,52,-47,-66,-67,-56,-57,-63,-34,-65,-41,-38,-40,-39,-46,-45,-44,-49,-48,-43,-36,-51,-54,-53,-59,-60,-61,52,52,]),'newline':([0,2,8,9,10,11,14,15,16,17,20,21,22,24,26,28,29,30,31,33,34,38,39,40,41,42,43,44,45,46,47,51,53,54,70,71,75,76,77,81,82,83,84,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,106,107,108,112,114,116,118,119,121,],[-81,16,-6,-3,-9,-4,-77,16,-80,-79,-62,-55,-64,-69,-81,-42,-47,-35,-37,-50,-52,-68,-58,-81,-30,-33,-21,-47,-18,-78,-5,-15,-14,-81,-66,-67,-17,-16,-81,-56,-57,-63,-34,-65,-41,-38,-40,-39,-46,-45,-44,-49,-48,-43,-36,-51,-54,-53,-59,-60,-61,-33,-31,-32,-8,-81,-81,-29,-81,-7,]),'BITAND':([20,21,22,24,33,34,38,39,70,71,81,82,83,86,94,95,98,99,100,101,102,103,],[-62,-55,-64,-69,67,-52,-68,-58,-66,-67,-56,-57,-63,-65,67,67,-51,-54,-53,-59,-60,-61,]),'KEYWORD_then':([20,21,22,24,26,28,29,30,31,33,34,38,39,70,71,81,82,83,84,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,114,],[-62,-55,-64,-69,53,-42,-47,-35,-37,-50,-52,-68,-58,-66,-67,-56,-57,-63,-34,-65,-41,-38,-40,-39,-46,-45,-44,-49,-48,-43,-36,-51,-54,-53,-59,-60,-61,53,]),'LESSEQUAL':([20,21,22,24,29,33,34,38,39,44,70,71,81,82,83,86,94,95,98,99,100,101,102,103,],[-62,-55,-64,-69,65,-50,-52,-68,-58,65,-66,-67,-56,-57,-63,-65,-49,-48,-51,-54,-53,-59,-60,-61,]),'CLOSE_PAREN':([20,21,22,24,28,29,30,31,33,34,38,39,41,42,44,55,70,71,81,82,83,84,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,106,107,108,118,],[-62,-55,-64,-69,-42,-47,-35,-37,-50,-52,-68,-58,-30,-33,-47,86,-66,-67,-56,-57,-63,-34,-65,-41,-38,-40,-39,-46,-45,-44,-49,-48,-43,-36,-51,-54,-53,-59,-60,-61,-33,-31,-32,-29,]),'KEYWORD_elsif':([2,8,9,10,11,14,15,16,17,18,19,20,21,22,24,26,28,29,30,31,33,34,38,39,41,42,43,44,45,46,47,51,53,54,70,71,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,106,107,108,112,114,118,119,121,122,],[-81,-6,-3,-9,-4,-77,-76,-80,-79,-75,-2,-62,-55,-64,-69,-81,-42,-47,-35,-37,-50,-52,-68,-58,-30,-33,-21,-47,-18,-78,-5,-15,-14,-81,-66,-67,-56,-57,-63,-34,110,-65,-41,-38,-40,-39,-46,-45,-44,-49,-48,-43,-36,-51,-54,-53,-59,-60,-61,-33,-31,-32,-8,-81,-29,-81,-7,110,]),'INT_CONSTANTS':([3,4,13,23,25,27,32,35,36,37,48,49,50,52,56,57,58,59,60,61,62,63,64,65,66,67,68,69,72,73,74,78,79,80,110,113,],[-81,-81,-81,-72,-74,-81,-71,70,-70,-73,-81,-81,-81,-81,-81,-81,-81,-81,-81,-81,-81,-81,-81,-81,-81,-81,-81,-81,-81,-81,-81,-81,-81,-81,-81,-81,]),'GREATER':([20,21,22,24,29,33,34,38,39,44,70,71,81,82,83,86,94,95,98,99,100,101,102,103,],[-62,-55,-64,-69,61,-50,-52,-68,-58,61,-66,-67,-56,-57,-63,-65,-49,-48,-51,-54,-53,-59,-60,-61,]),'LOGICALAND':([20,21,22,24,28,29,30,31,33,34,38,39,44,70,71,81,82,83,84,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,],[-62,-55,-64,-69,-42,-47,66,-37,-50,-52,-68,-58,-47,-66,-67,-56,-57,-63,66,-65,-41,-38,-40,-39,-46,-45,-44,-49,-48,-43,-36,-51,-54,-53,-59,-60,-61,]),'SHIFTR':([20,21,22,24,34,38,39,70,71,81,82,83,86,98,99,100,101,102,103,],[-62,-55,-64,-69,68,-68,-58,-66,-67,-56,-57,-63,-65,68,-54,-53,-59,-60,-61,]),'BITNOT':([3,4,13,27,48,49,50,52,56,57,58,59,60,61,62,63,64,65,66,67,68,69,72,73,74,78,79,80,110,113,],[37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,]),'TRIPLEEQUAL':([20,21,22,24,28,29,33,34,38,39,44,70,71,81,82,83,86,91,92,93,94,95,96,98,99,100,101,102,103,],[-62,-55,-64,-69,58,-47,-50,-52,-68,-58,-47,-66,-67,-56,-57,-63,-65,-46,-45,-44,-49,-48,-43,-51,-54,-53,-59,-60,-61,]),'KEYWORD_do':([20,21,22,24,28,29,30,31,33,34,38,39,40,70,71,81,82,83,84,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,],[-62,-55,-64,-69,-42,-47,-35,-37,-50,-52,-68,-58,76,-66,-67,-56,-57,-63,-34,-65,-41,-38,-40,-39,-46,-45,-44,-49,-48,-43,-36,-51,-54,-53,-59,-60,-61,]),'CONSTANTS':([0,3,4,13,14,15,16,17,20,21,22,24,26,27,28,29,30,31,33,34,38,39,40,46,48,49,50,51,52,53,54,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,110,113,114,116,119,],[12,38,38,38,-77,12,-80,-79,-62,-55,-64,-69,-81,38,-42,-47,-35,-37,-50,-52,-68,-58,-81,-78,38,38,38,-15,38,-14,12,38,38,38,38,38,38,38,38,38,38,38,38,38,38,-66,-67,38,38,38,-17,-16,12,38,38,38,-56,-57,-63,-34,-65,-41,-38,-40,-39,-46,-45,-44,-49,-48,-43,-36,-51,-54,-53,-59,-60,-61,38,38,-81,12,12,]),'MOD':([20,22,24,38,39,70,71,81,82,83,86,101,102,103,],[-62,-64,-69,-68,74,-66,-67,74,74,-63,-65,-59,-60,-61,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'mlhs':([0,15,54,77,116,119,],[1,1,1,1,1,1,]),'expr10':([3,4,13,27,52,56,57,58,59,60,61,62,63,64,65,66,67,68,69,78,79,80,110,113,],[21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,99,100,21,21,21,21,21,]),'expr11':([3,4,13,27,48,49,52,56,57,58,59,60,61,62,63,64,65,66,67,68,69,78,79,80,110,113,],[39,39,39,39,81,82,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,]),'expr12':([3,4,13,27,48,49,50,52,56,57,58,59,60,61,62,63,64,65,66,67,68,69,72,73,74,78,79,80,110,113,],[20,20,20,20,20,20,83,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,101,102,103,20,20,20,20,20,]),'expr13':([3,4,13,27,48,49,50,52,56,57,58,59,60,61,62,63,64,65,66,67,68,69,72,73,74,78,79,80,110,113,],[22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,]),'top_stmts':([0,54,77,116,119,],[2,2,2,2,2,]),'expr2':([13,27,78,113,],[41,41,105,118,]),'expr3':([3,4,13,27,78,110,113,],[26,40,42,42,106,114,106,]),'program':([0,],[6,]),'expr6':([3,4,13,27,52,56,57,58,59,66,78,110,113,],[28,28,28,28,28,87,88,89,90,28,28,28,28,]),'expr7':([3,4,13,27,52,56,57,58,59,60,61,62,65,66,78,79,80,110,113,],[29,29,44,44,29,29,29,29,29,91,92,93,96,29,44,107,108,29,44,]),'expr4':([3,4,13,27,52,78,110,113,],[30,30,30,30,84,30,30,30,]),'expr5':([3,4,13,27,52,66,78,110,113,],[31,31,31,31,31,97,31,31,31,]),'expr8':([3,4,13,27,52,56,57,58,59,60,61,62,63,64,65,66,78,79,80,110,113,],[33,33,33,33,33,33,33,33,33,33,33,33,94,95,33,33,33,33,33,33,33,]),'expr9':([3,4,13,27,52,56,57,58,59,60,61,62,63,64,65,66,67,78,79,80,110,113,],[34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,98,34,34,34,34,34,]),'opt_else_stmt':([111,],[117,]),'terms':([2,],[15,]),'top_compstmt':([0,54,77,116,119,],[7,85,104,120,122,]),'term':([2,15,],[14,46,]),'stmt':([0,15,54,77,116,119,],[8,8,8,8,8,8,]),'mrhs':([13,],[45,]),'elsif_tail':([85,122,],[111,123,]),'opt_then':([26,114,],[54,119,]),'opt_do':([40,],[77,]),'uexpr':([3,4,13,27,48,49,50,52,56,57,58,59,60,61,62,63,64,65,66,67,68,69,72,73,74,78,79,80,110,113,],[35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,]),'none':([0,2,3,4,13,26,27,40,48,49,50,52,54,56,57,58,59,60,61,62,63,64,65,66,67,68,69,72,73,74,77,78,79,80,85,110,111,113,114,116,119,122,],[9,18,36,36,36,51,36,75,36,36,36,36,9,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,9,36,36,36,109,36,115,36,51,9,9,109,]),'expr':([0,15,54,77,116,119,],[10,10,10,10,10,10,]),'opt_terms':([2,],[19,]),'expr1':([13,27,],[43,55,]),'top_stmt':([0,15,54,77,116,119,],[11,47,11,11,11,11,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> top_compstmt','program',1,'p_program','parser.py',6),
  ('top_compstmt -> top_stmts opt_terms','top_compstmt',2,'p_top_compstmt','parser.py',17),
  ('top_stmts -> none','top_stmts',1,'p_top_stmts','parser.py',27),
  ('top_stmts -> top_stmt','top_stmts',1,'p_top_stmts','parser.py',28),
  ('top_stmts -> top_stmts terms top_stmt','top_stmts',3,'p_top_stmts','parser.py',29),
  ('top_stmt -> stmt','top_stmt',1,'p_top_stmt','parser.py',38),
  ('top_stmt -> KEYWORD_if expr3 opt_then top_compstmt elsif_tail opt_else_stmt KEYWORD_end','top_stmt',7,'p_top_stmt','parser.py',39),
  ('top_stmt -> KEYWORD_while expr3 opt_do top_compstmt KEYWORD_end','top_stmt',5,'p_top_stmt','parser.py',40),
  ('stmt -> expr','stmt',1,'p_stmt','parser.py',50),
  ('opt_else_stmt -> KEYWORD_else top_compstmt','opt_else_stmt',2,'p_opt_else_stmt','parser.py',63),
  ('opt_else_stmt -> none','opt_else_stmt',1,'p_opt_else_stmt','parser.py',64),
  ('elsif_tail -> none','elsif_tail',1,'p_elsif_tail','parser.py',92),
  ('elsif_tail -> KEYWORD_elsif expr3 opt_then top_compstmt elsif_tail','elsif_tail',5,'p_elsif_tail','parser.py',93),
  ('opt_then -> KEYWORD_then','opt_then',1,'p_opt_then','parser.py',102),
  ('opt_then -> none','opt_then',1,'p_opt_then','parser.py',103),
  ('opt_do -> KEYWORD_do','opt_do',1,'p_opt_do','parser.py',112),
  ('opt_do -> none','opt_do',1,'p_opt_do','parser.py',113),
  ('expr -> mlhs EQUAL mrhs','expr',3,'p_expr','parser.py',147),
  ('mlhs -> VARIABLES','mlhs',1,'p_mlhs','parser.py',156),
  ('mlhs -> CONSTANTS','mlhs',1,'p_mlhs','parser.py',157),
  ('mrhs -> expr1','mrhs',1,'p_mrhs','parser.py',185),
  ('primary -> INT_CONSTANTS','primary',1,'p_primary','parser.py',241),
  ('primary -> FLOAT_CONSTANTS','primary',1,'p_primary','parser.py',242),
  ('primary -> STRING_CONSTANTS','primary',1,'p_primary','parser.py',243),
  ('primary -> CHAR_CONSTANTS','primary',1,'p_primary','parser.py',244),
  ('primary -> BOOLEAN_CONSTANTS','primary',1,'p_primary','parser.py',245),
  ('primary -> CONSTANTS','primary',1,'p_primary','parser.py',246),
  ('primary -> VARIABLES','primary',1,'p_primary','parser.py',247),
  ('expr1 -> expr3 QUESTION_MARK expr2 COLON expr2','expr1',5,'p_expr1','parser.py',310),
  ('expr1 -> expr2','expr1',1,'p_expr1','parser.py',311),
  ('expr2 -> expr7 DOUBLEDOT expr7','expr2',3,'p_expr2','parser.py',320),
  ('expr2 -> expr7 TRIPLEDOT expr7','expr2',3,'p_expr2','parser.py',321),
  ('expr2 -> expr3','expr2',1,'p_expr2','parser.py',322),
  ('expr3 -> expr3 LOGICALOR expr4','expr3',3,'p_expr3','parser.py',331),
  ('expr3 -> expr4','expr3',1,'p_expr3','parser.py',332),
  ('expr4 -> expr4 LOGICALAND expr5','expr4',3,'p_expr4','parser.py',341),
  ('expr4 -> expr5','expr4',1,'p_expr4','parser.py',342),
  ('expr5 -> expr6 IFF expr6','expr5',3,'p_expr5','parser.py',351),
  ('expr5 -> expr6 DOUBLEEQUAL expr6','expr5',3,'p_expr5','parser.py',352),
  ('expr5 -> expr6 TRIPLEEQUAL expr6','expr5',3,'p_expr5','parser.py',353),
  ('expr5 -> expr6 NOTEQUAL expr6','expr5',3,'p_expr5','parser.py',354),
  ('expr5 -> expr6','expr5',1,'p_expr5','parser.py',355),
  ('expr6 -> expr7 LESSEQUAL expr7','expr6',3,'p_expr6','parser.py',364),
  ('expr6 -> expr7 LESS expr7','expr6',3,'p_expr6','parser.py',365),
  ('expr6 -> expr7 GREATER expr7','expr6',3,'p_expr6','parser.py',366),
  ('expr6 -> expr7 GREATEREQUAL expr7','expr6',3,'p_expr6','parser.py',367),
  ('expr6 -> expr7','expr6',1,'p_expr6','parser.py',368),
  ('expr7 -> expr7 BITXOR expr8','expr7',3,'p_expr7','parser.py',377),
  ('expr7 -> expr7 PIPE expr8','expr7',3,'p_expr7','parser.py',378),
  ('expr7 -> expr8','expr7',1,'p_expr7','parser.py',379),
  ('expr8 -> expr8 BITAND expr9','expr8',3,'p_expr8','parser.py',388),
  ('expr8 -> expr9','expr8',1,'p_expr8','parser.py',389),
  ('expr9 -> expr9 SHIFTL expr10','expr9',3,'p_expr9','parser.py',398),
  ('expr9 -> expr9 SHIFTR expr10','expr9',3,'p_expr9','parser.py',399),
  ('expr9 -> expr10','expr9',1,'p_expr9','parser.py',400),
  ('expr10 -> expr10 PLUS expr11','expr10',3,'p_expr10','parser.py',409),
  ('expr10 -> expr10 MINUS expr11','expr10',3,'p_expr10','parser.py',410),
  ('expr10 -> expr11','expr10',1,'p_expr10','parser.py',411),
  ('expr11 -> expr11 MULTIPLY expr12','expr11',3,'p_expr11','parser.py',420),
  ('expr11 -> expr11 DIV expr12','expr11',3,'p_expr11','parser.py',421),
  ('expr11 -> expr11 MOD expr12','expr11',3,'p_expr11','parser.py',422),
  ('expr11 -> expr12','expr11',1,'p_expr11','parser.py',423),
  ('expr12 -> expr13 DOUBLESTAR expr12','expr12',3,'p_expr12','parser.py',432),
  ('expr12 -> expr13','expr12',1,'p_expr12','parser.py',433),
  ('expr13 -> OPEN_PAREN expr1 CLOSE_PAREN','expr13',3,'p_expr13','parser.py',443),
  ('expr13 -> uexpr INT_CONSTANTS','expr13',2,'p_expr13','parser.py',444),
  ('expr13 -> uexpr FLOAT_CONSTANTS','expr13',2,'p_expr13','parser.py',445),
  ('expr13 -> CONSTANTS','expr13',1,'p_expr13','parser.py',446),
  ('expr13 -> VARIABLES','expr13',1,'p_expr13','parser.py',447),
  ('uexpr -> none','uexpr',1,'p_uexpr','parser.py',457),
  ('uexpr -> PLUS','uexpr',1,'p_uexpr','parser.py',458),
  ('uexpr -> MINUS','uexpr',1,'p_uexpr','parser.py',459),
  ('uexpr -> BITNOT','uexpr',1,'p_uexpr','parser.py',460),
  ('uexpr -> BITCOMP','uexpr',1,'p_uexpr','parser.py',461),
  ('opt_terms -> none','opt_terms',1,'p_opt_terms','parser.py',472),
  ('opt_terms -> terms','opt_terms',1,'p_opt_terms','parser.py',473),
  ('terms -> term','terms',1,'p_terms','parser.py',482),
  ('terms -> terms term','terms',2,'p_terms','parser.py',483),
  ('term -> DELIM','term',1,'p_term','parser.py',492),
  ('term -> newline','term',1,'p_term','parser.py',493),
  ('none -> <empty>','none',0,'p_none','parser.py',502),
]
