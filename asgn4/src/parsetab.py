
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = '6C13BC42C2B2AB58AEFC446A6B8785D4'
    
_lr_action_items = {'KEYWORD_redo':([0,38,77,78,79,80,107,108,109,112,116,117,131,132,133,148,149,150,152,153,155,157,158,159,160,168,188,199,216,217,218,221,233,235,238,239,240,260,303,317,322,],[1,1,-190,1,-193,-192,-143,-139,-140,-141,-146,-142,-111,-110,1,-59,-58,-61,1,-60,-191,1,-109,-108,1,1,1,-182,-145,-63,-144,-62,1,1,-55,-57,-56,1,1,1,1,]),'KEYWORD_exit':([0,38,77,78,79,80,107,108,109,112,116,117,131,132,133,148,149,150,152,153,155,157,158,159,160,168,188,199,216,217,218,221,233,235,238,239,240,260,303,317,322,],[23,23,-190,23,-193,-192,-143,-139,-140,-141,-146,-142,-111,-110,23,-59,-58,-61,23,-60,-191,23,-109,-108,23,23,23,-182,-145,-63,-144,-62,23,23,-55,-57,-56,23,23,23,23,]),'SIGIL_DOUBLE_AT':([77,79,80,107,108,109,112,116,117,148,149,150,153,155,170,199,216,217,218,221,238,239,240,251,252,253,292,308,312,325,327,335,346,347,348,],[-190,-193,-192,-143,-139,-140,-141,-146,-142,-59,-58,-61,-60,-191,210,-182,-145,-63,-144,-62,-55,-57,-56,279,284,210,314,314,330,314,314,284,284,284,330,]),'FLOAT_CONSTANTS':([0,3,4,6,10,22,25,27,28,29,30,33,34,38,40,44,52,57,58,59,60,61,62,63,66,67,68,69,70,71,72,77,78,79,80,85,98,99,101,104,105,106,107,108,109,112,113,116,117,119,120,121,127,128,130,131,132,133,148,149,150,152,153,155,157,158,159,160,164,168,175,176,177,184,188,191,193,199,216,217,218,221,233,235,238,239,240,249,250,252,260,270,303,312,317,322,335,346,347,348,],[-194,-185,-194,-184,65,-54,-194,-194,-53,-187,-194,-194,-183,-194,-186,109,-194,-194,-194,-194,-194,-194,-194,-194,-194,-194,-194,-194,-194,-194,-194,-190,-194,-193,-192,-194,-53,-183,-54,-194,-194,-194,-143,-139,-140,-141,109,-146,-142,-194,-194,-194,-53,109,-54,-111,-110,-194,-59,-58,-61,-194,-60,-191,-194,-109,-108,-194,-194,-194,109,109,109,109,-194,109,-183,-182,-145,-63,-144,-62,-194,-194,-55,-57,-56,-194,-194,283,-194,-194,-194,283,-194,-194,283,283,283,283,]),'EQUAL':([2,22,26,28,88,90,97,98,101,114,118,148,149,199,209,210,238,240,279,310,314,315,329,330,349,],[52,-126,-127,-125,164,-125,-126,-125,-126,175,177,175,177,-182,252,-32,177,175,-31,-43,-44,335,346,347,-42,]),'OPEN_BRACKET':([28,33,52,53,90,98,118,123,127,164,202,216,225,],[85,91,91,85,85,85,85,85,85,91,85,85,85,]),'KEYWORD_until':([0,1,7,8,9,11,12,13,14,15,16,18,20,22,23,26,28,32,35,38,41,42,43,45,46,47,48,49,53,55,56,64,65,77,78,79,80,89,90,92,93,94,95,96,97,98,101,102,107,108,109,110,111,112,114,115,116,117,118,127,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,152,153,155,157,158,159,160,163,166,168,171,172,173,178,179,180,185,188,194,199,202,203,204,205,206,207,215,216,217,218,219,220,221,233,235,238,239,240,260,261,262,268,274,276,277,278,303,305,306,317,322,324,339,361,],[25,-91,-159,-149,-82,-160,-90,67,-168,-171,-175,-81,-66,-179,-92,-181,-180,-84,-79,25,-147,-80,-154,-151,-163,-165,-89,-83,-180,-181,-179,-177,-178,-190,25,-193,-192,-129,-180,-128,-130,-93,-94,-138,-179,-180,-179,67,-143,-139,-140,-100,-101,-141,-144,-86,-146,-142,-145,-180,-124,-179,-111,-110,25,-158,-157,-156,-162,-161,-155,-150,-69,-71,-169,-170,-172,-173,-174,-59,-58,-61,25,-60,-191,25,-109,-108,25,-176,-131,25,-148,-153,-152,-164,-167,-166,-88,25,67,-182,-180,-179,-134,-136,67,249,-85,-145,-63,-144,-102,-103,-62,25,25,-55,-57,-56,25,-87,-68,-72,-133,-137,-73,-70,25,-132,-135,25,25,-67,-75,-74,]),'KEYWORD_in':([123,124,125,126,199,222,229,230,],[-112,182,-113,-114,-182,256,-115,-116,]),'NOTEQUAL':([7,11,14,15,16,22,26,28,43,46,47,53,55,56,64,65,90,97,98,101,127,130,134,135,136,137,138,139,143,144,145,146,147,163,178,179,180,199,202,203,],[-159,-160,-168,-171,-175,-179,-181,-180,105,-163,-165,-180,-181,-179,-177,-178,-180,-179,-180,-179,-180,-179,-158,-157,-156,-162,-161,-155,-169,-170,-172,-173,-174,-176,-164,-167,-166,-182,-180,-179,]),'SHIFTL':([14,15,16,22,26,28,47,53,55,56,64,65,90,97,98,101,127,130,143,144,145,146,147,163,178,179,180,199,202,203,],[-168,-171,-175,-179,-181,-180,121,-180,-181,-179,-177,-178,-180,-179,-180,-179,-180,-179,-169,-170,-172,-173,-174,-176,121,-167,-166,-182,-180,-179,]),'BITXOR':([7,14,15,16,22,26,28,46,47,53,55,56,64,65,90,97,98,101,127,130,134,135,136,137,138,139,143,144,145,146,147,161,163,178,179,180,199,202,203,],[61,-168,-171,-175,-179,-181,-180,-163,-165,-180,-181,-179,-177,-178,-180,-179,-180,-179,-180,-179,61,61,61,-162,-161,61,-169,-170,-172,-173,-174,61,-176,-164,-167,-166,-182,-180,-179,]),'KEYWORD_end':([1,7,8,9,11,12,14,15,16,18,20,23,26,32,35,38,41,42,43,45,46,47,48,49,53,55,56,64,65,77,79,80,81,89,90,92,93,94,95,96,97,98,99,100,101,102,107,108,109,110,111,112,114,115,116,117,118,127,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,152,153,155,157,158,159,160,163,166,168,169,170,171,172,173,178,179,180,185,186,188,189,190,193,194,197,198,199,202,203,204,205,206,208,211,212,214,215,216,217,218,219,220,221,232,233,234,235,236,237,238,239,240,243,244,253,254,260,261,262,263,264,265,268,269,271,274,276,277,278,280,281,282,283,284,285,286,287,288,289,292,298,299,302,303,304,305,306,308,309,311,313,316,317,320,322,323,324,325,326,327,328,329,330,331,332,333,336,339,340,341,342,343,344,345,350,351,352,353,354,355,356,357,358,359,360,361,362,363,],[-91,-159,-149,-82,-160,-90,-168,-171,-175,-81,-66,-92,-181,-84,-79,-194,-147,-80,-154,-151,-163,-165,-89,-83,-180,-181,-179,-177,-178,-190,-193,-192,-188,-129,-180,-128,-130,-93,-94,-138,-179,-180,-78,-194,-179,-76,-143,-139,-140,-100,-101,-141,-144,-86,-146,-142,-145,-180,-124,-179,-111,-110,-194,-158,-157,-156,-162,-161,-155,-150,-69,-71,-169,-170,-172,-173,-174,-59,-58,-61,-194,-60,-191,-194,-109,-108,-194,-176,-131,-189,207,-194,-148,-153,-152,-164,-167,-166,-88,-194,-194,-95,-194,-97,-98,-194,-194,-182,-180,-179,-134,-136,-77,-20,-22,-194,-18,-85,-145,-63,-144,-102,-103,-62,262,-194,-194,-189,266,-99,-55,-57,-56,268,-194,-189,290,-194,-87,-68,-194,300,-96,-72,-106,-194,-133,-137,-73,-70,-29,-27,-24,-25,-30,-26,-23,-21,-28,-19,-194,-194,321,-105,-194,324,-132,-135,-194,-36,-194,-41,-38,-194,339,-194,-194,-67,-194,-194,-189,345,-29,-30,-48,-40,-47,-194,-75,-194,-104,-194,356,-37,-34,-39,-46,-45,361,-194,363,-35,-51,-52,-50,-49,-74,-107,-33,]),'DIV':([15,16,22,26,28,53,55,56,64,65,90,97,98,101,127,130,143,144,145,146,147,163,199,202,203,],[71,-175,-179,-181,-180,-180,-181,-179,-177,-178,-180,-179,-180,-179,-180,-179,71,71,-172,-173,-174,-176,-182,-180,-179,]),'KEYWORD_if':([0,38,77,78,79,80,107,108,109,112,116,117,131,132,133,148,149,150,152,153,155,157,158,159,160,168,188,199,216,217,218,221,233,235,238,239,240,260,303,317,322,],[27,27,-190,27,-193,-192,-143,-139,-140,-141,-146,-142,-111,-110,27,-59,-58,-61,27,-60,-191,27,-109,-108,27,27,27,-182,-145,-63,-144,-62,27,27,-55,-57,-56,27,27,27,27,]),'CHAR_CONSTANTS':([22,28,44,98,101,113,127,128,130,175,176,177,184,191,252,312,335,346,347,348,],[-54,-53,117,-53,-54,117,-53,117,-54,117,117,117,117,117,288,288,288,288,288,288,]),'MINUS':([0,4,14,15,16,22,25,26,27,28,30,33,38,52,53,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,77,78,79,80,85,90,97,98,101,104,105,106,107,108,109,112,116,117,119,120,121,127,130,131,132,133,143,144,145,146,147,148,149,150,152,153,155,157,158,159,160,163,164,168,179,180,188,199,202,203,216,217,218,221,233,235,238,239,240,249,250,260,270,303,317,322,],[3,3,69,-171,-175,-179,3,-181,3,-180,3,3,3,3,-180,-181,-179,3,3,3,3,3,3,3,-177,-178,3,3,3,3,3,3,3,-190,3,-193,-192,3,-180,-179,-180,-179,3,3,3,-143,-139,-140,-141,-146,-142,3,3,3,-180,-179,-111,-110,3,-169,-170,-172,-173,-174,-59,-58,-61,3,-60,-191,3,-109,-108,3,-176,3,3,69,69,3,-182,-180,-179,-145,-63,-144,-62,3,3,-55,-57,-56,3,3,3,3,3,3,3,]),'KEYWORD_begin':([0,38,77,78,79,80,107,108,109,112,116,117,131,132,133,148,149,150,152,153,155,157,158,159,160,168,188,199,216,217,218,221,233,235,238,239,240,260,303,317,322,],[38,38,-190,38,-193,-192,-143,-139,-140,-141,-146,-142,-111,-110,38,-59,-58,-61,38,-60,-191,38,-109,-108,38,38,38,-182,-145,-63,-144,-62,38,38,-55,-57,-56,38,38,38,38,]),'KEYWORD_return':([77,79,80,107,108,109,112,116,117,148,149,150,152,153,155,188,199,216,217,218,221,233,235,238,239,240,292,308,325,327,],[-190,-193,-192,-143,-139,-140,-141,-146,-142,-59,-58,-61,191,-60,-191,191,-182,-145,-63,-144,-62,191,191,-55,-57,-56,312,312,312,312,]),'DOUBLEDOT':([223,259,],[257,296,]),'GREATEREQUAL':([7,14,15,16,22,26,28,46,47,53,55,56,64,65,90,97,98,101,127,130,137,138,143,144,145,146,147,163,178,179,180,199,202,203,],[57,-168,-171,-175,-179,-181,-180,-163,-165,-180,-181,-179,-177,-178,-180,-179,-180,-179,-180,-179,-162,-161,-169,-170,-172,-173,-174,-176,-164,-167,-166,-182,-180,-179,]),'TRIPLEDOT':([223,259,],[258,297,]),'KEYWORD_new':([76,167,],[154,205,]),'KEYWORD_class':([0,77,78,79,80,155,],[39,-190,39,-193,-192,-191,]),'VARIABLES':([0,4,21,22,25,27,28,30,33,38,44,51,52,57,58,59,60,61,62,63,66,67,68,69,70,71,72,73,74,75,77,78,79,80,85,86,98,101,104,105,106,107,108,109,112,113,116,117,119,120,121,122,127,128,130,131,132,133,148,149,150,151,152,153,154,155,157,158,159,160,162,164,165,168,175,176,177,182,183,184,188,191,192,195,199,200,213,216,217,218,221,233,235,238,239,240,247,248,249,250,255,256,260,270,291,303,317,322,335,],[28,53,74,-54,53,53,-53,53,90,98,118,123,127,53,53,53,53,53,53,53,53,53,53,53,53,53,53,-54,-53,149,-190,28,-193,-192,53,162,-53,-54,53,53,53,-143,-139,-140,-141,118,-146,-142,53,53,53,123,-53,118,-54,-111,-110,98,-59,-58,-61,149,98,-60,149,-191,98,-109,-108,98,149,202,204,98,216,118,216,225,229,118,98,118,238,149,-182,149,74,-145,-63,-144,-62,98,98,-55,-57,-56,149,149,53,53,149,225,98,53,149,98,98,98,351,]),'LESS':([7,14,15,16,22,26,28,46,47,53,55,56,64,65,90,97,98,101,127,130,137,138,143,144,145,146,147,163,178,179,180,199,202,203,],[59,-168,-171,-175,-179,-181,-180,-163,-165,-180,-181,-179,-177,-178,-180,-179,-180,-179,-180,-179,-162,-161,-169,-170,-172,-173,-174,-176,-164,-167,-166,-182,-180,-179,]),'DELIM':([1,7,8,9,11,12,13,14,15,16,17,18,19,20,22,23,24,26,28,31,32,35,36,37,38,41,42,43,45,46,47,48,49,53,55,56,64,65,77,78,79,80,89,90,92,93,94,95,96,97,98,99,100,101,102,107,108,109,110,111,112,114,115,116,117,118,127,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,152,153,155,156,157,158,159,160,163,166,168,170,171,172,173,178,179,180,185,186,188,189,190,193,194,196,197,198,199,201,202,203,204,205,206,208,209,210,211,212,214,215,216,217,218,219,220,221,233,234,235,237,238,239,240,242,246,251,253,260,261,262,263,265,266,267,268,272,274,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,292,298,300,303,305,306,308,309,310,311,313,314,315,316,317,321,322,323,324,325,326,327,329,330,331,332,333,334,336,339,340,342,344,345,349,350,351,352,356,357,358,359,360,361,363,],[-91,-159,-149,-82,-160,-90,-65,-168,-171,-175,-64,-81,-5,-66,-179,-92,80,-181,-180,-3,-84,-79,-7,-6,-194,-147,-80,-154,-151,-163,-165,-89,-83,-180,-181,-179,-177,-178,-190,80,-193,-192,-129,-180,-128,-130,-93,-94,-138,-179,-180,-78,80,-179,-76,-143,-139,-140,-100,-101,-141,-144,-86,-146,-142,-145,-180,-124,-179,-111,-110,-194,-158,-157,-156,-162,-161,-155,-150,-69,-71,-169,-170,-172,-173,-174,-59,-58,-61,-194,-60,-191,-4,-194,-109,-108,-194,-176,-131,80,-194,-148,-153,-152,-164,-167,-166,-88,80,-194,-95,80,-97,-98,-13,80,80,-182,-10,-180,-179,-134,-136,-77,-20,80,-32,-22,80,-18,-85,-145,-63,-144,-102,-103,-62,-194,80,80,-99,-55,-57,-56,-12,-9,80,80,-194,-87,-68,80,-96,-16,-11,-72,-8,-133,-137,-73,-70,-31,-29,-27,-24,-25,-30,-26,-23,-21,-28,-19,-17,-194,80,-15,-194,-132,-135,-194,-36,-43,80,-41,-44,80,-38,-194,-14,-194,80,-67,-194,80,80,-29,-30,-48,-40,-47,80,80,-75,80,80,-37,-34,-42,-39,-46,-45,-35,-51,-52,-50,-49,-74,-33,]),'KEYWORD_def':([0,77,78,79,80,155,170,253,],[21,-190,21,-193,-192,-191,213,213,]),'BITCOMP':([0,4,25,27,30,33,38,52,57,58,59,60,61,62,63,66,67,68,69,70,71,72,77,78,79,80,85,104,105,106,107,108,109,112,116,117,119,120,121,131,132,133,148,149,150,152,153,155,157,158,159,160,164,168,188,199,216,217,218,221,233,235,238,239,240,249,250,260,270,303,317,322,],[29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,-190,29,-193,-192,29,29,29,29,-143,-139,-140,-141,-146,-142,29,29,29,-111,-110,29,-59,-58,-61,29,-60,-191,29,-109,-108,29,29,29,29,-182,-145,-63,-144,-62,29,29,-55,-57,-56,29,29,29,29,29,29,29,]),'PIPE':([7,14,15,16,22,26,28,46,47,53,55,56,64,65,90,97,98,101,127,130,134,135,136,137,138,139,143,144,145,146,147,161,163,178,179,180,199,202,203,],[60,-168,-171,-175,-179,-181,-180,-163,-165,-180,-181,-179,-177,-178,-180,-179,-180,-179,-180,-179,60,60,60,-162,-161,60,-169,-170,-172,-173,-174,60,-176,-164,-167,-166,-182,-180,-179,]),'CLOSE_BRACKET':([14,15,16,46,47,53,55,56,64,65,91,137,138,143,144,145,146,147,161,163,178,179,180,199,],[-168,-171,-175,-163,-165,-180,-181,-179,-177,-178,166,-162,-161,-169,-170,-172,-173,-174,199,-176,-164,-167,-166,-182,]),'KEYWORD_next':([0,38,77,78,79,80,107,108,109,112,116,117,131,132,133,148,149,150,152,153,155,157,158,159,160,168,188,199,216,217,218,221,233,235,238,239,240,260,303,317,322,],[12,12,-190,12,-193,-192,-143,-139,-140,-141,-146,-142,-111,-110,12,-59,-58,-61,12,-60,-191,12,-109,-108,12,12,12,-182,-145,-63,-144,-62,12,12,-55,-57,-56,12,12,12,12,]),'PLUS':([0,4,14,15,16,22,25,26,27,28,30,33,38,52,53,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,77,78,79,80,85,90,97,98,101,104,105,106,107,108,109,112,116,117,119,120,121,127,130,131,132,133,143,144,145,146,147,148,149,150,152,153,155,157,158,159,160,163,164,168,179,180,188,199,202,203,216,217,218,221,233,235,238,239,240,249,250,260,270,303,317,322,],[6,6,68,-171,-175,-179,6,-181,6,-180,6,6,6,6,-180,-181,-179,6,6,6,6,6,6,6,-177,-178,6,6,6,6,6,6,6,-190,6,-193,-192,6,-180,-179,-180,-179,6,6,6,-143,-139,-140,-141,-146,-142,6,6,6,-180,-179,-111,-110,6,-169,-170,-172,-173,-174,-59,-58,-61,6,-60,-191,6,-109,-108,6,-176,6,6,68,68,6,-182,-180,-179,-145,-63,-144,-62,6,6,-55,-57,-56,6,6,6,6,6,6,6,]),'KEYWORD_while':([0,1,7,8,9,11,12,13,14,15,16,18,20,22,23,26,28,32,35,38,41,42,43,45,46,47,48,49,53,55,56,64,65,77,78,79,80,89,90,92,93,94,95,96,97,98,101,102,107,108,109,110,111,112,114,115,116,117,118,127,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,152,153,155,157,158,159,160,163,166,168,171,172,173,178,179,180,185,188,194,199,202,203,204,205,206,207,215,216,217,218,219,220,221,233,235,238,239,240,260,261,262,268,274,276,277,278,303,305,306,317,322,324,339,361,],[4,-91,-159,-149,-82,-160,-90,66,-168,-171,-175,-81,-66,-179,-92,-181,-180,-84,-79,4,-147,-80,-154,-151,-163,-165,-89,-83,-180,-181,-179,-177,-178,-190,4,-193,-192,-129,-180,-128,-130,-93,-94,-138,-179,-180,-179,66,-143,-139,-140,-100,-101,-141,-144,-86,-146,-142,-145,-180,-124,-179,-111,-110,4,-158,-157,-156,-162,-161,-155,-150,-69,-71,-169,-170,-172,-173,-174,-59,-58,-61,4,-60,-191,4,-109,-108,4,-176,-131,4,-148,-153,-152,-164,-167,-166,-88,4,66,-182,-180,-179,-134,-136,66,250,-85,-145,-63,-144,-102,-103,-62,4,4,-55,-57,-56,4,-87,-68,-72,-133,-137,-73,-70,4,-132,-135,4,4,-67,-75,-74,]),'SIGIL_AT':([77,79,80,107,108,109,112,116,117,148,149,150,153,155,199,216,217,218,221,238,239,240,252,292,308,312,325,327,334,335,346,347,348,],[-190,-193,-192,-143,-139,-140,-141,-146,-142,-59,-58,-61,-60,-191,-182,-145,-63,-144,-62,-55,-57,-56,280,310,310,329,310,310,349,280,280,280,329,]),'COMMA':([107,108,109,110,111,112,114,115,116,117,118,123,124,125,126,148,149,150,152,153,174,181,185,187,196,199,201,216,217,218,219,220,221,229,230,231,237,238,239,240,241,245,273,275,280,281,282,283,284,285,288,292,307,329,330,331,332,333,357,358,359,360,],[-143,-139,-140,-100,-101,-141,-144,176,-146,-142,-145,-112,183,-113,-114,-59,-58,-61,192,-60,176,183,176,192,192,-182,192,-145,-63,-144,-102,-103,-62,-115,-116,176,176,-55,-57,-56,192,192,192,192,-29,-27,-24,-25,-30,-26,-28,192,192,-29,-30,-48,348,-47,-51,-52,-50,-49,]),'KEYWORD_break':([0,38,77,78,79,80,107,108,109,112,116,117,131,132,133,148,149,150,152,153,155,157,158,159,160,168,188,199,216,217,218,221,233,235,238,239,240,260,303,317,322,],[48,48,-190,48,-193,-192,-143,-139,-140,-141,-146,-142,-111,-110,48,-59,-58,-61,48,-60,-191,48,-109,-108,48,48,48,-182,-145,-63,-144,-62,48,48,-55,-57,-56,48,48,48,48,]),'$end':([1,5,7,8,9,11,12,13,14,15,16,17,18,19,20,22,23,24,26,28,31,32,35,36,37,41,42,43,45,46,47,48,49,50,53,55,56,64,65,77,78,79,80,81,82,89,90,92,93,94,95,96,97,107,108,109,110,111,112,114,115,116,117,118,127,129,130,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,153,155,156,163,166,171,172,173,178,179,180,185,196,199,201,202,203,204,205,215,216,217,218,219,220,221,238,239,240,242,246,261,262,266,267,268,272,274,276,277,278,290,300,305,306,321,324,339,361,],[-91,0,-159,-149,-82,-160,-90,-65,-168,-171,-175,-64,-81,-5,-66,-179,-92,-194,-181,-180,-3,-84,-79,-7,-6,-147,-80,-154,-151,-163,-165,-89,-83,-1,-180,-181,-179,-177,-178,-190,-189,-193,-192,-188,-2,-129,-180,-128,-130,-93,-94,-138,-179,-143,-139,-140,-100,-101,-141,-144,-86,-146,-142,-145,-180,-124,-179,-158,-157,-156,-162,-161,-155,-150,-69,-71,-169,-170,-172,-173,-174,-59,-58,-61,-60,-191,-4,-176,-131,-148,-153,-152,-164,-167,-166,-88,-13,-182,-10,-180,-179,-134,-136,-85,-145,-63,-144,-102,-103,-62,-55,-57,-56,-12,-9,-87,-68,-16,-11,-72,-8,-133,-137,-73,-70,-17,-15,-132,-135,-14,-67,-75,-74,]),'KEYWORD_puts':([0,38,77,78,79,80,107,108,109,112,116,117,131,132,133,148,149,150,152,153,155,157,158,159,160,168,188,199,216,217,218,221,233,235,238,239,240,260,292,303,308,317,322,325,327,],[33,33,-190,33,-193,-192,-143,-139,-140,-141,-146,-142,-111,-110,33,-59,-58,-61,33,-60,-191,33,-109,-108,33,33,33,-182,-145,-63,-144,-62,33,33,-55,-57,-56,33,33,33,33,33,33,33,33,]),'KEYWORD_else':([1,7,8,9,11,12,14,15,16,18,20,23,26,32,35,41,42,43,45,46,47,48,49,53,55,56,64,65,77,79,80,81,89,90,92,93,94,95,96,97,98,99,101,102,107,108,109,110,111,112,114,115,116,117,118,127,129,130,134,135,136,137,138,139,140,141,142,143,144,145,146,147,155,158,159,160,163,166,168,171,172,173,178,179,180,185,198,199,202,203,204,205,206,215,216,217,218,219,220,221,244,261,262,268,269,271,274,276,277,278,305,306,322,324,339,340,354,361,362,],[-91,-159,-149,-82,-160,-90,-168,-171,-175,-81,-66,-92,-181,-84,-79,-147,-80,-154,-151,-163,-165,-89,-83,-180,-181,-179,-177,-178,-190,-193,-192,-188,-129,-180,-128,-130,-93,-94,-138,-179,-180,-78,-179,-76,-143,-139,-140,-100,-101,-141,-144,-86,-146,-142,-145,-180,-124,-179,-158,-157,-156,-162,-161,-155,-150,-69,-71,-169,-170,-172,-173,-174,-191,-109,-108,-194,-176,-131,-189,-148,-153,-152,-164,-167,-166,-88,-194,-182,-180,-179,-134,-136,-77,-85,-145,-63,-144,-102,-103,-62,-194,-87,-68,-72,-106,303,-133,-137,-73,-70,-132,-135,-194,-67,-75,-194,-194,-74,-107,]),'DOUBLEEQUAL':([7,11,14,15,16,22,26,28,43,46,47,53,55,56,64,65,90,97,98,101,127,130,134,135,136,137,138,139,143,144,145,146,147,163,178,179,180,199,202,203,],[-159,-160,-168,-171,-175,-179,-181,-180,106,-163,-165,-180,-181,-179,-177,-178,-180,-179,-180,-179,-180,-179,-158,-157,-156,-162,-161,-155,-169,-170,-172,-173,-174,-176,-164,-167,-166,-182,-180,-179,]),'LOGICALOR':([7,8,11,14,15,16,22,26,28,41,43,45,46,47,53,54,55,56,64,65,83,84,90,97,98,101,127,130,134,135,136,137,138,139,140,141,142,143,144,145,146,147,163,171,172,173,178,179,180,199,202,203,277,278,301,],[-159,-149,-160,-168,-171,-175,-179,-181,-180,104,-154,-151,-163,-165,-180,104,-181,-179,-177,-178,104,104,-180,-179,-180,-179,-180,-179,-158,-157,-156,-162,-161,-155,-150,104,104,-169,-170,-172,-173,-174,-176,-148,-153,-152,-164,-167,-166,-182,-180,-179,104,104,104,]),'newline':([1,7,8,9,11,12,13,14,15,16,17,18,19,20,22,23,24,26,28,31,32,35,36,37,38,41,42,43,45,46,47,48,49,53,54,55,56,64,65,73,74,75,77,78,79,80,83,84,89,90,92,93,94,95,96,97,98,99,100,101,102,103,107,108,109,110,111,112,114,115,116,117,118,127,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,162,163,166,168,170,171,172,173,178,179,180,185,186,188,189,190,193,194,195,196,197,198,199,200,201,202,203,204,205,206,208,209,210,211,212,214,215,216,217,218,219,220,221,225,226,227,228,233,234,235,237,238,239,240,242,246,247,248,251,253,255,260,261,262,263,265,266,267,268,272,274,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,298,300,301,303,305,306,308,309,310,311,313,314,315,316,317,321,322,323,324,325,326,327,329,330,331,332,333,334,336,337,338,339,340,342,344,345,349,350,351,352,356,357,358,359,360,361,363,],[-91,-159,-149,-82,-160,-90,-65,-168,-171,-175,-64,-81,-5,-66,-179,-92,79,-181,-180,-3,-84,-79,-7,-6,-194,-147,-80,-154,-151,-163,-165,-89,-83,-180,131,-181,-179,-177,-178,-54,-53,150,-190,79,-193,-192,131,158,-129,-180,-128,-130,-93,-94,-138,-179,-180,-78,79,-179,-76,170,-143,-139,-140,-100,-101,-141,-144,-86,-146,-142,-145,-180,-124,-179,-111,-110,-194,-158,-157,-156,-162,-161,-155,-150,-69,-71,-169,-170,-172,-173,-174,-59,-58,-61,150,-194,-60,150,-191,-4,-194,-109,-108,-194,150,-176,-131,79,-194,-148,-153,-152,-164,-167,-166,-88,79,-194,-95,79,-97,-98,150,-13,79,79,-182,150,-10,-180,-179,-134,-136,-77,-20,79,-32,-22,79,-18,-85,-145,-63,-144,-102,-103,-62,-121,131,-123,-122,-194,79,79,-99,-55,-57,-56,-12,-9,150,150,79,79,150,-194,-87,-68,79,-96,-16,-11,-72,-8,-133,-137,-73,-70,-31,-29,-27,-24,-25,-30,-26,-23,-21,-28,-19,-17,150,-194,131,-118,-120,79,-15,158,-194,-132,-135,-194,-36,-43,79,-41,-44,79,-38,-194,-14,-194,79,-67,-194,79,79,-29,-30,-48,-40,-47,79,79,-117,-119,-75,79,79,-37,-34,-42,-39,-46,-45,-35,-51,-52,-50,-49,-74,-33,]),'KEYWORD_for':([0,38,77,78,79,80,107,108,109,112,116,117,131,132,133,148,149,150,152,153,155,157,158,159,160,168,188,199,216,217,218,221,233,235,238,239,240,260,303,317,322,],[51,51,-190,51,-193,-192,-143,-139,-140,-141,-146,-142,-111,-110,51,-59,-58,-61,51,-60,-191,51,-109,-108,51,51,51,-182,-145,-63,-144,-62,51,51,-55,-57,-56,51,51,51,51,]),'KEYWORD_then':([7,8,11,14,15,16,43,45,46,47,53,55,56,64,65,84,134,135,136,137,138,139,140,143,144,145,146,147,163,171,172,173,178,179,180,199,301,],[-159,-149,-160,-168,-171,-175,-154,-151,-163,-165,-180,-181,-179,-177,-178,159,-158,-157,-156,-162,-161,-155,-150,-169,-170,-172,-173,-174,-176,-148,-153,-152,-164,-167,-166,-182,159,]),'LESSEQUAL':([7,14,15,16,22,26,28,46,47,53,55,56,64,65,90,97,98,101,127,130,137,138,143,144,145,146,147,163,178,179,180,199,202,203,],[62,-168,-171,-175,-179,-181,-180,-163,-165,-180,-181,-179,-177,-178,-180,-179,-180,-179,-180,-179,-162,-161,-169,-170,-172,-173,-174,-176,-164,-167,-166,-182,-180,-179,]),'DOT':([22,28,90,97,127,130,202,203,],[76,86,165,167,165,167,165,167,]),'CLOSE_PAREN':([7,8,11,14,15,16,41,43,45,46,47,53,55,56,64,65,87,107,108,109,110,111,112,114,116,117,118,123,125,126,134,135,136,137,138,139,140,143,144,145,146,147,148,149,150,151,153,163,171,172,173,174,178,179,180,181,187,195,199,200,216,217,218,219,220,221,229,230,231,238,239,240,241,245,247,248,273,275,291,307,318,319,],[-159,-149,-160,-168,-171,-175,-147,-154,-151,-163,-165,-180,-181,-179,-177,-178,163,-143,-139,-140,-100,-101,-141,-144,-146,-142,-145,-112,-113,-114,-158,-157,-156,-162,-161,-155,-150,-169,-170,-172,-173,-174,-59,-58,-61,188,-60,-176,-148,-153,-152,215,-164,-167,-166,222,233,242,-182,246,-145,-63,-144,-102,-103,-62,-115,-116,261,-55,-57,-56,267,272,274,276,305,306,308,325,337,338,]),'KEYWORD_elsif':([1,7,8,9,11,12,14,15,16,18,20,23,26,32,35,41,42,43,45,46,47,48,49,53,55,56,64,65,77,79,80,81,89,90,92,93,94,95,96,97,98,99,101,102,107,108,109,110,111,112,114,115,116,117,118,127,129,130,134,135,136,137,138,139,140,141,142,143,144,145,146,147,155,158,159,160,163,166,168,171,172,173,178,179,180,185,198,199,202,203,204,205,206,215,216,217,218,219,220,221,244,261,262,268,274,276,277,278,305,306,322,324,339,340,354,361,],[-91,-159,-149,-82,-160,-90,-168,-171,-175,-81,-66,-92,-181,-84,-79,-147,-80,-154,-151,-163,-165,-89,-83,-180,-181,-179,-177,-178,-190,-193,-192,-188,-129,-180,-128,-130,-93,-94,-138,-179,-180,-78,-179,-76,-143,-139,-140,-100,-101,-141,-144,-86,-146,-142,-145,-180,-124,-179,-158,-157,-156,-162,-161,-155,-150,-69,-71,-169,-170,-172,-173,-174,-191,-109,-108,-194,-176,-131,-189,-148,-153,-152,-164,-167,-166,-88,-194,-182,-180,-179,-134,-136,-77,-85,-145,-63,-144,-102,-103,-62,270,-87,-68,-72,-133,-137,-73,-70,-132,-135,-194,-67,-75,-194,270,-74,]),'BOOLEAN_CONSTANTS':([0,4,22,25,27,28,30,33,38,44,52,63,66,67,77,78,79,80,98,101,104,105,106,107,108,109,112,113,116,117,127,128,130,131,132,133,148,149,150,152,153,155,157,158,159,160,164,168,175,176,177,184,188,191,199,216,217,218,221,233,235,238,239,240,249,250,252,260,270,303,312,317,322,335,346,347,348,],[11,11,-54,11,11,-53,11,11,11,107,11,11,11,11,-190,11,-193,-192,-53,-54,11,11,11,-143,-139,-140,-141,107,-146,-142,-53,107,-54,-111,-110,11,-59,-58,-61,11,-60,-191,11,-109,-108,11,11,11,107,107,107,107,11,107,-182,-145,-63,-144,-62,11,11,-55,-57,-56,11,11,281,11,11,11,281,11,11,281,281,281,281,]),'INT_CONSTANTS':([0,3,4,6,10,22,25,27,28,29,30,33,34,38,40,44,52,57,58,59,60,61,62,63,66,67,68,69,70,71,72,77,78,79,80,85,98,99,101,104,105,106,107,108,109,112,113,116,117,119,120,121,127,128,130,131,132,133,148,149,150,152,153,155,157,158,159,160,164,168,175,176,177,182,184,188,191,193,199,216,217,218,221,224,233,235,238,239,240,249,250,252,256,257,258,260,270,296,297,303,312,317,322,335,346,347,348,],[-194,-185,-194,-184,64,-54,-194,-194,-53,-187,-194,-194,-183,-194,-186,108,-194,-194,-194,-194,-194,-194,-194,-194,-194,-194,-194,-194,-194,-194,-194,-190,-194,-193,-192,-194,-53,-183,-54,-194,-194,-194,-143,-139,-140,-141,108,-146,-142,-194,-194,-194,-53,108,-54,-111,-110,-194,-59,-58,-61,-194,-60,-191,-194,-109,-108,-194,-194,-194,108,108,108,223,108,-194,108,-183,-182,-145,-63,-144,-62,259,-194,-194,-55,-57,-56,-194,-194,282,223,294,295,-194,-194,318,319,-194,282,-194,-194,282,282,282,282,]),'GREATER':([7,14,15,16,22,26,28,46,47,53,55,56,64,65,90,97,98,101,127,130,137,138,143,144,145,146,147,163,178,179,180,199,202,203,],[58,-168,-171,-175,-179,-181,-180,-163,-165,-180,-181,-179,-177,-178,-180,-179,-180,-179,-180,-179,-162,-161,-169,-170,-172,-173,-174,-176,-164,-167,-166,-182,-180,-179,]),'MULTIPLY':([15,16,22,26,28,53,55,56,64,65,90,97,98,101,127,130,143,144,145,146,147,163,199,202,203,],[70,-175,-179,-181,-180,-180,-181,-179,-177,-178,-180,-179,-180,-179,-180,-179,70,70,-172,-173,-174,-176,-182,-180,-179,]),'OPEN_PAREN':([0,4,22,25,27,28,30,33,38,44,51,52,57,58,59,60,61,62,63,66,67,68,69,70,71,72,73,74,75,77,78,79,80,85,98,101,104,105,106,107,108,109,112,116,117,119,120,121,127,128,130,131,132,133,148,149,150,152,153,154,155,157,158,159,160,162,164,168,182,188,199,204,205,216,217,218,221,233,235,238,239,240,249,250,255,256,260,270,303,317,322,],[30,30,-54,30,30,-53,30,30,30,113,122,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,-54,-53,151,-190,30,-193,-192,30,-53,-54,30,30,30,-143,-139,-140,-141,-146,-142,30,30,30,-53,184,-54,-111,-110,30,-59,-58,-61,30,-60,195,-191,30,-109,-108,30,200,30,30,224,30,-182,247,248,-145,-63,-144,-62,30,30,-55,-57,-56,30,30,291,224,30,30,30,30,30,]),'BITAND':([14,15,16,22,26,28,46,47,53,55,56,64,65,90,97,98,101,127,130,137,138,143,144,145,146,147,163,178,179,180,199,202,203,],[-168,-171,-175,-179,-181,-180,119,-165,-180,-181,-179,-177,-178,-180,-179,-180,-179,-180,-179,119,119,-169,-170,-172,-173,-174,-176,-164,-167,-166,-182,-180,-179,]),'LOGICALAND':([7,8,11,14,15,16,22,26,28,43,45,46,47,53,55,56,64,65,90,97,98,101,127,130,134,135,136,137,138,139,140,143,144,145,146,147,163,171,172,173,178,179,180,199,202,203,],[-159,63,-160,-168,-171,-175,-179,-181,-180,-154,-151,-163,-165,-180,-181,-179,-177,-178,-180,-179,-180,-179,-180,-179,-158,-157,-156,-162,-161,-155,-150,-169,-170,-172,-173,-174,-176,63,-153,-152,-164,-167,-166,-182,-180,-179,]),'SHIFTR':([14,15,16,22,26,28,47,53,55,56,64,65,90,97,98,101,127,130,143,144,145,146,147,163,178,179,180,199,202,203,],[-168,-171,-175,-179,-181,-180,120,-180,-181,-179,-177,-178,-180,-179,-180,-179,-180,-179,-169,-170,-172,-173,-174,-176,120,-167,-166,-182,-180,-179,]),'STRING_CONSTANTS':([22,28,33,44,52,98,101,113,127,128,130,164,175,176,177,184,191,252,312,335,346,347,348,],[-54,-53,96,112,96,-53,-54,112,-53,112,-54,96,112,112,112,112,112,285,285,285,285,285,285,]),'BITNOT':([0,4,25,27,30,33,38,52,57,58,59,60,61,62,63,66,67,68,69,70,71,72,77,78,79,80,85,104,105,106,107,108,109,112,116,117,119,120,121,131,132,133,148,149,150,152,153,155,157,158,159,160,164,168,188,199,216,217,218,221,233,235,238,239,240,249,250,260,270,303,317,322,],[40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,-190,40,-193,-192,40,40,40,40,-143,-139,-140,-141,-146,-142,40,40,40,-111,-110,40,-59,-58,-61,40,-60,-191,40,-109,-108,40,40,40,40,-182,-145,-63,-144,-62,40,40,-55,-57,-56,40,40,40,40,40,40,40,]),'KEYWORD_do':([7,8,11,14,15,16,43,45,46,47,53,54,55,56,64,65,83,134,135,136,137,138,139,140,143,144,145,146,147,163,171,172,173,178,179,180,199,225,226,227,228,293,294,295,337,338,],[-159,-149,-160,-168,-171,-175,-154,-151,-163,-165,-180,132,-181,-179,-177,-178,132,-158,-157,-156,-162,-161,-155,-150,-169,-170,-172,-173,-174,-176,-148,-153,-152,-164,-167,-166,-182,-121,132,-123,-122,132,-118,-120,-117,-119,]),'KEYWORD_gets':([33,52,164,],[93,93,93,]),'CONSTANTS':([0,4,21,22,25,27,28,30,33,38,39,44,51,52,57,58,59,60,61,62,63,66,67,68,69,70,71,72,73,74,75,77,78,79,80,85,98,101,104,105,106,107,108,109,112,113,116,117,119,120,121,122,127,128,130,131,132,133,148,149,150,151,152,153,154,155,157,158,159,160,162,164,168,175,176,177,182,183,184,188,191,192,195,199,200,213,216,217,218,221,233,235,238,239,240,247,248,249,250,255,256,260,270,291,303,317,322,],[22,56,73,-54,56,56,-53,56,97,101,103,114,125,130,56,56,56,56,56,56,56,56,56,56,56,56,56,56,-54,-53,148,-190,22,-193,-192,56,-53,-54,56,56,56,-143,-139,-140,-141,114,-146,-142,56,56,56,125,-53,114,-54,-111,-110,101,-59,-58,-61,148,101,-60,148,-191,101,-109,-108,101,148,203,101,218,114,218,227,230,114,101,114,240,148,-182,148,73,-145,-63,-144,-62,101,101,-55,-57,-56,148,148,56,56,148,227,101,56,148,101,101,101,]),'MOD':([15,16,22,26,28,53,55,56,64,65,90,97,98,101,127,130,143,144,145,146,147,163,199,202,203,],[72,-175,-179,-181,-180,-180,-181,-179,-177,-178,-180,-179,-180,-179,-180,-179,72,72,-172,-173,-174,-176,-182,-180,-179,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'class_method_stmt':([292,308,325,327,],[309,309,309,344,]),'statements':([0,],[24,]),'class_mlhs':([170,253,],[209,209,]),'func_stmt':([152,188,233,235,],[189,189,189,265,]),'class_func':([170,253,],[211,211,]),'opt_then':([84,301,],[160,322,]),'mlhs':([0,33,38,78,133,152,157,160,168,188,233,235,260,303,317,322,],[2,88,2,2,2,2,2,2,2,2,2,2,2,2,2,2,]),'func_defn':([0,78,],[37,37,]),'puts_stmt':([0,38,78,133,152,157,160,168,188,233,235,260,292,303,308,317,322,325,327,],[18,18,18,18,18,18,18,18,18,18,18,18,313,18,313,18,18,313,313,]),'class_method_stmts':([292,308,325,],[311,326,342,]),'expr10':([0,4,25,27,30,33,38,52,57,58,59,60,61,62,63,66,67,78,85,104,105,106,119,120,121,133,152,157,160,164,168,188,233,235,249,250,260,270,303,317,322,],[14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,179,180,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,]),'expr11':([0,4,25,27,30,33,38,52,57,58,59,60,61,62,63,66,67,68,69,78,85,104,105,106,119,120,121,133,152,157,160,164,168,188,233,235,249,250,260,270,303,317,322,],[15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,143,144,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,]),'expr13':([0,4,25,27,30,33,38,52,57,58,59,60,61,62,63,66,67,68,69,70,71,72,78,85,104,105,106,119,120,121,133,152,157,160,164,168,188,233,235,249,250,260,270,303,317,322,],[16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,145,146,147,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,]),'top_stmts':([0,78,],[17,17,]),'array':([0,4,25,27,30,33,38,44,51,52,57,58,59,60,61,62,63,66,67,68,69,70,71,72,78,85,104,105,106,113,119,120,121,122,128,133,152,157,160,164,168,175,176,177,182,184,188,191,233,235,249,250,256,260,270,303,317,322,],[26,55,55,55,55,26,26,116,126,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,26,55,55,55,55,116,55,55,55,126,116,26,26,26,26,55,26,116,116,116,228,116,26,116,26,26,55,55,228,26,55,26,26,26,]),'class_mrhs':([252,],[287,]),'str_expr':([33,52,164,],[89,89,89,]),'class_method_mrhs':([335,],[350,]),'for_range':([182,256,],[226,293,]),'class_method_mlhs':([292,308,325,327,],[315,315,315,315,]),'expr3':([0,4,25,27,30,33,38,52,66,67,78,133,152,157,160,164,168,188,233,235,249,250,260,270,303,317,322,],[41,54,83,84,41,41,41,41,141,142,41,41,41,41,41,41,41,41,41,41,277,278,41,301,41,41,41,]),'literal':([252,312,335,346,347,348,],[286,331,352,357,358,359,]),'program':([0,],[5,]),'expr6':([0,4,25,27,30,33,38,52,63,66,67,78,104,105,106,133,152,157,160,164,168,188,233,235,249,250,260,270,303,317,322,],[43,43,43,43,43,43,43,43,43,43,43,43,43,172,173,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,]),'expr7':([0,4,25,27,30,33,38,52,57,58,59,62,63,66,67,78,85,104,105,106,133,152,157,160,164,168,188,233,235,249,250,260,270,303,317,322,],[7,7,7,7,7,7,7,7,134,135,136,139,7,7,7,7,161,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,]),'fname':([0,21,38,52,78,133,152,157,160,168,188,213,233,235,260,303,317,322,],[44,75,44,128,44,44,44,44,44,44,44,255,44,44,44,44,44,44,]),'expr5':([0,4,25,27,30,33,38,52,63,66,67,78,104,133,152,157,160,164,168,188,233,235,249,250,260,270,303,317,322,],[45,45,45,45,45,45,45,45,140,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,]),'func_call_stmt':([0,38,78,133,152,157,160,168,188,233,235,260,303,317,322,],[32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,]),'expr8':([0,4,25,27,30,33,38,52,57,58,59,60,61,62,63,66,67,78,85,104,105,106,133,152,157,160,164,168,188,233,235,249,250,260,270,303,317,322,],[46,46,46,46,46,46,46,46,46,46,46,137,138,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,]),'expr9':([0,4,25,27,30,33,38,52,57,58,59,60,61,62,63,66,67,78,85,104,105,106,119,133,152,157,160,164,168,188,233,235,249,250,260,270,303,317,322,],[47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,178,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,]),'arguments':([75,151,154,162,195,200,247,248,255,291,],[152,187,196,201,241,245,273,275,292,307,]),'terms':([24,100,186,190,197,198,209,212,234,263,298,311,315,323,326,336,340,342,],[78,168,168,235,168,168,251,253,235,235,168,327,334,168,327,168,168,327,]),'expr4':([0,4,25,27,30,33,38,52,66,67,78,104,133,152,157,160,164,168,188,233,235,249,250,260,270,303,317,322,],[8,8,8,8,8,8,8,8,8,8,8,171,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,]),'exit_stmt':([0,38,78,133,152,157,160,168,188,233,235,260,303,317,322,],[49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,]),'top_compstmt':([0,78,],[19,19,]),'term':([24,78,100,168,186,190,197,198,209,212,234,235,251,253,263,298,311,315,323,326,327,334,336,340,342,],[77,155,77,155,77,77,77,77,77,77,77,155,155,155,77,77,77,77,77,77,155,155,77,77,77,]),'stmt':([0,38,78,133,152,157,160,168,188,233,235,260,303,317,322,],[20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,]),'primary':([44,113,128,175,176,177,184,191,],[111,111,111,217,220,221,111,111,]),'multi_var':([51,122,],[124,181,]),'mrhs':([33,52,164,],[94,129,129,]),'class_stmts':([170,],[212,]),'loop_stmt':([0,38,78,133,152,157,160,168,188,233,235,260,303,317,322,],[9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,]),'elsif_tail':([244,354,],[271,362,]),'func_ret_arg':([44,113,128,184,191,],[115,174,185,231,237,]),'class_method_arg_expr':([312,348,],[333,360,]),'opt_do':([54,83,226,293,],[133,157,260,317,]),'uexpr':([0,4,25,27,30,33,38,52,57,58,59,60,61,62,63,66,67,68,69,70,71,72,78,85,104,105,106,119,120,121,133,152,157,160,164,168,188,233,235,249,250,260,270,303,317,322,],[10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,]),'none':([0,4,24,25,27,30,33,38,52,57,58,59,60,61,62,63,66,67,68,69,70,71,72,78,85,100,104,105,106,119,120,121,133,152,157,160,164,168,170,186,188,190,197,198,212,233,234,235,244,249,250,260,263,270,271,292,298,303,308,311,317,322,323,325,326,336,340,342,354,],[34,34,81,34,34,34,34,99,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,81,34,34,34,34,34,34,99,193,99,99,34,34,208,81,193,81,81,81,81,193,81,34,269,34,34,99,81,34,302,316,81,99,316,81,99,99,81,316,81,81,81,81,269,]),'gen_stmts':([38,133,157,160,260,303,317,322,],[100,186,197,198,298,323,336,340,]),'expr':([0,33,38,78,133,152,157,160,168,188,233,235,260,303,317,322,],[35,95,35,35,35,35,35,35,35,35,35,35,35,35,35,35,]),'func_arg_expr':([44,75,113,128,151,154,162,176,184,191,192,195,200,247,248,255,291,],[110,153,110,110,153,153,153,219,110,110,239,153,153,153,153,153,153,]),'top_top_compstmt':([0,],[50,]),'class_stmt':([170,253,],[214,289,]),'opt_terms':([24,100,186,190,197,198,212,234,263,298,311,323,326,336,340,342,],[82,169,232,236,243,244,254,264,299,320,328,341,343,353,354,355,]),'statement':([0,78,],[31,156,]),'class_defn':([0,78,],[36,36,]),'func_stmts':([152,188,233,],[190,234,263,]),'opt_else_stmt':([271,],[304,]),'expr1':([0,30,33,38,52,78,133,152,157,160,164,168,188,233,235,260,303,317,322,],[42,87,92,42,92,42,42,42,42,42,92,42,42,42,42,42,42,42,42,]),'top_stmt':([0,38,78,133,152,157,160,168,188,233,235,260,303,317,322,],[13,102,13,102,194,102,102,206,194,194,194,102,102,102,102,]),'class_method_ret_arg':([312,],[332,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> top_top_compstmt','program',1,'p_program','parser.py',50),
  ('top_top_compstmt -> statements opt_terms','top_top_compstmt',2,'p_top_top_compstmt','parser.py',59),
  ('statements -> statement','statements',1,'p_statements','parser.py',68),
  ('statements -> statements terms statement','statements',3,'p_statements','parser.py',69),
  ('statement -> top_compstmt','statement',1,'p_statement','parser.py',79),
  ('statement -> func_defn','statement',1,'p_statement','parser.py',80),
  ('statement -> class_defn','statement',1,'p_statement','parser.py',81),
  ('statement -> VARIABLES DOT VARIABLES OPEN_PAREN arguments CLOSE_PAREN','statement',6,'p_statement','parser.py',82),
  ('statement -> VARIABLES DOT VARIABLES OPEN_PAREN CLOSE_PAREN','statement',5,'p_statement','parser.py',83),
  ('statement -> VARIABLES DOT VARIABLES arguments','statement',4,'p_statement','parser.py',84),
  ('statement -> CONSTANTS DOT KEYWORD_new OPEN_PAREN arguments CLOSE_PAREN','statement',6,'p_statement','parser.py',85),
  ('statement -> CONSTANTS DOT KEYWORD_new OPEN_PAREN CLOSE_PAREN','statement',5,'p_statement','parser.py',86),
  ('statement -> CONSTANTS DOT KEYWORD_new arguments','statement',4,'p_statement','parser.py',87),
  ('func_defn -> KEYWORD_def fname OPEN_PAREN arguments CLOSE_PAREN func_stmts opt_terms KEYWORD_end','func_defn',8,'p_func_defn','parser.py',96),
  ('func_defn -> KEYWORD_def fname OPEN_PAREN CLOSE_PAREN func_stmts opt_terms KEYWORD_end','func_defn',7,'p_func_defn','parser.py',97),
  ('func_defn -> KEYWORD_def fname arguments func_stmts opt_terms KEYWORD_end','func_defn',6,'p_func_defn','parser.py',98),
  ('class_defn -> KEYWORD_class CONSTANTS newline class_stmts opt_terms KEYWORD_end','class_defn',6,'p_class_defn','parser.py',107),
  ('class_stmts -> class_stmt','class_stmts',1,'p_class_stmts','parser.py',119),
  ('class_stmts -> class_stmts terms class_stmt','class_stmts',3,'p_class_stmts','parser.py',120),
  ('class_stmts -> none','class_stmts',1,'p_class_stmts','parser.py',121),
  ('class_stmt -> class_mlhs EQUAL class_mrhs','class_stmt',3,'p_class_stmt','parser.py',131),
  ('class_stmt -> class_func','class_stmt',1,'p_class_stmt','parser.py',132),
  ('class_mrhs -> literal','class_mrhs',1,'p_class_mrhs','parser.py',141),
  ('literal -> INT_CONSTANTS','literal',1,'p_literal','parser.py',150),
  ('literal -> FLOAT_CONSTANTS','literal',1,'p_literal','parser.py',151),
  ('literal -> STRING_CONSTANTS','literal',1,'p_literal','parser.py',152),
  ('literal -> BOOLEAN_CONSTANTS','literal',1,'p_literal','parser.py',153),
  ('literal -> CHAR_CONSTANTS','literal',1,'p_literal','parser.py',154),
  ('literal -> SIGIL_AT','literal',1,'p_literal','parser.py',155),
  ('literal -> SIGIL_DOUBLE_AT','literal',1,'p_literal','parser.py',156),
  ('class_mlhs -> class_mlhs terms SIGIL_DOUBLE_AT','class_mlhs',3,'p_class_mlhs','parser.py',165),
  ('class_mlhs -> SIGIL_DOUBLE_AT','class_mlhs',1,'p_class_mlhs','parser.py',166),
  ('class_func -> KEYWORD_def fname OPEN_PAREN arguments CLOSE_PAREN class_method_stmts opt_terms KEYWORD_end','class_func',8,'p_class_func','parser.py',176),
  ('class_func -> KEYWORD_def fname arguments class_method_stmts opt_terms KEYWORD_end','class_func',6,'p_class_func','parser.py',177),
  ('class_func -> KEYWORD_def fname OPEN_PAREN CLOSE_PAREN class_method_stmts opt_terms KEYWORD_end','class_func',7,'p_class_func','parser.py',178),
  ('class_method_stmts -> class_method_stmt','class_method_stmts',1,'p_class_method_stmts','parser.py',187),
  ('class_method_stmts -> class_method_stmts terms class_method_stmt','class_method_stmts',3,'p_class_method_stmts','parser.py',188),
  ('class_method_stmts -> none','class_method_stmts',1,'p_class_method_stmts','parser.py',189),
  ('class_method_stmt -> class_method_mlhs EQUAL class_method_mrhs','class_method_stmt',3,'p_class_method_stmt','parser.py',198),
  ('class_method_stmt -> KEYWORD_return class_method_ret_arg','class_method_stmt',2,'p_class_method_stmt','parser.py',199),
  ('class_method_stmt -> puts_stmt','class_method_stmt',1,'p_class_method_stmt','parser.py',200),
  ('class_method_mlhs -> class_method_mlhs terms SIGIL_AT','class_method_mlhs',3,'p_class_method_mlhs','parser.py',209),
  ('class_method_mlhs -> SIGIL_AT','class_method_mlhs',1,'p_class_method_mlhs','parser.py',210),
  ('class_method_mlhs -> SIGIL_DOUBLE_AT','class_method_mlhs',1,'p_class_method_mlhs','parser.py',211),
  ('class_method_mrhs -> literal','class_method_mrhs',1,'p_class_method_mrhs','parser.py',220),
  ('class_method_mrhs -> VARIABLES','class_method_mrhs',1,'p_class_method_mrhs','parser.py',221),
  ('class_method_ret_arg -> class_method_arg_expr','class_method_ret_arg',1,'p_class_method_ret_arg','parser.py',230),
  ('class_method_ret_arg -> literal','class_method_ret_arg',1,'p_class_method_ret_arg','parser.py',231),
  ('class_method_ret_arg -> class_method_ret_arg COMMA class_method_arg_expr','class_method_ret_arg',3,'p_class_method_ret_arg','parser.py',232),
  ('class_method_ret_arg -> class_method_ret_arg COMMA literal','class_method_ret_arg',3,'p_class_method_ret_arg','parser.py',233),
  ('class_method_arg_expr -> SIGIL_AT EQUAL literal','class_method_arg_expr',3,'p_class_method_arg_expr','parser.py',243),
  ('class_method_arg_expr -> SIGIL_DOUBLE_AT EQUAL literal','class_method_arg_expr',3,'p_class_method_arg_expr','parser.py',244),
  ('fname -> VARIABLES','fname',1,'p_fname','parser.py',255),
  ('fname -> CONSTANTS','fname',1,'p_fname','parser.py',256),
  ('arguments -> arguments COMMA VARIABLES','arguments',3,'p_arguments','parser.py',265),
  ('arguments -> arguments COMMA CONSTANTS','arguments',3,'p_arguments','parser.py',266),
  ('arguments -> arguments COMMA func_arg_expr','arguments',3,'p_arguments','parser.py',267),
  ('arguments -> VARIABLES','arguments',1,'p_arguments','parser.py',268),
  ('arguments -> CONSTANTS','arguments',1,'p_arguments','parser.py',269),
  ('arguments -> func_arg_expr','arguments',1,'p_arguments','parser.py',270),
  ('arguments -> newline','arguments',1,'p_arguments','parser.py',271),
  ('func_arg_expr -> VARIABLES EQUAL primary','func_arg_expr',3,'p_func_arg_expr','parser.py',283),
  ('func_arg_expr -> CONSTANTS EQUAL primary','func_arg_expr',3,'p_func_arg_expr','parser.py',284),
  ('top_compstmt -> top_stmts','top_compstmt',1,'p_top_compstmt','parser.py',293),
  ('top_stmts -> top_stmt','top_stmts',1,'p_top_stmts','parser.py',302),
  ('top_stmt -> stmt','top_stmt',1,'p_top_stmt','parser.py',311),
  ('top_stmt -> KEYWORD_if expr3 opt_then gen_stmts opt_terms elsif_tail opt_else_stmt KEYWORD_end','top_stmt',8,'p_top_stmt','parser.py',312),
  ('top_stmt -> KEYWORD_while expr3 opt_do gen_stmts opt_terms KEYWORD_end','top_stmt',6,'p_top_stmt','parser.py',313),
  ('top_stmt -> top_stmt KEYWORD_while expr3','top_stmt',3,'p_top_stmt','parser.py',314),
  ('top_stmt -> KEYWORD_begin gen_stmts opt_terms KEYWORD_end KEYWORD_while expr3','top_stmt',6,'p_top_stmt','parser.py',315),
  ('top_stmt -> top_stmt KEYWORD_until expr3','top_stmt',3,'p_top_stmt','parser.py',316),
  ('top_stmt -> KEYWORD_until expr3 opt_do gen_stmts opt_terms KEYWORD_end','top_stmt',6,'p_top_stmt','parser.py',317),
  ('top_stmt -> KEYWORD_begin gen_stmts opt_terms KEYWORD_end KEYWORD_until expr3','top_stmt',6,'p_top_stmt','parser.py',318),
  ('top_stmt -> KEYWORD_for OPEN_PAREN multi_var CLOSE_PAREN KEYWORD_in for_range opt_do gen_stmts opt_terms KEYWORD_end','top_stmt',10,'p_top_stmt','parser.py',319),
  ('top_stmt -> KEYWORD_for multi_var KEYWORD_in for_range opt_do gen_stmts opt_terms KEYWORD_end','top_stmt',8,'p_top_stmt','parser.py',320),
  ('gen_stmts -> top_stmt','gen_stmts',1,'p_gen_stmts','parser.py',331),
  ('gen_stmts -> gen_stmts terms top_stmt','gen_stmts',3,'p_gen_stmts','parser.py',332),
  ('gen_stmts -> none','gen_stmts',1,'p_gen_stmts','parser.py',333),
  ('stmt -> expr','stmt',1,'p_stmt','parser.py',342),
  ('stmt -> expr1','stmt',1,'p_stmt','parser.py',343),
  ('stmt -> puts_stmt','stmt',1,'p_stmt','parser.py',344),
  ('stmt -> loop_stmt','stmt',1,'p_stmt','parser.py',345),
  ('stmt -> exit_stmt','stmt',1,'p_stmt','parser.py',346),
  ('stmt -> func_call_stmt','stmt',1,'p_stmt','parser.py',347),
  ('func_call_stmt -> fname OPEN_PAREN func_ret_arg CLOSE_PAREN','func_call_stmt',4,'p_func_call_stmt','parser.py',357),
  ('func_call_stmt -> fname func_ret_arg','func_call_stmt',2,'p_func_call_stmt','parser.py',358),
  ('func_call_stmt -> mlhs EQUAL fname OPEN_PAREN func_ret_arg CLOSE_PAREN','func_call_stmt',6,'p_func_call_stmt','parser.py',359),
  ('func_call_stmt -> mlhs EQUAL fname func_ret_arg','func_call_stmt',4,'p_func_call_stmt','parser.py',360),
  ('loop_stmt -> KEYWORD_break','loop_stmt',1,'p_loop_stmt','parser.py',369),
  ('loop_stmt -> KEYWORD_next','loop_stmt',1,'p_loop_stmt','parser.py',370),
  ('loop_stmt -> KEYWORD_redo','loop_stmt',1,'p_loop_stmt','parser.py',371),
  ('exit_stmt -> KEYWORD_exit','exit_stmt',1,'p_exit_stmt','parser.py',380),
  ('puts_stmt -> KEYWORD_puts mrhs','puts_stmt',2,'p_puts_stmt','parser.py',390),
  ('puts_stmt -> KEYWORD_puts expr','puts_stmt',2,'p_puts_stmt','parser.py',391),
  ('func_stmts -> func_stmt','func_stmts',1,'p_func_stmts','parser.py',402),
  ('func_stmts -> func_stmts terms func_stmt','func_stmts',3,'p_func_stmts','parser.py',403),
  ('func_stmts -> none','func_stmts',1,'p_func_stmts','parser.py',404),
  ('func_stmt -> top_stmt','func_stmt',1,'p_func_stmt','parser.py',413),
  ('func_stmt -> KEYWORD_return func_ret_arg','func_stmt',2,'p_func_stmt','parser.py',414),
  ('func_ret_arg -> func_arg_expr','func_ret_arg',1,'p_func_ret_arg','parser.py',423),
  ('func_ret_arg -> primary','func_ret_arg',1,'p_func_ret_arg','parser.py',424),
  ('func_ret_arg -> func_ret_arg COMMA func_arg_expr','func_ret_arg',3,'p_func_ret_arg','parser.py',425),
  ('func_ret_arg -> func_ret_arg COMMA primary','func_ret_arg',3,'p_func_ret_arg','parser.py',426),
  ('opt_else_stmt -> KEYWORD_else gen_stmts opt_terms','opt_else_stmt',3,'p_opt_else_stmt','parser.py',436),
  ('opt_else_stmt -> none','opt_else_stmt',1,'p_opt_else_stmt','parser.py',437),
  ('elsif_tail -> none','elsif_tail',1,'p_elsif_tail','parser.py',447),
  ('elsif_tail -> KEYWORD_elsif expr3 opt_then gen_stmts opt_terms elsif_tail','elsif_tail',6,'p_elsif_tail','parser.py',448),
  ('opt_then -> KEYWORD_then','opt_then',1,'p_opt_then','parser.py',457),
  ('opt_then -> newline','opt_then',1,'p_opt_then','parser.py',458),
  ('opt_do -> KEYWORD_do','opt_do',1,'p_opt_do','parser.py',470),
  ('opt_do -> newline','opt_do',1,'p_opt_do','parser.py',471),
  ('multi_var -> VARIABLES','multi_var',1,'p_multi_var','parser.py',483),
  ('multi_var -> CONSTANTS','multi_var',1,'p_multi_var','parser.py',484),
  ('multi_var -> array','multi_var',1,'p_multi_var','parser.py',485),
  ('multi_var -> multi_var COMMA VARIABLES','multi_var',3,'p_multi_var','parser.py',486),
  ('multi_var -> multi_var COMMA CONSTANTS','multi_var',3,'p_multi_var','parser.py',487),
  ('for_range -> OPEN_PAREN INT_CONSTANTS DOUBLEDOT INT_CONSTANTS CLOSE_PAREN','for_range',5,'p_for_range','parser.py',496),
  ('for_range -> INT_CONSTANTS DOUBLEDOT INT_CONSTANTS','for_range',3,'p_for_range','parser.py',497),
  ('for_range -> OPEN_PAREN INT_CONSTANTS TRIPLEDOT INT_CONSTANTS CLOSE_PAREN','for_range',5,'p_for_range','parser.py',498),
  ('for_range -> INT_CONSTANTS TRIPLEDOT INT_CONSTANTS','for_range',3,'p_for_range','parser.py',499),
  ('for_range -> VARIABLES','for_range',1,'p_for_range','parser.py',500),
  ('for_range -> array','for_range',1,'p_for_range','parser.py',501),
  ('for_range -> CONSTANTS','for_range',1,'p_for_range','parser.py',502),
  ('expr -> mlhs EQUAL mrhs','expr',3,'p_expr','parser.py',511),
  ('mlhs -> VARIABLES','mlhs',1,'p_mlhs','parser.py',545),
  ('mlhs -> CONSTANTS','mlhs',1,'p_mlhs','parser.py',546),
  ('mlhs -> array','mlhs',1,'p_mlhs','parser.py',547),
  ('mrhs -> expr1','mrhs',1,'p_mrhs','parser.py',563),
  ('mrhs -> str_expr','mrhs',1,'p_mrhs','parser.py',564),
  ('mrhs -> KEYWORD_gets','mrhs',1,'p_mrhs','parser.py',565),
  ('mrhs -> OPEN_BRACKET CLOSE_BRACKET','mrhs',2,'p_mrhs','parser.py',566),
  ('mrhs -> VARIABLES DOT VARIABLES OPEN_PAREN arguments CLOSE_PAREN','mrhs',6,'p_mrhs','parser.py',567),
  ('mrhs -> VARIABLES DOT VARIABLES OPEN_PAREN CLOSE_PAREN','mrhs',5,'p_mrhs','parser.py',568),
  ('mrhs -> VARIABLES DOT VARIABLES','mrhs',3,'p_mrhs','parser.py',569),
  ('mrhs -> CONSTANTS DOT KEYWORD_new OPEN_PAREN arguments CLOSE_PAREN','mrhs',6,'p_mrhs','parser.py',570),
  ('mrhs -> CONSTANTS DOT KEYWORD_new','mrhs',3,'p_mrhs','parser.py',571),
  ('mrhs -> CONSTANTS DOT KEYWORD_new OPEN_PAREN CLOSE_PAREN','mrhs',5,'p_mrhs','parser.py',572),
  ('str_expr -> STRING_CONSTANTS','str_expr',1,'p_str_expr','parser.py',593),
  ('primary -> INT_CONSTANTS','primary',1,'p_primary','parser.py',605),
  ('primary -> FLOAT_CONSTANTS','primary',1,'p_primary','parser.py',606),
  ('primary -> STRING_CONSTANTS','primary',1,'p_primary','parser.py',607),
  ('primary -> CHAR_CONSTANTS','primary',1,'p_primary','parser.py',608),
  ('primary -> BOOLEAN_CONSTANTS','primary',1,'p_primary','parser.py',609),
  ('primary -> CONSTANTS','primary',1,'p_primary','parser.py',610),
  ('primary -> VARIABLES','primary',1,'p_primary','parser.py',611),
  ('primary -> array','primary',1,'p_primary','parser.py',612),
  ('expr1 -> expr3','expr1',1,'p_expr1','parser.py',648),
  ('expr3 -> expr3 LOGICALOR expr4','expr3',3,'p_expr3','parser.py',669),
  ('expr3 -> expr4','expr3',1,'p_expr3','parser.py',670),
  ('expr4 -> expr4 LOGICALAND expr5','expr4',3,'p_expr4','parser.py',694),
  ('expr4 -> expr5','expr4',1,'p_expr4','parser.py',695),
  ('expr5 -> expr6 DOUBLEEQUAL expr6','expr5',3,'p_expr5','parser.py',718),
  ('expr5 -> expr6 NOTEQUAL expr6','expr5',3,'p_expr5','parser.py',719),
  ('expr5 -> expr6','expr5',1,'p_expr5','parser.py',720),
  ('expr6 -> expr7 LESSEQUAL expr7','expr6',3,'p_expr6','parser.py',745),
  ('expr6 -> expr7 LESS expr7','expr6',3,'p_expr6','parser.py',746),
  ('expr6 -> expr7 GREATER expr7','expr6',3,'p_expr6','parser.py',747),
  ('expr6 -> expr7 GREATEREQUAL expr7','expr6',3,'p_expr6','parser.py',748),
  ('expr6 -> expr7','expr6',1,'p_expr6','parser.py',749),
  ('expr6 -> BOOLEAN_CONSTANTS','expr6',1,'p_expr6','parser.py',750),
  ('expr7 -> expr7 BITXOR expr8','expr7',3,'p_expr7','parser.py',788),
  ('expr7 -> expr7 PIPE expr8','expr7',3,'p_expr7','parser.py',789),
  ('expr7 -> expr8','expr7',1,'p_expr7','parser.py',790),
  ('expr8 -> expr8 BITAND expr9','expr8',3,'p_expr8','parser.py',805),
  ('expr8 -> expr9','expr8',1,'p_expr8','parser.py',806),
  ('expr9 -> expr9 SHIFTL expr10','expr9',3,'p_expr9','parser.py',821),
  ('expr9 -> expr9 SHIFTR expr10','expr9',3,'p_expr9','parser.py',822),
  ('expr9 -> expr10','expr9',1,'p_expr9','parser.py',823),
  ('expr10 -> expr10 PLUS expr11','expr10',3,'p_expr10','parser.py',838),
  ('expr10 -> expr10 MINUS expr11','expr10',3,'p_expr10','parser.py',839),
  ('expr10 -> expr11','expr10',1,'p_expr10','parser.py',840),
  ('expr11 -> expr11 MULTIPLY expr13','expr11',3,'p_expr11','parser.py',855),
  ('expr11 -> expr11 DIV expr13','expr11',3,'p_expr11','parser.py',856),
  ('expr11 -> expr11 MOD expr13','expr11',3,'p_expr11','parser.py',857),
  ('expr11 -> expr13','expr11',1,'p_expr11','parser.py',858),
  ('expr13 -> OPEN_PAREN expr1 CLOSE_PAREN','expr13',3,'p_expr13','parser.py',886),
  ('expr13 -> uexpr INT_CONSTANTS','expr13',2,'p_expr13','parser.py',887),
  ('expr13 -> uexpr FLOAT_CONSTANTS','expr13',2,'p_expr13','parser.py',888),
  ('expr13 -> CONSTANTS','expr13',1,'p_expr13','parser.py',889),
  ('expr13 -> VARIABLES','expr13',1,'p_expr13','parser.py',890),
  ('expr13 -> array','expr13',1,'p_expr13','parser.py',891),
  ('array -> VARIABLES OPEN_BRACKET expr7 CLOSE_BRACKET','array',4,'p_array','parser.py',926),
  ('uexpr -> none','uexpr',1,'p_uexpr','parser.py',942),
  ('uexpr -> PLUS','uexpr',1,'p_uexpr','parser.py',943),
  ('uexpr -> MINUS','uexpr',1,'p_uexpr','parser.py',944),
  ('uexpr -> BITNOT','uexpr',1,'p_uexpr','parser.py',945),
  ('uexpr -> BITCOMP','uexpr',1,'p_uexpr','parser.py',946),
  ('opt_terms -> none','opt_terms',1,'p_opt_terms','parser.py',960),
  ('opt_terms -> terms','opt_terms',1,'p_opt_terms','parser.py',961),
  ('terms -> term','terms',1,'p_terms','parser.py',970),
  ('terms -> terms term','terms',2,'p_terms','parser.py',971),
  ('term -> DELIM','term',1,'p_term','parser.py',980),
  ('term -> newline','term',1,'p_term','parser.py',981),
  ('none -> <empty>','none',0,'p_none','parser.py',993),
]
