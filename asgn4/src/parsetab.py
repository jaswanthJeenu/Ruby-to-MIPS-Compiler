
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = 'A517C561D3913A4095FECFA98C1671C6'
    
_lr_action_items = {'KEYWORD_exit':([0,64,65,66,67,115,117,118,119,146,147,148,152,153,178,201,211,212,216,237,285,300,310,],[17,-179,17,-182,-181,-180,-114,-113,-90,-116,-115,-94,17,17,17,-96,17,17,17,17,17,-111,17,]),'NOTEQUAL':([5,8,10,11,12,19,21,35,38,39,45,53,54,70,72,73,79,86,98,101,102,103,104,105,106,107,108,109,110,111,112,122,132,133,134,154,157,158,185,186,],[-148,-149,-157,-160,-164,-170,-169,89,-152,-154,-168,-166,-167,-169,-170,-168,-169,-168,-169,-168,-147,-146,-145,-151,-150,-144,-158,-159,-161,-162,-163,-165,-153,-156,-155,-171,-169,-168,-168,-169,]),'SIGIL_DOUBLE_AT':([64,66,67,115,127,149,150,179,180,196,197,198,236,243,244,253,255,269,277,278,289,290,291,],[-179,-182,-181,-180,163,-58,-58,-57,-56,223,228,163,258,-55,-54,258,272,258,228,258,228,228,272,]),'FLOAT_CONSTANTS':([0,2,4,7,20,22,23,26,27,32,46,47,48,49,50,51,52,55,56,57,58,59,60,64,65,66,67,74,88,89,90,91,92,93,94,115,117,118,119,123,146,147,148,152,153,178,187,189,197,201,211,212,216,237,255,267,277,285,289,290,291,300,310,],[-183,-174,-173,54,-183,-176,-183,-183,-172,-175,-183,-183,-183,-183,-183,-183,-183,-183,-183,-183,-183,-183,-183,-179,-183,-182,-181,-183,-183,-183,-183,-183,-183,-183,-183,-180,-114,-113,-90,-183,-116,-115,-94,-183,-183,-183,-172,-172,227,-96,-183,-183,-183,-183,227,-183,227,-183,227,227,227,-111,-183,]),'EQUAL':([1,19,21,45,77,79,86,154,162,163,185,186,223,257,258,260,271,272,292,],[46,-124,-122,-123,123,-122,-123,-171,197,-29,-123,-122,-28,277,-41,-40,289,290,-39,]),'OPEN_BRACKET':([21,26,46,70,79,98,123,140,157,186,],[74,80,80,74,74,74,80,74,74,74,]),'MULTIPLY':([11,12,19,21,45,53,54,70,72,73,79,86,98,101,108,109,110,111,112,122,154,157,158,185,186,],[57,-164,-170,-169,-168,-166,-167,-169,-170,-168,-169,-168,-169,-168,57,57,-161,-162,-163,-165,-171,-169,-168,-168,-169,]),'KEYWORD_in':([95,],[135,]),'SHIFTL':([10,11,12,19,21,39,45,53,54,70,72,73,79,86,98,101,108,109,110,111,112,122,132,133,134,154,157,158,185,186,],[-157,-160,-164,-170,-169,94,-168,-166,-167,-169,-170,-168,-169,-168,-169,-168,-158,-159,-161,-162,-163,-165,94,-156,-155,-171,-169,-168,-168,-169,]),'BITXOR':([5,10,11,12,19,21,38,39,45,53,54,70,72,73,79,86,98,101,102,103,104,105,106,107,108,109,110,111,112,120,122,132,133,134,154,157,158,185,186,],[51,-157,-160,-164,-170,-169,-152,-154,-168,-166,-167,-169,-170,-168,-169,-168,-169,-168,51,51,51,-151,-150,51,-158,-159,-161,-162,-163,51,-165,-153,-156,-155,-171,-169,-168,-168,-169,]),'KEYWORD_end':([5,6,8,10,11,12,13,14,17,19,25,28,33,34,35,36,37,38,39,40,41,53,54,64,66,67,68,70,72,73,78,79,81,82,83,84,85,86,98,99,101,102,103,104,105,106,107,108,109,110,111,112,115,117,118,119,122,125,127,128,129,130,131,132,133,134,136,138,139,140,143,146,147,148,149,150,152,153,154,157,158,159,160,161,164,165,167,174,178,179,180,182,183,185,186,187,188,189,190,191,198,199,201,204,207,208,211,212,213,214,215,216,217,220,222,224,225,226,227,228,229,230,231,232,233,236,237,241,242,243,244,245,246,248,249,250,251,253,254,256,259,261,262,263,264,266,268,269,270,271,272,273,274,275,278,279,280,281,284,285,286,287,288,293,294,295,296,297,298,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,],[-148,-104,-149,-157,-160,-164,-103,-86,-72,-170,-106,-101,-136,-102,-143,-138,-140,-152,-154,-71,-105,-166,-167,-179,-182,-181,-177,-169,-170,-168,-126,-169,-125,-127,-73,-74,-135,-168,-169,-121,-168,-147,-146,-145,-151,-150,-144,-158,-159,-161,-162,-163,-180,-114,-113,-90,-165,-128,-183,-137,-142,-141,-139,-153,-156,-155,-83,-82,-81,-84,-85,-116,-115,-94,-58,-58,-183,-183,-171,-169,-168,-131,-133,-17,-19,-183,-15,-64,-183,-57,-56,-183,-78,-168,-169,-77,-75,-100,-183,-98,-178,234,-96,-62,-64,-183,-183,-178,247,-80,-79,-178,-91,-130,-134,-26,-24,-21,-22,-27,-23,-20,-18,-25,-16,-183,-183,-63,263,-55,-54,-183,-76,-99,-183,-129,-132,-183,-33,-35,-183,-38,-183,-95,282,-109,-183,-183,-183,-26,-27,-45,-37,-44,-178,297,298,-88,-108,-183,302,-183,304,-36,-43,-42,-34,-31,-97,-111,-183,-92,313,-32,-48,-49,-47,-46,-89,-183,-107,-87,-30,-183,-112,-183,-110,]),'DIV':([11,12,19,21,45,53,54,70,72,73,79,86,98,101,108,109,110,111,112,122,154,157,158,185,186,],[58,-164,-170,-169,-168,-166,-167,-169,-170,-168,-169,-168,-169,-168,58,58,-161,-162,-163,-165,-171,-169,-168,-168,-169,]),'KEYWORD_if':([0,64,65,66,67,115,117,118,119,146,147,148,152,153,178,201,211,212,216,237,285,300,310,],[20,-179,20,-182,-181,-180,-114,-113,-90,-116,-115,-94,20,20,20,-96,20,20,20,20,20,-111,20,]),'CHAR_CONSTANTS':([197,255,277,289,290,291,],[232,232,232,232,232,232,]),'MINUS':([0,10,11,12,19,20,21,23,26,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,64,65,66,67,70,72,73,74,79,86,88,89,90,91,92,93,94,98,101,108,109,110,111,112,115,117,118,119,122,123,133,134,146,147,148,152,153,154,157,158,178,185,186,201,211,212,216,237,267,285,300,310,],[2,56,-160,-164,-170,2,-169,2,2,-168,2,2,2,2,2,2,2,-166,-167,2,2,2,2,2,2,-179,2,-182,-181,-169,-170,-168,2,-169,-168,2,2,2,2,2,2,2,-169,-168,-158,-159,-161,-162,-163,-180,-114,-113,-90,-165,2,56,56,-116,-115,-94,2,2,-171,-169,-168,2,-168,-169,-96,2,2,2,2,2,2,-111,2,]),'KEYWORD_while':([0,15,64,65,66,67,115,117,118,119,146,147,148,152,153,178,201,211,212,216,237,285,300,310,],[-93,60,-179,-93,-182,-181,-180,-114,-113,-90,-116,-115,-94,-93,-93,-93,-96,-93,-93,-93,-93,-93,-111,-93,]),'KEYWORD_return':([64,66,67,115,149,150,152,179,180,211,212,236,243,244,253,269,278,],[-179,-182,-181,-180,-58,-58,184,-57,-56,184,184,255,-55,-54,255,255,255,]),'DOUBLEDOT':([168,169,171,172,],[-118,-119,-120,202,]),'GREATEREQUAL':([5,10,11,12,19,21,38,39,45,53,54,70,72,73,79,86,98,101,105,106,108,109,110,111,112,122,132,133,134,154,157,158,185,186,],[47,-157,-160,-164,-170,-169,-152,-154,-168,-166,-167,-169,-170,-168,-169,-168,-169,-168,-151,-150,-158,-159,-161,-162,-163,-165,-153,-156,-155,-171,-169,-168,-168,-169,]),'KEYWORD_class':([0,64,65,66,67,115,],[31,-179,31,-182,-181,-180,]),'VARIABLES':([0,16,20,23,26,43,46,47,48,49,50,51,52,55,56,57,58,59,60,61,62,64,65,66,67,74,75,88,89,90,91,92,93,94,96,114,115,117,118,119,121,123,124,135,144,145,146,147,148,152,153,155,166,175,178,184,194,195,200,201,202,203,209,210,211,212,216,235,237,267,277,285,300,310,],[21,62,70,70,79,95,98,70,70,70,70,70,70,70,70,70,70,70,70,-53,-52,-179,21,-182,-181,70,121,70,70,70,70,70,70,70,140,150,-180,-114,-113,-90,150,157,159,169,150,140,-116,-115,-94,186,186,150,62,150,186,140,150,150,150,-96,169,140,150,150,186,186,186,150,186,70,294,186,-111,186,]),'LESS':([5,10,11,12,19,21,38,39,45,53,54,70,72,73,79,86,98,101,105,106,108,109,110,111,112,122,132,133,134,154,157,158,185,186,],[49,-157,-160,-164,-170,-169,-152,-154,-168,-166,-167,-169,-170,-168,-169,-168,-169,-168,-151,-150,-158,-159,-161,-162,-163,-165,-153,-156,-155,-171,-169,-168,-168,-169,]),'DELIM':([5,6,8,9,10,11,12,13,14,17,18,19,21,24,25,28,29,30,33,34,35,36,37,38,39,40,41,45,53,54,64,65,66,67,70,72,73,78,79,81,82,83,84,85,86,98,99,101,102,103,104,105,106,107,108,109,110,111,112,115,116,117,118,119,122,125,127,128,129,130,131,132,133,134,136,138,139,140,143,146,147,148,149,150,152,153,154,156,157,158,159,160,161,162,163,164,165,167,174,176,178,179,180,182,183,185,186,187,188,189,190,191,193,196,198,201,204,206,207,208,211,212,214,215,216,218,220,222,223,224,225,226,227,228,229,230,231,232,233,234,236,237,240,241,243,244,245,246,247,248,250,251,253,254,256,257,258,259,260,261,262,263,265,269,270,271,272,273,274,275,276,278,281,282,285,287,292,293,294,295,296,297,298,299,300,301,302,304,305,306,307,308,309,310,312,313,314,],[-148,-104,-149,-5,-157,-160,-164,-103,-86,-72,67,-170,-169,-3,-106,-101,-7,-6,-136,-102,-143,-138,-140,-152,-154,-71,-105,-168,-166,-167,-179,67,-182,-181,-169,-170,-168,-126,-169,-125,-127,-73,-74,-135,-168,-169,-121,-168,-147,-146,-145,-151,-150,-144,-158,-159,-161,-162,-163,-180,-4,-114,-113,-90,-165,-128,-183,-137,-142,-141,-139,-153,-156,-155,-83,-82,-81,-84,-85,-116,-115,-94,-58,-58,-183,-183,-171,-10,-169,-168,-131,-133,-17,67,-29,-19,67,-15,-64,-13,-183,-57,-56,67,-78,-168,-169,-77,-75,-100,67,-98,-9,67,67,-96,-62,-12,-64,67,-183,67,-80,-79,67,-8,-130,-134,-28,-26,-24,-21,-22,-27,-23,-20,-18,-25,-16,-14,-183,-183,-11,-63,-55,-54,67,-76,-61,-99,-129,-132,-183,-33,-35,67,-41,67,-40,-38,67,-95,-51,-183,67,-26,-27,-45,-37,-44,67,67,-88,-60,-183,67,-39,-36,-43,-42,-34,-31,-97,-50,-111,67,-92,-32,-48,-49,-47,-46,-89,-183,-87,-30,67,]),'BITNOT':([0,20,23,26,46,47,48,49,50,51,52,55,56,57,58,59,60,64,65,66,67,74,88,89,90,91,92,93,94,115,117,118,119,123,146,147,148,152,153,178,201,211,212,216,237,267,285,300,310,],[32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,-179,32,-182,-181,32,32,32,32,32,32,32,32,-180,-114,-113,-90,32,-116,-115,-94,32,32,32,-96,32,32,32,32,32,32,-111,32,]),'BITCOMP':([0,20,23,26,46,47,48,49,50,51,52,55,56,57,58,59,60,64,65,66,67,74,88,89,90,91,92,93,94,115,117,118,119,123,146,147,148,152,153,178,201,211,212,216,237,267,285,300,310,],[22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,-179,22,-182,-181,22,22,22,22,22,22,22,22,-180,-114,-113,-90,22,-116,-115,-94,22,22,22,-96,22,22,22,22,22,22,-111,22,]),'PIPE':([5,10,11,12,19,21,38,39,45,53,54,70,72,73,79,86,98,101,102,103,104,105,106,107,108,109,110,111,112,120,122,132,133,134,154,157,158,185,186,],[50,-157,-160,-164,-170,-169,-152,-154,-168,-166,-167,-169,-170,-168,-169,-168,-169,-168,50,50,50,-151,-150,50,-158,-159,-161,-162,-163,50,-165,-153,-156,-155,-171,-169,-168,-168,-169,]),'CLOSE_BRACKET':([10,11,12,38,39,53,54,70,72,73,80,105,106,108,109,110,111,112,120,122,132,133,134,154,],[-157,-160,-164,-152,-154,-166,-167,-169,-170,-168,125,-151,-150,-158,-159,-161,-162,-163,154,-165,-153,-156,-155,-171,]),'OPEN_PAREN':([0,20,21,23,26,44,45,46,47,48,49,50,51,52,55,56,57,58,59,60,61,62,63,64,65,66,67,74,88,89,90,91,92,93,94,98,100,101,115,117,118,119,121,123,144,146,147,148,152,153,159,160,178,185,186,200,201,211,212,216,237,267,285,300,310,],[23,23,-65,23,23,96,-66,23,23,23,23,23,23,23,23,23,23,23,23,23,-53,-52,114,-179,23,-182,-181,23,23,23,23,23,23,23,23,-65,145,-66,-180,-114,-113,-90,155,23,175,-116,-115,-94,23,23,194,195,23,-66,-65,235,-96,23,23,23,23,23,23,-111,23,]),'PLUS':([0,10,11,12,19,20,21,23,26,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,64,65,66,67,70,72,73,74,79,86,88,89,90,91,92,93,94,98,101,108,109,110,111,112,115,117,118,119,122,123,133,134,146,147,148,152,153,154,157,158,178,185,186,201,211,212,216,237,267,285,300,310,],[4,55,-160,-164,-170,4,-169,4,4,-168,4,4,4,4,4,4,4,-166,-167,4,4,4,4,4,4,-179,4,-182,-181,-169,-170,-168,4,-169,-168,4,4,4,4,4,4,4,-169,-168,-158,-159,-161,-162,-163,-180,-114,-113,-90,-165,4,55,55,-116,-115,-94,4,4,-171,-169,-168,4,-168,-169,-96,4,4,4,4,4,4,-111,4,]),'DOT':([21,45,79,86,98,101,157,158,],[75,97,124,126,124,126,124,126,]),'SIGIL_AT':([64,66,67,115,149,150,179,180,197,236,243,244,253,255,269,276,277,278,289,290,291,],[-179,-182,-181,-180,-58,-58,-57,-56,224,260,-55,-54,260,271,260,292,224,260,224,224,271,]),'COMMA':([136,138,139,140,141,143,149,150,154,173,179,180,224,225,226,227,228,229,232,271,272,273,274,275,305,306,307,308,],[-83,-82,-81,-84,-70,-85,-58,-58,-171,203,209,210,-26,-24,-21,-22,-27,-23,-25,-26,-27,-45,291,-44,-48,-49,-47,-46,]),'KEYWORD_break':([0,64,65,66,67,115,117,118,119,146,147,148,152,153,178,201,211,212,216,237,285,300,310,],[40,-179,40,-182,-181,-180,-114,-113,-90,-116,-115,-94,40,40,40,-96,40,40,40,40,40,-111,40,]),'$end':([3,5,6,8,9,10,11,12,13,14,17,18,19,21,24,25,28,29,30,33,34,35,36,37,38,39,40,41,42,45,53,54,64,65,66,67,68,69,70,72,73,78,79,81,82,83,84,85,86,98,99,101,102,103,104,105,106,107,108,109,110,111,112,115,116,122,125,128,129,130,131,132,133,134,149,150,154,156,157,158,159,160,174,176,179,180,193,204,206,207,218,220,222,234,240,241,243,244,247,250,251,263,265,281,282,298,299,302,309,312,],[0,-148,-104,-149,-5,-157,-160,-164,-103,-86,-72,-183,-170,-169,-3,-106,-101,-7,-6,-136,-102,-143,-138,-140,-152,-154,-71,-105,-1,-168,-166,-167,-179,-178,-182,-181,-177,-2,-169,-170,-168,-126,-169,-125,-127,-73,-74,-135,-168,-169,-121,-168,-147,-146,-145,-151,-150,-144,-158,-159,-161,-162,-163,-180,-4,-165,-128,-137,-142,-141,-139,-153,-156,-155,-58,-58,-171,-10,-169,-168,-131,-133,-64,-13,-57,-56,-9,-62,-12,-64,-8,-130,-134,-14,-11,-63,-55,-54,-61,-129,-132,-95,-51,-88,-60,-97,-50,-92,-89,-87,]),'KEYWORD_puts':([0,64,65,66,67,115,117,118,119,146,147,148,149,150,152,153,178,179,180,201,211,212,216,236,237,243,244,253,269,278,285,300,310,],[26,-179,26,-182,-181,-180,-114,-113,-90,-116,-115,-94,-58,-58,26,26,26,-57,-56,-96,26,26,26,26,26,-55,-54,26,26,26,26,-111,26,]),'KEYWORD_else':([5,6,8,10,11,12,13,14,17,19,25,28,33,34,35,36,37,38,39,40,41,53,54,64,66,67,68,70,72,73,78,79,81,82,83,84,85,86,98,99,101,102,103,104,105,106,107,108,109,110,111,112,115,117,118,119,122,125,128,129,130,131,132,133,134,153,154,157,158,159,160,174,185,186,189,190,191,204,207,216,217,220,222,241,248,249,250,251,263,266,268,281,298,300,302,309,310,312,314,315,316,317,],[-148,-104,-149,-157,-160,-164,-103,-86,-72,-170,-106,-101,-136,-102,-143,-138,-140,-152,-154,-71,-105,-166,-167,-179,-182,-181,-177,-169,-170,-168,-126,-169,-125,-127,-73,-74,-135,-168,-169,-121,-168,-147,-146,-145,-151,-150,-144,-158,-159,-161,-162,-163,-180,-114,-113,-90,-165,-128,-137,-142,-141,-139,-153,-156,-155,-183,-171,-169,-168,-131,-133,-64,-168,-169,-100,-183,-98,-62,-64,-178,-91,-130,-134,-63,-99,-183,-129,-132,-95,-109,285,-88,-97,-111,-92,-89,-183,-87,-183,-112,-183,-110,]),'DOUBLEEQUAL':([5,8,10,11,12,19,21,35,38,39,45,53,54,70,72,73,79,86,98,101,102,103,104,105,106,107,108,109,110,111,112,122,132,133,134,154,157,158,185,186,],[-148,-149,-157,-160,-164,-170,-169,90,-152,-154,-168,-166,-167,-169,-170,-168,-169,-168,-169,-168,-147,-146,-145,-151,-150,-144,-158,-159,-161,-162,-163,-165,-153,-156,-155,-171,-169,-168,-168,-169,]),'LOGICALOR':([5,8,10,11,12,19,21,33,35,36,37,38,39,45,53,54,70,71,72,73,79,86,98,101,102,103,104,105,106,107,108,109,110,111,112,113,122,128,129,130,131,132,133,134,154,157,158,185,186,283,],[-148,-149,-157,-160,-164,-170,-169,88,-143,-138,-140,-152,-154,-168,-166,-167,-169,88,-170,-168,-169,-168,-169,-168,-147,-146,-145,-151,-150,-144,-158,-159,-161,-162,-163,88,-165,-137,-142,-141,-139,-153,-156,-155,-171,-169,-168,-168,-169,88,]),'newline':([5,6,8,9,10,11,12,13,14,17,18,19,21,24,25,28,29,30,33,34,35,36,37,38,39,40,41,45,53,54,64,65,66,67,70,71,72,73,78,79,81,82,83,84,85,86,87,98,99,101,102,103,104,105,106,107,108,109,110,111,112,113,115,116,117,118,119,122,125,127,128,129,130,131,132,133,134,136,138,139,140,143,146,147,148,149,150,152,153,154,156,157,158,159,160,161,162,163,164,165,167,168,169,170,171,174,176,178,179,180,182,183,185,186,187,188,189,190,191,193,196,198,201,204,206,207,208,211,212,214,215,216,218,220,222,223,224,225,226,227,228,229,230,231,232,233,234,236,237,238,240,241,243,244,245,246,247,248,250,251,253,254,256,257,258,259,260,261,262,263,265,269,270,271,272,273,274,275,276,278,281,282,283,285,287,292,293,294,295,296,297,298,299,300,301,302,304,305,306,307,308,309,310,312,313,314,],[-148,-104,-149,-5,-157,-160,-164,-103,-86,-72,66,-170,-169,-3,-106,-101,-7,-6,-136,-102,-143,-138,-140,-152,-154,-71,-105,-168,-166,-167,-179,66,-182,-181,-169,117,-170,-168,-126,-169,-125,-127,-73,-74,-135,-168,127,-169,-121,-168,-147,-146,-145,-151,-150,-144,-158,-159,-161,-162,-163,146,-180,-4,-114,-113,-90,-165,-128,-183,-137,-142,-141,-139,-153,-156,-155,-83,-82,-81,-84,-85,-116,-115,-94,-58,-58,-183,-183,-171,-10,-169,-168,-131,-133,-17,66,-29,-19,66,-15,-118,-119,146,-120,-64,-13,-183,-57,-56,66,-78,-168,-169,-77,-75,-100,66,-98,-9,66,66,-96,-62,-12,-64,66,-183,66,-80,-79,66,-8,-130,-134,-28,-26,-24,-21,-22,-27,-23,-20,-18,-25,-16,-14,-183,-183,-117,-11,-63,-55,-54,66,-76,-61,-99,-129,-132,-183,-33,-35,66,-41,66,-40,-38,66,-95,-51,-183,66,-26,-27,-45,-37,-44,66,66,-88,-60,117,-183,66,-39,-36,-43,-42,-34,-31,-97,-50,-111,66,-92,-32,-48,-49,-47,-46,-89,-183,-87,-30,66,]),'KEYWORD_for':([0,64,65,66,67,115,117,118,119,146,147,148,152,153,178,201,211,212,216,237,285,300,310,],[43,-179,43,-182,-181,-180,-114,-113,-90,-116,-115,-94,43,43,43,-96,43,43,43,43,43,-111,43,]),'KEYWORD_then':([5,8,10,11,12,35,36,37,38,39,53,54,70,71,72,73,102,103,104,105,106,107,108,109,110,111,112,122,128,129,130,131,132,133,134,154,283,],[-148,-149,-157,-160,-164,-143,-138,-140,-152,-154,-166,-167,-169,118,-170,-168,-147,-146,-145,-151,-150,-144,-158,-159,-161,-162,-163,-165,-137,-142,-141,-139,-153,-156,-155,-171,118,]),'LESSEQUAL':([5,10,11,12,19,21,38,39,45,53,54,70,72,73,79,86,98,101,105,106,108,109,110,111,112,122,132,133,134,154,157,158,185,186,],[52,-157,-160,-164,-170,-169,-152,-154,-168,-166,-167,-169,-170,-168,-169,-168,-169,-168,-151,-150,-158,-159,-161,-162,-163,-165,-153,-156,-155,-171,-169,-168,-168,-169,]),'KEYWORD_new':([97,126,],[144,160,]),'CLOSE_PAREN':([5,8,10,11,12,33,35,36,37,38,39,53,54,70,72,73,76,96,102,103,104,105,106,107,108,109,110,111,112,114,122,128,129,130,131,132,133,134,136,137,138,139,140,141,142,143,145,149,150,151,154,155,173,175,177,179,180,181,192,194,195,203,205,219,221,235,239,243,244,252,],[-148,-149,-157,-160,-164,-136,-143,-138,-140,-152,-154,-166,-167,-169,-170,-168,122,-183,-147,-146,-145,-151,-150,-144,-158,-159,-161,-162,-163,152,-165,-137,-142,-141,-139,-153,-156,-155,-83,-69,-82,-81,-84,-70,174,-85,-183,-58,-58,-59,-171,193,-68,206,207,-57,-56,211,218,220,222,-183,240,250,251,253,-67,-55,-54,269,]),'KEYWORD_elsif':([5,6,8,10,11,12,13,14,17,19,25,28,33,34,35,36,37,38,39,40,41,53,54,64,66,67,68,70,72,73,78,79,81,82,83,84,85,86,98,99,101,102,103,104,105,106,107,108,109,110,111,112,115,117,118,119,122,125,128,129,130,131,132,133,134,153,154,157,158,159,160,174,185,186,189,190,191,204,207,216,217,220,222,241,248,249,250,251,263,281,298,300,302,309,310,312,314,315,316,],[-148,-104,-149,-157,-160,-164,-103,-86,-72,-170,-106,-101,-136,-102,-143,-138,-140,-152,-154,-71,-105,-166,-167,-179,-182,-181,-177,-169,-170,-168,-126,-169,-125,-127,-73,-74,-135,-168,-169,-121,-168,-147,-146,-145,-151,-150,-144,-158,-159,-161,-162,-163,-180,-114,-113,-90,-165,-128,-137,-142,-141,-139,-153,-156,-155,-183,-171,-169,-168,-131,-133,-64,-168,-169,-100,-183,-98,-62,-64,-178,-91,-130,-134,-63,-99,267,-129,-132,-95,-88,-97,-111,-92,-89,-183,-87,-183,-112,267,]),'BOOLEAN_CONSTANTS':([0,20,23,26,46,60,64,65,66,67,88,89,90,91,96,115,117,118,119,123,145,146,147,148,152,153,178,184,197,201,203,211,212,216,237,255,267,277,285,289,290,291,300,310,],[8,8,8,8,8,8,-179,8,-182,-181,8,8,8,8,138,-180,-114,-113,-90,8,138,-116,-115,-94,8,8,8,138,225,-96,138,8,8,8,8,225,8,225,8,225,225,225,-111,8,]),'INT_CONSTANTS':([0,2,4,7,20,22,23,26,27,32,46,47,48,49,50,51,52,55,56,57,58,59,60,64,65,66,67,74,88,89,90,91,92,93,94,96,115,117,118,119,123,135,145,146,147,148,152,153,178,184,187,189,197,201,202,203,211,212,216,237,255,267,277,285,289,290,291,300,310,],[-183,-174,-173,53,-183,-176,-183,-183,-172,-175,-183,-183,-183,-183,-183,-183,-183,-183,-183,-183,-183,-183,-183,-179,-183,-182,-181,-183,-183,-183,-183,-183,-183,-183,-183,139,-180,-114,-113,-90,-183,168,139,-116,-115,-94,-183,-183,-183,139,-172,-172,226,-96,168,139,-183,-183,-183,-183,226,-183,226,-183,226,226,226,-111,-183,]),'GREATER':([5,10,11,12,19,21,38,39,45,53,54,70,72,73,79,86,98,101,105,106,108,109,110,111,112,122,132,133,134,154,157,158,185,186,],[48,-157,-160,-164,-170,-169,-152,-154,-168,-166,-167,-169,-170,-168,-169,-168,-169,-168,-151,-150,-158,-159,-161,-162,-163,-165,-153,-156,-155,-171,-169,-168,-168,-169,]),'BITAND':([10,11,12,19,21,38,39,45,53,54,70,72,73,79,86,98,101,105,106,108,109,110,111,112,122,132,133,134,154,157,158,185,186,],[-157,-160,-164,-170,-169,92,-154,-168,-166,-167,-169,-170,-168,-169,-168,-169,-168,92,92,-158,-159,-161,-162,-163,-165,-153,-156,-155,-171,-169,-168,-168,-169,]),'LOGICALAND':([5,8,10,11,12,19,21,35,36,37,38,39,45,53,54,70,72,73,79,86,98,101,102,103,104,105,106,107,108,109,110,111,112,122,128,129,130,131,132,133,134,154,157,158,185,186,],[-148,-149,-157,-160,-164,-170,-169,-143,91,-140,-152,-154,-168,-166,-167,-169,-170,-168,-169,-168,-169,-168,-147,-146,-145,-151,-150,-144,-158,-159,-161,-162,-163,-165,91,-142,-141,-139,-153,-156,-155,-171,-169,-168,-168,-169,]),'SHIFTR':([10,11,12,19,21,39,45,53,54,70,72,73,79,86,98,101,108,109,110,111,112,122,132,133,134,154,157,158,185,186,],[-157,-160,-164,-170,-169,93,-168,-166,-167,-169,-170,-168,-169,-168,-169,-168,-158,-159,-161,-162,-163,-165,93,-156,-155,-171,-169,-168,-168,-169,]),'STRING_CONSTANTS':([26,46,123,197,255,277,289,290,291,],[85,85,85,229,229,229,229,229,229,]),'KEYWORD_def':([0,64,65,66,67,115,127,198,],[16,-179,16,-182,-181,-180,166,166,]),'KEYWORD_do':([5,8,10,11,12,35,36,37,38,39,53,54,70,72,73,102,103,104,105,106,107,108,109,110,111,112,113,122,128,129,130,131,132,133,134,154,168,169,170,171,238,],[-148,-149,-157,-160,-164,-143,-138,-140,-152,-154,-166,-167,-169,-170,-168,-147,-146,-145,-151,-150,-144,-158,-159,-161,-162,-163,147,-165,-137,-142,-141,-139,-153,-156,-155,-171,-118,-119,147,-120,-117,]),'KEYWORD_gets':([26,46,123,],[82,82,82,]),'CONSTANTS':([0,16,20,23,26,31,46,47,48,49,50,51,52,55,56,57,58,59,60,61,62,64,65,66,67,74,88,89,90,91,92,93,94,96,114,115,117,118,119,121,123,135,144,145,146,147,148,152,153,155,166,175,178,184,194,195,200,201,202,203,209,210,211,212,216,235,237,267,285,300,310,],[45,61,73,73,86,87,101,73,73,73,73,73,73,73,73,73,73,73,73,-53,-52,-179,45,-182,-181,73,73,73,73,73,73,73,73,136,149,-180,-114,-113,-90,149,158,171,149,136,-116,-115,-94,185,185,149,61,149,185,136,149,149,149,-96,171,136,149,149,185,185,185,149,185,73,185,-111,185,]),'MOD':([11,12,19,21,45,53,54,70,72,73,79,86,98,101,108,109,110,111,112,122,154,157,158,185,186,],[59,-164,-170,-169,-168,-166,-167,-169,-170,-168,-169,-168,-169,-168,59,59,-161,-162,-163,-165,-171,-169,-168,-168,-169,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'class_method_stmt':([236,253,269,278,],[254,254,254,296,]),'statements':([0,],[18,]),'class_mlhs':([127,198,],[162,162,]),'M_8':([148,],[178,]),'class_func':([127,198,],[164,164,]),'opt_then':([71,283,],[119,300,]),'mlhs':([0,26,65,152,153,178,211,212,216,237,285,310,],[1,77,1,1,1,1,1,1,1,1,1,1,]),'func_defn':([0,65,],[30,30,]),'M_3':([300,],[310,]),'class_method_stmts':([236,253,269,],[259,270,287,]),'expr10':([0,20,23,26,46,47,48,49,50,51,52,60,65,74,88,89,90,91,92,93,94,123,152,153,178,211,212,216,237,267,285,310,],[10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,133,134,10,10,10,10,10,10,10,10,10,10,10,]),'expr11':([0,20,23,26,46,47,48,49,50,51,52,55,56,60,65,74,88,89,90,91,92,93,94,123,152,153,178,211,212,216,237,267,285,310,],[11,11,11,11,11,11,11,11,11,11,11,108,109,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,]),'expr13':([0,20,23,26,46,47,48,49,50,51,52,55,56,57,58,59,60,65,74,88,89,90,91,92,93,94,123,152,153,178,211,212,216,237,267,285,310,],[12,12,12,12,12,12,12,12,12,12,12,12,12,110,111,112,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,]),'array':([0,20,23,26,46,47,48,49,50,51,52,55,56,57,58,59,60,65,74,88,89,90,91,92,93,94,96,123,145,152,153,178,184,203,211,212,216,237,267,285,310,],[19,72,72,19,72,72,72,72,72,72,72,72,72,72,72,72,72,19,72,72,72,72,72,72,72,72,143,72,143,19,19,19,143,143,19,19,19,19,72,19,19,]),'class_mrhs':([197,],[231,]),'for_range_variables':([135,202,],[172,238,]),'func_stmts':([152,211,],[182,245,]),'M_14':([282,],[299,]),'str_expr':([26,46,123,],[78,78,78,]),'class_method_mrhs':([277,],[293,]),'call_arg':([96,145,203,],[142,177,239,]),'for_range':([135,],[170,]),'class_method_mlhs':([236,253,269,278,],[257,257,257,257,]),'expr3':([0,20,23,26,46,60,65,123,152,153,178,211,212,216,237,267,285,310,],[33,71,33,33,33,113,33,33,33,33,33,33,33,33,33,283,33,33,]),'literal':([197,255,277,289,290,291,],[230,273,295,305,306,307,]),'program':([0,],[3,]),'expr6':([0,20,23,26,46,60,65,88,89,90,91,123,152,153,178,211,212,216,237,267,285,310,],[35,35,35,35,35,35,35,35,129,130,35,35,35,35,35,35,35,35,35,35,35,35,]),'expr7':([0,20,23,26,46,47,48,49,52,60,65,74,88,89,90,91,123,152,153,178,211,212,216,237,267,285,310,],[5,5,5,5,5,102,103,104,107,5,5,120,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,]),'puts_stmt':([0,65,152,153,178,211,212,216,236,237,253,269,278,285,310,],[13,13,13,13,13,13,13,13,261,13,261,261,261,13,13,]),'expr5':([0,20,23,26,46,60,65,88,91,123,152,153,178,211,212,216,237,267,285,310,],[37,37,37,37,37,37,37,37,131,37,37,37,37,37,37,37,37,37,37,37,]),'func_call_stmt':([0,65,152,153,178,211,212,216,237,285,310,],[25,25,25,25,25,25,25,25,25,25,25,]),'expr8':([0,20,23,26,46,47,48,49,50,51,52,60,65,74,88,89,90,91,123,152,153,178,211,212,216,237,267,285,310,],[38,38,38,38,38,38,38,38,105,106,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,]),'expr9':([0,20,23,26,46,47,48,49,50,51,52,60,65,74,88,89,90,91,92,123,152,153,178,211,212,216,237,267,285,310,],[39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,132,39,39,39,39,39,39,39,39,39,39,39,]),'arguments':([114,121,144,155,175,194,195,200,209,210,235,],[151,156,176,192,205,219,221,236,243,244,252,]),'terms':([18,162,165,182,190,208,245,257,259,262,270,287,301,314,],[65,196,198,212,216,216,212,276,278,216,278,278,216,216,]),'statement':([0,65,],[24,116,]),'exit_stmt':([0,65,152,153,178,211,212,216,237,285,310,],[41,41,41,41,41,41,41,41,41,41,41,]),'class_method_ret_arg':([255,],[274,]),'term':([18,65,162,165,182,190,196,198,208,212,216,245,257,259,262,270,276,278,287,301,314,],[64,115,64,64,64,64,115,115,64,115,115,64,64,64,64,64,115,115,64,64,64,]),'loop_stmt':([0,65,152,153,178,211,212,216,237,285,310,],[6,6,6,6,6,6,6,6,6,6,6,]),'primary':([96,145,184,203,],[141,141,214,141,]),'M_17':([174,207,],[204,241,]),'mrhs':([26,46,123,],[83,99,99,]),'class_stmts':([127,],[165,]),'stmt':([0,65,152,153,178,211,212,216,237,285,310,],[14,14,14,14,14,14,14,14,14,14,14,]),'func_ret_arg':([184,],[215,]),'expr4':([0,20,23,26,46,60,65,88,123,152,153,178,211,212,216,237,267,285,310,],[36,36,36,36,36,36,36,128,36,36,36,36,36,36,36,36,36,36,36,]),'class_method_arg_expr':([255,291,],[275,308,]),'M_2':([217,],[249,]),'M_1':([119,],[153,]),'opt_do':([113,170,],[148,201,]),'M_7':([0,65,152,153,178,211,212,216,237,285,310,],[15,15,15,15,15,15,15,15,15,15,15,]),'M_6':([302,],[312,]),'M_4':([315,],[316,]),'uexpr':([0,20,23,26,46,47,48,49,50,51,52,55,56,57,58,59,60,65,74,88,89,90,91,92,93,94,123,152,153,178,211,212,216,237,267,285,310,],[7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,]),'none':([0,18,20,23,26,46,47,48,49,50,51,52,55,56,57,58,59,60,65,74,88,89,90,91,92,93,94,96,123,127,145,152,153,165,178,182,190,203,208,211,212,216,236,237,245,249,253,259,262,267,268,269,270,285,287,301,310,314,316,],[27,68,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,137,27,161,137,187,189,68,189,68,68,137,68,187,27,27,256,189,68,266,256,68,68,27,284,256,68,189,68,68,189,68,266,]),'gen_stmts':([153,178,237,285,310,],[190,208,262,301,314,]),'elsif_tail':([249,316,],[268,317,]),'expr':([0,26,65,152,153,178,211,212,216,237,285,310,],[28,84,28,28,28,28,28,28,28,28,28,28,]),'top_top_compstmt':([0,],[42,]),'M_9':([263,],[281,]),'fname2':([0,46,65,152,153,178,211,212,216,237,285,310,],[44,100,44,44,44,44,44,44,44,44,44,44,]),'M_12':([149,150,],[179,180,]),'opt_terms':([18,165,182,190,208,245,259,262,270,287,301,314,],[69,199,213,217,242,264,279,280,288,303,311,315,]),'class_stmt':([127,198,],[167,233,]),'M_11':([298,],[309,]),'func_stmt':([152,211,212,],[188,188,246,]),'fname':([16,166,],[63,200,]),'class_defn':([0,65,],[29,29,]),'M_16':([141,],[173,]),'M_15':([247,],[265,]),'opt_else_stmt':([268,],[286,]),'M_13':([151,],[181,]),'expr1':([0,23,26,46,65,123,152,153,178,211,212,216,237,285,310,],[34,76,81,81,34,81,34,34,34,34,34,34,34,34,34,]),'top_stmt':([0,65,152,153,178,211,212,216,237,285,310,],[9,9,183,191,191,183,183,248,191,191,191,]),'M_10':([201,],[237,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> top_top_compstmt','program',1,'p_program','parser.py',50),
  ('top_top_compstmt -> statements opt_terms','top_top_compstmt',2,'p_top_top_compstmt','parser.py',59),
  ('statements -> statement','statements',1,'p_statements','parser.py',68),
  ('statements -> statements terms statement','statements',3,'p_statements','parser.py',69),
  ('statement -> top_stmt','statement',1,'p_statement','parser.py',79),
  ('statement -> func_defn','statement',1,'p_statement','parser.py',80),
  ('statement -> class_defn','statement',1,'p_statement','parser.py',81),
  ('statement -> VARIABLES DOT VARIABLES OPEN_PAREN arguments CLOSE_PAREN','statement',6,'p_statement','parser.py',82),
  ('statement -> VARIABLES DOT VARIABLES OPEN_PAREN CLOSE_PAREN','statement',5,'p_statement','parser.py',83),
  ('statement -> VARIABLES DOT VARIABLES arguments','statement',4,'p_statement','parser.py',84),
  ('statement -> CONSTANTS DOT KEYWORD_new OPEN_PAREN arguments CLOSE_PAREN','statement',6,'p_statement','parser.py',85),
  ('statement -> CONSTANTS DOT KEYWORD_new OPEN_PAREN CLOSE_PAREN','statement',5,'p_statement','parser.py',86),
  ('statement -> CONSTANTS DOT KEYWORD_new arguments','statement',4,'p_statement','parser.py',87),
  ('class_defn -> KEYWORD_class CONSTANTS newline class_stmts opt_terms KEYWORD_end','class_defn',6,'p_class_defn','parser.py',96),
  ('class_stmts -> class_stmt','class_stmts',1,'p_class_stmts','parser.py',108),
  ('class_stmts -> class_stmts terms class_stmt','class_stmts',3,'p_class_stmts','parser.py',109),
  ('class_stmts -> none','class_stmts',1,'p_class_stmts','parser.py',110),
  ('class_stmt -> class_mlhs EQUAL class_mrhs','class_stmt',3,'p_class_stmt','parser.py',120),
  ('class_stmt -> class_func','class_stmt',1,'p_class_stmt','parser.py',121),
  ('class_mrhs -> literal','class_mrhs',1,'p_class_mrhs','parser.py',130),
  ('literal -> INT_CONSTANTS','literal',1,'p_literal','parser.py',139),
  ('literal -> FLOAT_CONSTANTS','literal',1,'p_literal','parser.py',140),
  ('literal -> STRING_CONSTANTS','literal',1,'p_literal','parser.py',141),
  ('literal -> BOOLEAN_CONSTANTS','literal',1,'p_literal','parser.py',142),
  ('literal -> CHAR_CONSTANTS','literal',1,'p_literal','parser.py',143),
  ('literal -> SIGIL_AT','literal',1,'p_literal','parser.py',144),
  ('literal -> SIGIL_DOUBLE_AT','literal',1,'p_literal','parser.py',145),
  ('class_mlhs -> class_mlhs terms SIGIL_DOUBLE_AT','class_mlhs',3,'p_class_mlhs','parser.py',154),
  ('class_mlhs -> SIGIL_DOUBLE_AT','class_mlhs',1,'p_class_mlhs','parser.py',155),
  ('class_func -> KEYWORD_def fname OPEN_PAREN arguments CLOSE_PAREN class_method_stmts opt_terms KEYWORD_end','class_func',8,'p_class_func','parser.py',165),
  ('class_func -> KEYWORD_def fname arguments class_method_stmts opt_terms KEYWORD_end','class_func',6,'p_class_func','parser.py',166),
  ('class_func -> KEYWORD_def fname OPEN_PAREN CLOSE_PAREN class_method_stmts opt_terms KEYWORD_end','class_func',7,'p_class_func','parser.py',167),
  ('class_method_stmts -> class_method_stmt','class_method_stmts',1,'p_class_method_stmts','parser.py',176),
  ('class_method_stmts -> class_method_stmts terms class_method_stmt','class_method_stmts',3,'p_class_method_stmts','parser.py',177),
  ('class_method_stmts -> none','class_method_stmts',1,'p_class_method_stmts','parser.py',178),
  ('class_method_stmt -> class_method_mlhs EQUAL class_method_mrhs','class_method_stmt',3,'p_class_method_stmt','parser.py',187),
  ('class_method_stmt -> KEYWORD_return class_method_ret_arg','class_method_stmt',2,'p_class_method_stmt','parser.py',188),
  ('class_method_stmt -> puts_stmt','class_method_stmt',1,'p_class_method_stmt','parser.py',189),
  ('class_method_mlhs -> class_method_mlhs terms SIGIL_AT','class_method_mlhs',3,'p_class_method_mlhs','parser.py',198),
  ('class_method_mlhs -> SIGIL_AT','class_method_mlhs',1,'p_class_method_mlhs','parser.py',199),
  ('class_method_mlhs -> SIGIL_DOUBLE_AT','class_method_mlhs',1,'p_class_method_mlhs','parser.py',200),
  ('class_method_mrhs -> literal','class_method_mrhs',1,'p_class_method_mrhs','parser.py',209),
  ('class_method_mrhs -> VARIABLES','class_method_mrhs',1,'p_class_method_mrhs','parser.py',210),
  ('class_method_ret_arg -> class_method_arg_expr','class_method_ret_arg',1,'p_class_method_ret_arg','parser.py',219),
  ('class_method_ret_arg -> literal','class_method_ret_arg',1,'p_class_method_ret_arg','parser.py',220),
  ('class_method_ret_arg -> class_method_ret_arg COMMA class_method_arg_expr','class_method_ret_arg',3,'p_class_method_ret_arg','parser.py',221),
  ('class_method_ret_arg -> class_method_ret_arg COMMA literal','class_method_ret_arg',3,'p_class_method_ret_arg','parser.py',222),
  ('class_method_arg_expr -> SIGIL_AT EQUAL literal','class_method_arg_expr',3,'p_class_method_arg_expr','parser.py',232),
  ('class_method_arg_expr -> SIGIL_DOUBLE_AT EQUAL literal','class_method_arg_expr',3,'p_class_method_arg_expr','parser.py',233),
  ('func_defn -> KEYWORD_def fname OPEN_PAREN arguments M_13 CLOSE_PAREN func_stmts opt_terms KEYWORD_end M_14','func_defn',10,'p_func_defn','parser.py',241),
  ('func_defn -> KEYWORD_def fname OPEN_PAREN CLOSE_PAREN func_stmts opt_terms KEYWORD_end M_15','func_defn',8,'p_func_defn','parser.py',242),
  ('fname -> VARIABLES','fname',1,'p_fname','parser.py',255),
  ('fname -> CONSTANTS','fname',1,'p_fname','parser.py',256),
  ('arguments -> VARIABLES M_12 COMMA arguments','arguments',4,'p_arguments','parser.py',274),
  ('arguments -> CONSTANTS M_12 COMMA arguments','arguments',4,'p_arguments','parser.py',275),
  ('arguments -> VARIABLES M_12','arguments',2,'p_arguments','parser.py',276),
  ('arguments -> CONSTANTS M_12','arguments',2,'p_arguments','parser.py',277),
  ('M_12 -> <empty>','M_12',0,'p_M_12','parser.py',285),
  ('M_13 -> <empty>','M_13',0,'p_M_13','parser.py',298),
  ('M_14 -> <empty>','M_14',0,'p_M_14','parser.py',304),
  ('M_15 -> <empty>','M_15',0,'p_M_15','parser.py',309),
  ('func_call_stmt -> fname2 OPEN_PAREN call_arg CLOSE_PAREN M_17','func_call_stmt',5,'p_func_call_stmt','parser.py',320),
  ('func_call_stmt -> mlhs EQUAL fname2 OPEN_PAREN call_arg CLOSE_PAREN M_17','func_call_stmt',7,'p_func_call_stmt','parser.py',321),
  ('M_17 -> <empty>','M_17',0,'p_M_17','parser.py',328),
  ('fname2 -> VARIABLES','fname2',1,'p_fname2','parser.py',336),
  ('fname2 -> CONSTANTS','fname2',1,'p_fname2','parser.py',337),
  ('call_arg -> primary M_16 COMMA call_arg','call_arg',4,'p_call_arg','parser.py',342),
  ('call_arg -> primary M_16','call_arg',2,'p_call_arg','parser.py',343),
  ('call_arg -> none','call_arg',1,'p_call_arg','parser.py',344),
  ('M_16 -> <empty>','M_16',0,'p_M_16','parser.py',354),
  ('loop_stmt -> KEYWORD_break','loop_stmt',1,'p_loop_stmt','parser.py',358),
  ('exit_stmt -> KEYWORD_exit','exit_stmt',1,'p_exit_stmt','parser.py',367),
  ('puts_stmt -> KEYWORD_puts mrhs','puts_stmt',2,'p_puts_stmt','parser.py',372),
  ('puts_stmt -> KEYWORD_puts expr','puts_stmt',2,'p_puts_stmt','parser.py',373),
  ('func_stmts -> func_stmt','func_stmts',1,'p_func_stmts','parser.py',380),
  ('func_stmts -> func_stmts terms func_stmt','func_stmts',3,'p_func_stmts','parser.py',381),
  ('func_stmts -> none','func_stmts',1,'p_func_stmts','parser.py',382),
  ('func_stmt -> top_stmt','func_stmt',1,'p_func_stmt','parser.py',386),
  ('func_stmt -> KEYWORD_return func_ret_arg','func_stmt',2,'p_func_stmt','parser.py',387),
  ('func_ret_arg -> primary','func_ret_arg',1,'p_func_ret_arg','parser.py',391),
  ('primary -> INT_CONSTANTS','primary',1,'p_primary','parser.py',396),
  ('primary -> BOOLEAN_CONSTANTS','primary',1,'p_primary','parser.py',397),
  ('primary -> CONSTANTS','primary',1,'p_primary','parser.py',398),
  ('primary -> VARIABLES','primary',1,'p_primary','parser.py',399),
  ('primary -> array','primary',1,'p_primary','parser.py',400),
  ('top_stmt -> stmt','top_stmt',1,'p_top_stmt','parser.py',453),
  ('top_stmt -> KEYWORD_if expr3 opt_then M_1 gen_stmts opt_terms M_2 elsif_tail opt_else_stmt KEYWORD_end M_6','top_stmt',11,'p_top_stmt','parser.py',454),
  ('top_stmt -> M_7 KEYWORD_while expr3 opt_do M_8 gen_stmts opt_terms KEYWORD_end M_9','top_stmt',9,'p_top_stmt','parser.py',455),
  ('top_stmt -> KEYWORD_for VARIABLES KEYWORD_in for_range opt_do M_10 gen_stmts opt_terms KEYWORD_end M_11','top_stmt',10,'p_top_stmt','parser.py',456),
  ('M_1 -> <empty>','M_1',0,'p_M_1','parser.py',464),
  ('M_2 -> <empty>','M_2',0,'p_M_2','parser.py',470),
  ('M_6 -> <empty>','M_6',0,'p_M_6','parser.py',477),
  ('M_7 -> <empty>','M_7',0,'p_M_7','parser.py',483),
  ('M_8 -> <empty>','M_8',0,'p_M_8','parser.py',489),
  ('M_9 -> <empty>','M_9',0,'p_M_9','parser.py',495),
  ('M_10 -> <empty>','M_10',0,'p_M_10','parser.py',500),
  ('M_11 -> <empty>','M_11',0,'p_M_11','parser.py',516),
  ('gen_stmts -> top_stmt','gen_stmts',1,'p_gen_stmts','parser.py',523),
  ('gen_stmts -> gen_stmts terms top_stmt','gen_stmts',3,'p_gen_stmts','parser.py',524),
  ('gen_stmts -> none','gen_stmts',1,'p_gen_stmts','parser.py',525),
  ('stmt -> expr','stmt',1,'p_stmt','parser.py',535),
  ('stmt -> expr1','stmt',1,'p_stmt','parser.py',536),
  ('stmt -> puts_stmt','stmt',1,'p_stmt','parser.py',537),
  ('stmt -> loop_stmt','stmt',1,'p_stmt','parser.py',538),
  ('stmt -> exit_stmt','stmt',1,'p_stmt','parser.py',539),
  ('stmt -> func_call_stmt','stmt',1,'p_stmt','parser.py',540),
  ('opt_else_stmt -> KEYWORD_else gen_stmts opt_terms','opt_else_stmt',3,'p_opt_else_stmt','parser.py',549),
  ('opt_else_stmt -> none','opt_else_stmt',1,'p_opt_else_stmt','parser.py',550),
  ('elsif_tail -> none','elsif_tail',1,'p_elsif_tail','parser.py',560),
  ('elsif_tail -> KEYWORD_elsif expr3 opt_then M_3 gen_stmts opt_terms M_4 elsif_tail','elsif_tail',8,'p_elsif_tail','parser.py',561),
  ('M_3 -> <empty>','M_3',0,'p_M_3','parser.py',575),
  ('M_4 -> <empty>','M_4',0,'p_M_4','parser.py',581),
  ('opt_then -> KEYWORD_then','opt_then',1,'p_opt_then','parser.py',592),
  ('opt_then -> newline','opt_then',1,'p_opt_then','parser.py',593),
  ('opt_do -> KEYWORD_do','opt_do',1,'p_opt_do','parser.py',597),
  ('opt_do -> newline','opt_do',1,'p_opt_do','parser.py',598),
  ('for_range -> for_range_variables DOUBLEDOT for_range_variables','for_range',3,'p_for_range','parser.py',602),
  ('for_range_variables -> INT_CONSTANTS','for_range_variables',1,'p_for_range_variables','parser.py',607),
  ('for_range_variables -> VARIABLES','for_range_variables',1,'p_for_range_variables','parser.py',608),
  ('for_range_variables -> CONSTANTS','for_range_variables',1,'p_for_range_variables','parser.py',609),
  ('expr -> mlhs EQUAL mrhs','expr',3,'p_expr','parser.py',622),
  ('mlhs -> VARIABLES','mlhs',1,'p_mlhs','parser.py',637),
  ('mlhs -> CONSTANTS','mlhs',1,'p_mlhs','parser.py',638),
  ('mlhs -> array','mlhs',1,'p_mlhs','parser.py',639),
  ('mrhs -> expr1','mrhs',1,'p_mrhs','parser.py',655),
  ('mrhs -> str_expr','mrhs',1,'p_mrhs','parser.py',656),
  ('mrhs -> KEYWORD_gets','mrhs',1,'p_mrhs','parser.py',657),
  ('mrhs -> OPEN_BRACKET CLOSE_BRACKET','mrhs',2,'p_mrhs','parser.py',658),
  ('mrhs -> VARIABLES DOT VARIABLES OPEN_PAREN arguments CLOSE_PAREN','mrhs',6,'p_mrhs','parser.py',659),
  ('mrhs -> VARIABLES DOT VARIABLES OPEN_PAREN CLOSE_PAREN','mrhs',5,'p_mrhs','parser.py',660),
  ('mrhs -> VARIABLES DOT VARIABLES','mrhs',3,'p_mrhs','parser.py',661),
  ('mrhs -> CONSTANTS DOT KEYWORD_new OPEN_PAREN arguments CLOSE_PAREN','mrhs',6,'p_mrhs','parser.py',662),
  ('mrhs -> CONSTANTS DOT KEYWORD_new','mrhs',3,'p_mrhs','parser.py',663),
  ('mrhs -> CONSTANTS DOT KEYWORD_new OPEN_PAREN CLOSE_PAREN','mrhs',5,'p_mrhs','parser.py',664),
  ('str_expr -> STRING_CONSTANTS','str_expr',1,'p_str_expr','parser.py',685),
  ('expr1 -> expr3','expr1',1,'p_expr1','parser.py',704),
  ('expr3 -> expr3 LOGICALOR expr4','expr3',3,'p_expr3','parser.py',725),
  ('expr3 -> expr4','expr3',1,'p_expr3','parser.py',726),
  ('expr4 -> expr4 LOGICALAND expr5','expr4',3,'p_expr4','parser.py',750),
  ('expr4 -> expr5','expr4',1,'p_expr4','parser.py',751),
  ('expr5 -> expr6 DOUBLEEQUAL expr6','expr5',3,'p_expr5','parser.py',774),
  ('expr5 -> expr6 NOTEQUAL expr6','expr5',3,'p_expr5','parser.py',775),
  ('expr5 -> expr6','expr5',1,'p_expr5','parser.py',776),
  ('expr6 -> expr7 LESSEQUAL expr7','expr6',3,'p_expr6','parser.py',801),
  ('expr6 -> expr7 LESS expr7','expr6',3,'p_expr6','parser.py',802),
  ('expr6 -> expr7 GREATER expr7','expr6',3,'p_expr6','parser.py',803),
  ('expr6 -> expr7 GREATEREQUAL expr7','expr6',3,'p_expr6','parser.py',804),
  ('expr6 -> expr7','expr6',1,'p_expr6','parser.py',805),
  ('expr6 -> BOOLEAN_CONSTANTS','expr6',1,'p_expr6','parser.py',806),
  ('expr7 -> expr7 BITXOR expr8','expr7',3,'p_expr7','parser.py',844),
  ('expr7 -> expr7 PIPE expr8','expr7',3,'p_expr7','parser.py',845),
  ('expr7 -> expr8','expr7',1,'p_expr7','parser.py',846),
  ('expr8 -> expr8 BITAND expr9','expr8',3,'p_expr8','parser.py',861),
  ('expr8 -> expr9','expr8',1,'p_expr8','parser.py',862),
  ('expr9 -> expr9 SHIFTL expr10','expr9',3,'p_expr9','parser.py',877),
  ('expr9 -> expr9 SHIFTR expr10','expr9',3,'p_expr9','parser.py',878),
  ('expr9 -> expr10','expr9',1,'p_expr9','parser.py',879),
  ('expr10 -> expr10 PLUS expr11','expr10',3,'p_expr10','parser.py',894),
  ('expr10 -> expr10 MINUS expr11','expr10',3,'p_expr10','parser.py',895),
  ('expr10 -> expr11','expr10',1,'p_expr10','parser.py',896),
  ('expr11 -> expr11 MULTIPLY expr13','expr11',3,'p_expr11','parser.py',911),
  ('expr11 -> expr11 DIV expr13','expr11',3,'p_expr11','parser.py',912),
  ('expr11 -> expr11 MOD expr13','expr11',3,'p_expr11','parser.py',913),
  ('expr11 -> expr13','expr11',1,'p_expr11','parser.py',914),
  ('expr13 -> OPEN_PAREN expr1 CLOSE_PAREN','expr13',3,'p_expr13','parser.py',942),
  ('expr13 -> uexpr INT_CONSTANTS','expr13',2,'p_expr13','parser.py',943),
  ('expr13 -> uexpr FLOAT_CONSTANTS','expr13',2,'p_expr13','parser.py',944),
  ('expr13 -> CONSTANTS','expr13',1,'p_expr13','parser.py',945),
  ('expr13 -> VARIABLES','expr13',1,'p_expr13','parser.py',946),
  ('expr13 -> array','expr13',1,'p_expr13','parser.py',947),
  ('array -> VARIABLES OPEN_BRACKET expr7 CLOSE_BRACKET','array',4,'p_array','parser.py',982),
  ('uexpr -> none','uexpr',1,'p_uexpr','parser.py',998),
  ('uexpr -> PLUS','uexpr',1,'p_uexpr','parser.py',999),
  ('uexpr -> MINUS','uexpr',1,'p_uexpr','parser.py',1000),
  ('uexpr -> BITNOT','uexpr',1,'p_uexpr','parser.py',1001),
  ('uexpr -> BITCOMP','uexpr',1,'p_uexpr','parser.py',1002),
  ('opt_terms -> none','opt_terms',1,'p_opt_terms','parser.py',1011),
  ('opt_terms -> terms','opt_terms',1,'p_opt_terms','parser.py',1012),
  ('terms -> term','terms',1,'p_terms','parser.py',1021),
  ('terms -> terms term','terms',2,'p_terms','parser.py',1022),
  ('term -> DELIM','term',1,'p_term','parser.py',1031),
  ('term -> newline','term',1,'p_term','parser.py',1032),
  ('none -> <empty>','none',0,'p_none','parser.py',1044),
]
