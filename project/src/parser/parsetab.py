
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = 'AB5B09CE5810EDEE2BEE3B86B174EE75'
    
_lr_action_items = {'KEYWORD_exit':([0,71,72,73,74,122,124,125,126,148,149,150,154,155,180,184,199,211,216,237,242,247,289,304,314,],[18,-182,18,-185,-184,-183,-118,-117,-90,-120,-119,-94,-60,18,18,18,-96,18,18,18,18,18,18,-115,18,]),'NOTEQUAL':([6,9,11,12,13,20,22,36,39,40,46,55,77,79,80,86,93,105,108,110,111,112,113,114,115,116,117,118,119,120,129,139,140,141,156,159,160,185,186,],[-152,-153,-161,-164,-168,-173,-172,96,-156,-158,-171,-170,-172,-173,-171,-172,-171,-172,-171,-151,-150,-149,-155,-154,-148,-162,-163,-165,-166,-167,-169,-157,-160,-159,-174,-172,-171,-171,-172,]),'LESS':([6,11,12,13,20,22,39,40,46,55,77,79,80,86,93,105,108,113,114,116,117,118,119,120,129,139,140,141,156,159,160,185,186,],[51,-161,-164,-168,-173,-172,-156,-158,-171,-170,-172,-173,-171,-172,-171,-172,-171,-155,-154,-162,-163,-165,-166,-167,-169,-157,-160,-159,-174,-172,-171,-171,-172,]),'EQUAL':([1,20,22,46,84,86,93,156,164,165,185,186,223,258,259,261,274,275,296,],[47,-128,-126,-127,130,-126,-127,-174,195,-29,-127,-126,-28,280,-41,-40,293,294,-39,]),'OPEN_BRACKET':([22,27,47,63,77,86,105,130,159,186,],[81,87,87,81,81,81,81,87,81,81,]),'MULTIPLY':([12,13,20,22,46,55,77,79,80,86,93,105,108,116,117,118,119,120,129,156,159,160,185,186,],[58,-168,-173,-172,-171,-170,-172,-173,-171,-172,-171,-172,-171,58,58,-165,-166,-167,-169,-174,-172,-171,-171,-172,]),'KEYWORD_in':([102,],[142,]),'SHIFTL':([11,12,13,20,22,40,46,55,77,79,80,86,93,105,108,116,117,118,119,120,129,139,140,141,156,159,160,185,186,],[-161,-164,-168,-173,-172,101,-171,-170,-172,-173,-171,-172,-171,-172,-171,-162,-163,-165,-166,-167,-169,101,-160,-159,-174,-172,-171,-171,-172,]),'BITXOR':([6,11,12,13,20,22,39,40,46,55,77,79,80,86,93,105,108,110,111,112,113,114,115,116,117,118,119,120,127,129,139,140,141,156,159,160,185,186,],[53,-161,-164,-168,-173,-172,-156,-158,-171,-170,-172,-173,-171,-172,-171,-172,-171,53,53,53,-155,-154,53,-162,-163,-165,-166,-167,53,-169,-157,-160,-159,-174,-172,-171,-171,-172,]),'KEYWORD_end':([6,7,9,11,12,13,15,16,18,20,26,29,34,35,36,37,38,39,40,41,42,55,61,62,63,64,65,66,67,71,73,74,75,77,79,80,85,86,88,89,90,91,92,93,105,106,108,110,111,112,113,114,115,116,117,118,119,120,122,124,125,126,129,132,134,135,136,137,138,139,140,141,148,149,150,151,152,154,155,156,159,160,161,162,163,166,167,169,176,180,181,182,184,185,186,187,188,189,196,197,199,202,205,206,207,208,211,212,213,214,215,216,217,220,222,224,225,226,227,228,229,230,231,232,233,236,237,241,242,243,244,245,246,247,248,249,250,251,252,254,255,257,260,262,263,264,265,266,267,269,271,272,273,274,275,276,277,278,281,282,283,284,288,289,290,291,292,297,298,299,300,301,302,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,],[-152,-107,-153,-161,-164,-168,-106,-86,-73,-173,-109,-104,-140,-105,-147,-142,-144,-156,-158,-72,-108,-170,-82,-81,-84,-80,-110,-85,-83,-182,-185,-184,-180,-172,-173,-171,-130,-172,-129,-131,-74,-75,-139,-171,-172,-125,-171,-151,-150,-149,-155,-154,-148,-162,-163,-165,-166,-167,-183,-118,-117,-90,-169,-132,-186,-141,-146,-145,-143,-157,-160,-159,-120,-119,-94,-58,-58,-60,-186,-174,-172,-171,-135,-137,-17,-19,-186,-15,-65,-186,-57,-56,-186,-171,-172,-100,-186,-98,-181,234,-96,-63,-65,-186,-103,-101,-186,-186,-79,-78,-76,-181,-91,-134,-138,-26,-24,-21,-22,-27,-23,-20,-18,-25,-16,-186,-186,-64,-181,265,-55,-54,-186,-181,268,-99,-186,-133,-136,-186,-33,-35,-186,-38,-186,-102,-95,285,-77,-113,-186,-186,-186,-26,-27,-45,-37,-44,-181,301,302,-88,-112,-186,306,-186,308,-36,-43,-42,-34,-31,-97,-115,-186,-92,317,-32,-48,-49,-47,-46,-89,-186,-111,-87,-30,-186,-116,-186,-114,]),'DIV':([12,13,20,22,46,55,77,79,80,86,93,105,108,116,117,118,119,120,129,156,159,160,185,186,],[59,-168,-173,-172,-171,-170,-172,-173,-171,-172,-171,-172,-171,59,59,-165,-166,-167,-169,-174,-172,-171,-171,-172,]),'KEYWORD_if':([0,71,72,73,74,122,124,125,126,148,149,150,154,155,180,184,199,211,216,237,242,247,289,304,314,],[21,-182,21,-185,-184,-183,-118,-117,-90,-120,-119,-94,-60,21,21,21,-96,21,21,21,21,21,21,-115,21,]),'CHAR_CONSTANTS':([195,256,280,293,294,295,],[232,232,232,232,232,232,]),'MINUS':([0,3,11,12,13,20,21,22,24,27,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,71,72,73,74,77,79,80,81,86,93,95,96,97,98,99,100,101,105,108,116,117,118,119,120,122,124,125,126,129,130,140,141,148,149,150,154,155,156,159,160,180,184,185,186,199,211,216,237,242,247,270,289,304,314,],[2,-93,57,-164,-168,-173,2,-172,2,2,-171,2,2,2,2,2,2,2,2,-170,2,2,2,2,2,-182,2,-185,-184,-172,-173,-171,2,-172,-171,2,2,2,2,2,2,2,-172,-171,-162,-163,-165,-166,-167,-183,-118,-117,-90,-169,2,57,57,-120,-119,-94,-60,2,-174,-172,-171,2,2,-171,-172,-96,2,2,2,2,2,2,2,-115,2,]),'KEYWORD_while':([0,71,72,73,74,122,124,125,126,148,149,150,154,155,180,184,199,211,216,237,242,247,289,304,314,],[3,-182,3,-185,-184,-183,-118,-117,-90,-120,-119,-94,-60,3,3,3,-96,3,3,3,3,3,3,-115,3,]),'KEYWORD_return':([0,71,72,73,74,122,124,125,126,148,149,150,151,152,154,155,180,181,182,184,199,211,216,236,237,242,244,245,247,254,272,281,289,304,314,],[14,-182,14,-185,-184,-183,-118,-117,-90,-120,-119,-94,-58,-58,-60,14,14,-57,-56,14,-96,14,14,256,14,14,-55,-54,14,256,256,256,14,-115,14,]),'DOUBLEDOT':([170,171,173,174,],[-122,-123,-124,200,]),'GREATEREQUAL':([6,11,12,13,20,22,39,40,46,55,77,79,80,86,93,105,108,113,114,116,117,118,119,120,129,139,140,141,156,159,160,185,186,],[49,-161,-164,-168,-173,-172,-156,-158,-171,-170,-172,-173,-171,-172,-171,-172,-171,-155,-154,-162,-163,-165,-166,-167,-169,-157,-160,-159,-174,-172,-171,-171,-172,]),'KEYWORD_class':([0,71,72,73,74,122,],[32,-182,32,-185,-184,-183,]),'VARIABLES':([0,3,14,17,21,24,27,44,47,48,49,50,51,52,53,54,56,57,58,59,60,68,69,71,72,73,74,81,82,95,96,97,98,99,100,101,103,121,122,124,125,126,128,130,131,142,146,147,148,149,150,154,155,157,168,177,180,184,192,193,198,199,200,201,209,210,211,216,235,237,242,247,270,280,289,304,314,],[22,-93,63,69,77,77,86,102,105,77,77,77,77,77,77,77,77,77,77,77,77,-53,-52,-182,22,-185,-184,77,128,77,77,77,77,77,77,77,63,152,-183,-118,-117,-90,152,159,161,171,152,63,-120,-119,-94,-60,186,152,69,152,186,186,152,152,152,-96,171,63,152,152,186,186,152,186,186,186,77,298,186,-115,186,]),'SIGIL_DOUBLE_AT':([71,73,74,122,134,151,152,181,182,194,195,196,236,244,245,254,256,272,280,281,293,294,295,],[-182,-185,-184,-183,165,-58,-58,-57,-56,223,228,165,259,-55,-54,259,275,259,228,259,228,228,275,]),'DELIM':([6,7,9,10,11,12,13,15,16,18,19,20,22,25,26,29,30,31,34,35,36,37,38,39,40,41,42,46,55,61,62,63,64,65,66,67,71,72,73,74,77,79,80,85,86,88,89,90,91,92,93,105,106,108,110,111,112,113,114,115,116,117,118,119,120,122,123,124,125,126,129,132,134,135,136,137,138,139,140,141,148,149,150,151,152,154,155,156,158,159,160,161,162,163,164,165,166,167,169,176,178,180,181,182,184,185,186,187,188,189,191,194,196,199,202,204,205,206,207,208,211,212,213,214,215,216,218,220,222,223,224,225,226,227,228,229,230,231,232,233,234,236,237,240,241,242,244,245,246,247,249,251,252,254,255,257,258,259,260,261,262,263,264,265,267,268,272,273,274,275,276,277,278,279,281,284,285,286,289,291,296,297,298,299,300,301,302,303,304,305,306,308,309,310,311,312,313,314,316,317,318,],[-152,-107,-153,-5,-161,-164,-168,-106,-86,-73,74,-173,-172,-3,-109,-104,-7,-6,-140,-105,-147,-142,-144,-156,-158,-72,-108,-171,-170,-82,-81,-84,-80,-110,-85,-83,-182,74,-185,-184,-172,-173,-171,-130,-172,-129,-131,-74,-75,-139,-171,-172,-125,-171,-151,-150,-149,-155,-154,-148,-162,-163,-165,-166,-167,-183,-4,-118,-117,-90,-169,-132,-186,-141,-146,-145,-143,-157,-160,-159,-120,-119,-94,-58,-58,-60,-186,-174,-10,-172,-171,-135,-137,-17,74,-29,-19,74,-15,-65,-13,-186,-57,-56,-186,-171,-172,-100,74,-98,-9,74,74,-96,-63,-12,-65,74,-103,-101,-186,74,-79,-78,-76,74,-8,-134,-138,-28,-26,-24,-21,-22,-27,-23,-20,-18,-25,-16,-14,-186,-186,-11,-64,74,-55,-54,74,74,-99,-133,-136,-186,-33,-35,74,-41,74,-40,-38,74,-102,-95,-77,-62,-186,74,-26,-27,-45,-37,-44,74,74,-88,-61,-51,-186,74,-39,-36,-43,-42,-34,-31,-97,-50,-115,74,-92,-32,-48,-49,-47,-46,-89,-186,-87,-30,74,]),'BITNOT':([0,3,21,24,27,47,48,49,50,51,52,53,54,56,57,58,59,60,71,72,73,74,81,95,96,97,98,99,100,101,122,124,125,126,130,148,149,150,154,155,180,184,199,211,216,237,242,247,270,289,304,314,],[33,-93,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,-182,33,-185,-184,33,33,33,33,33,33,33,33,-183,-118,-117,-90,33,-120,-119,-94,-60,33,33,33,-96,33,33,33,33,33,33,33,-115,33,]),'BITCOMP':([0,3,21,24,27,47,48,49,50,51,52,53,54,56,57,58,59,60,71,72,73,74,81,95,96,97,98,99,100,101,122,124,125,126,130,148,149,150,154,155,180,184,199,211,216,237,242,247,270,289,304,314,],[23,-93,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,-182,23,-185,-184,23,23,23,23,23,23,23,23,-183,-118,-117,-90,23,-120,-119,-94,-60,23,23,23,-96,23,23,23,23,23,23,23,-115,23,]),'PIPE':([6,11,12,13,20,22,39,40,46,55,77,79,80,86,93,105,108,110,111,112,113,114,115,116,117,118,119,120,127,129,139,140,141,156,159,160,185,186,],[52,-161,-164,-168,-173,-172,-156,-158,-171,-170,-172,-173,-171,-172,-171,-172,-171,52,52,52,-155,-154,52,-162,-163,-165,-166,-167,52,-169,-157,-160,-159,-174,-172,-171,-171,-172,]),'CLOSE_BRACKET':([11,12,13,39,40,55,77,79,80,87,113,114,116,117,118,119,120,127,129,139,140,141,156,],[-161,-164,-168,-156,-158,-170,-172,-173,-171,132,-155,-154,-162,-163,-165,-166,-167,156,-169,-157,-160,-159,-174,]),'OPEN_PAREN':([0,3,21,22,24,27,45,46,47,48,49,50,51,52,53,54,56,57,58,59,60,68,69,70,71,72,73,74,81,95,96,97,98,99,100,101,105,107,108,122,124,125,126,128,130,146,148,149,150,154,155,161,162,180,184,185,186,198,199,211,216,237,242,247,270,289,304,314,],[24,-93,24,-66,24,24,103,-67,24,24,24,24,24,24,24,24,24,24,24,24,24,-53,-52,121,-182,24,-185,-184,24,24,24,24,24,24,24,24,-66,147,-67,-183,-118,-117,-90,157,24,177,-120,-119,-94,-60,24,192,193,24,24,-67,-66,235,-96,24,24,24,24,24,24,24,-115,24,]),'PLUS':([0,3,11,12,13,20,21,22,24,27,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,71,72,73,74,77,79,80,81,86,93,95,96,97,98,99,100,101,105,108,116,117,118,119,120,122,124,125,126,129,130,140,141,148,149,150,154,155,156,159,160,180,184,185,186,199,211,216,237,242,247,270,289,304,314,],[5,-93,56,-164,-168,-173,5,-172,5,5,-171,5,5,5,5,5,5,5,5,-170,5,5,5,5,5,-182,5,-185,-184,-172,-173,-171,5,-172,-171,5,5,5,5,5,5,5,-172,-171,-162,-163,-165,-166,-167,-183,-118,-117,-90,-169,5,56,56,-120,-119,-94,-60,5,-174,-172,-171,5,5,-171,-172,-96,5,5,5,5,5,5,5,-115,5,]),'DOT':([22,46,86,93,105,108,159,160,],[82,104,131,133,131,133,131,133,]),'SIGIL_AT':([71,73,74,122,151,152,181,182,195,236,244,245,254,256,272,279,280,281,293,294,295,],[-182,-185,-184,-183,-58,-58,-57,-56,224,261,-55,-54,261,274,261,296,224,261,224,224,274,]),'COMMA':([61,62,63,66,67,144,151,152,156,175,181,182,224,225,226,227,228,229,232,274,275,276,277,278,309,310,311,312,],[-82,-81,-84,-85,-83,-71,-58,-58,-174,201,209,210,-26,-24,-21,-22,-27,-23,-25,-26,-27,-45,295,-44,-48,-49,-47,-46,]),'KEYWORD_break':([0,71,72,73,74,122,124,125,126,148,149,150,154,155,180,184,199,211,216,237,242,247,289,304,314,],[41,-182,41,-185,-184,-183,-118,-117,-90,-120,-119,-94,-60,41,41,41,-96,41,41,41,41,41,41,-115,41,]),'$end':([4,6,7,9,10,11,12,13,15,16,18,19,20,22,25,26,29,30,31,34,35,36,37,38,39,40,41,42,43,46,55,61,62,63,64,65,66,67,71,72,73,74,75,76,77,79,80,85,86,88,89,90,91,92,93,105,106,108,110,111,112,113,114,115,116,117,118,119,120,122,123,129,132,135,136,137,138,139,140,141,151,152,156,158,159,160,161,162,176,178,181,182,191,202,204,205,218,220,222,234,240,241,244,245,251,252,265,268,284,285,286,302,303,306,313,316,],[0,-152,-107,-153,-5,-161,-164,-168,-106,-86,-73,-186,-173,-172,-3,-109,-104,-7,-6,-140,-105,-147,-142,-144,-156,-158,-72,-108,-1,-171,-170,-82,-81,-84,-80,-110,-85,-83,-182,-181,-185,-184,-180,-2,-172,-173,-171,-130,-172,-129,-131,-74,-75,-139,-171,-172,-125,-171,-151,-150,-149,-155,-154,-148,-162,-163,-165,-166,-167,-183,-4,-169,-132,-141,-146,-145,-143,-157,-160,-159,-58,-58,-174,-10,-172,-171,-135,-137,-65,-13,-57,-56,-9,-63,-12,-65,-8,-134,-138,-14,-11,-64,-55,-54,-133,-136,-95,-62,-88,-61,-51,-97,-50,-92,-89,-87,]),'KEYWORD_puts':([0,71,72,73,74,122,124,125,126,148,149,150,151,152,154,155,180,181,182,184,199,211,216,236,237,242,244,245,247,254,272,281,289,304,314,],[27,-182,27,-185,-184,-183,-118,-117,-90,-120,-119,-94,-58,-58,-60,27,27,-57,-56,27,-96,27,27,27,27,27,-55,-54,27,27,27,27,27,-115,27,]),'KEYWORD_else':([6,7,9,11,12,13,15,16,18,20,26,29,34,35,36,37,38,39,40,41,42,55,61,62,63,64,65,66,67,71,73,74,75,77,79,80,85,86,88,89,90,91,92,93,105,106,108,110,111,112,113,114,115,116,117,118,119,120,122,124,125,126,129,132,135,136,137,138,139,140,141,155,156,159,160,161,162,176,185,186,187,188,189,202,205,216,217,220,222,241,249,250,251,252,265,269,271,284,302,304,306,313,314,316,318,319,320,321,],[-152,-107,-153,-161,-164,-168,-106,-86,-73,-173,-109,-104,-140,-105,-147,-142,-144,-156,-158,-72,-108,-170,-82,-81,-84,-80,-110,-85,-83,-182,-185,-184,-180,-172,-173,-171,-130,-172,-129,-131,-74,-75,-139,-171,-172,-125,-171,-151,-150,-149,-155,-154,-148,-162,-163,-165,-166,-167,-183,-118,-117,-90,-169,-132,-141,-146,-145,-143,-157,-160,-159,-186,-174,-172,-171,-135,-137,-65,-171,-172,-100,-186,-98,-63,-65,-181,-91,-134,-138,-64,-99,-186,-133,-136,-95,-113,289,-88,-97,-115,-92,-89,-186,-87,-186,-116,-186,-114,]),'DOUBLEEQUAL':([6,9,11,12,13,20,22,36,39,40,46,55,77,79,80,86,93,105,108,110,111,112,113,114,115,116,117,118,119,120,129,139,140,141,156,159,160,185,186,],[-152,-153,-161,-164,-168,-173,-172,97,-156,-158,-171,-170,-172,-173,-171,-172,-171,-172,-171,-151,-150,-149,-155,-154,-148,-162,-163,-165,-166,-167,-169,-157,-160,-159,-174,-172,-171,-171,-172,]),'LOGICALOR':([6,9,11,12,13,20,22,34,36,37,38,39,40,46,55,77,78,79,80,86,93,105,108,109,110,111,112,113,114,115,116,117,118,119,120,129,135,136,137,138,139,140,141,156,159,160,185,186,287,],[-152,-153,-161,-164,-168,-173,-172,95,-147,-142,-144,-156,-158,-171,-170,-172,95,-173,-171,-172,-171,-172,-171,95,-151,-150,-149,-155,-154,-148,-162,-163,-165,-166,-167,-169,-141,-146,-145,-143,-157,-160,-159,-174,-172,-171,-171,-172,95,]),'newline':([6,7,9,10,11,12,13,15,16,18,19,20,22,25,26,29,30,31,34,35,36,37,38,39,40,41,42,46,55,61,62,63,64,65,66,67,71,72,73,74,77,78,79,80,85,86,88,89,90,91,92,93,94,105,106,108,109,110,111,112,113,114,115,116,117,118,119,120,122,123,124,125,126,129,132,134,135,136,137,138,139,140,141,148,149,150,151,152,154,155,156,158,159,160,161,162,163,164,165,166,167,169,170,171,172,173,176,178,180,181,182,184,185,186,187,188,189,191,194,196,199,202,204,205,206,207,208,211,212,213,214,215,216,218,220,222,223,224,225,226,227,228,229,230,231,232,233,234,236,237,238,240,241,242,244,245,246,247,249,251,252,254,255,257,258,259,260,261,262,263,264,265,267,268,272,273,274,275,276,277,278,279,281,284,285,286,287,289,291,296,297,298,299,300,301,302,303,304,305,306,308,309,310,311,312,313,314,316,317,318,],[-152,-107,-153,-5,-161,-164,-168,-106,-86,-73,73,-173,-172,-3,-109,-104,-7,-6,-140,-105,-147,-142,-144,-156,-158,-72,-108,-171,-170,-82,-81,-84,-80,-110,-85,-83,-182,73,-185,-184,-172,124,-173,-171,-130,-172,-129,-131,-74,-75,-139,-171,134,-172,-125,-171,148,-151,-150,-149,-155,-154,-148,-162,-163,-165,-166,-167,-183,-4,-118,-117,-90,-169,-132,-186,-141,-146,-145,-143,-157,-160,-159,-120,-119,-94,-58,-58,-60,-186,-174,-10,-172,-171,-135,-137,-17,73,-29,-19,73,-15,-122,-123,148,-124,-65,-13,-186,-57,-56,-186,-171,-172,-100,73,-98,-9,73,73,-96,-63,-12,-65,73,-103,-101,-186,73,-79,-78,-76,73,-8,-134,-138,-28,-26,-24,-21,-22,-27,-23,-20,-18,-25,-16,-14,-186,-186,-121,-11,-64,73,-55,-54,73,73,-99,-133,-136,-186,-33,-35,73,-41,73,-40,-38,73,-102,-95,-77,-62,-186,73,-26,-27,-45,-37,-44,73,73,-88,-61,-51,124,-186,73,-39,-36,-43,-42,-34,-31,-97,-50,-115,73,-92,-32,-48,-49,-47,-46,-89,-186,-87,-30,73,]),'KEYWORD_for':([0,71,72,73,74,122,124,125,126,148,149,150,154,155,180,184,199,211,216,237,242,247,289,304,314,],[44,-182,44,-185,-184,-183,-118,-117,-90,-120,-119,-94,-60,44,44,44,-96,44,44,44,44,44,44,-115,44,]),'KEYWORD_then':([6,9,11,12,13,36,37,38,39,40,55,77,78,79,80,110,111,112,113,114,115,116,117,118,119,120,129,135,136,137,138,139,140,141,156,287,],[-152,-153,-161,-164,-168,-147,-142,-144,-156,-158,-170,-172,125,-173,-171,-151,-150,-149,-155,-154,-148,-162,-163,-165,-166,-167,-169,-141,-146,-145,-143,-157,-160,-159,-174,125,]),'LESSEQUAL':([6,11,12,13,20,22,39,40,46,55,77,79,80,86,93,105,108,113,114,116,117,118,119,120,129,139,140,141,156,159,160,185,186,],[54,-161,-164,-168,-173,-172,-156,-158,-171,-170,-172,-173,-171,-172,-171,-172,-171,-155,-154,-162,-163,-165,-166,-167,-169,-157,-160,-159,-174,-172,-171,-171,-172,]),'KEYWORD_new':([104,133,],[146,162,]),'CLOSE_PAREN':([6,9,11,12,13,34,36,37,38,39,40,55,61,62,63,66,67,77,79,80,83,103,110,111,112,113,114,115,116,117,118,119,120,121,129,135,136,137,138,139,140,141,143,144,145,147,151,152,153,156,157,175,177,179,181,182,183,190,192,193,201,203,219,221,235,239,244,245,253,],[-152,-153,-161,-164,-168,-140,-147,-142,-144,-156,-158,-170,-82,-81,-84,-85,-83,-172,-173,-171,129,-186,-151,-150,-149,-155,-154,-148,-162,-163,-165,-166,-167,154,-169,-141,-146,-145,-143,-157,-160,-159,-70,-71,176,-186,-58,-58,-59,-174,191,-69,204,205,-57,-56,211,218,220,222,-186,240,251,252,254,-68,-55,-54,272,]),'FLOAT_CONSTANTS':([195,256,280,293,294,295,],[227,227,227,227,227,227,]),'KEYWORD_elsif':([6,7,9,11,12,13,15,16,18,20,26,29,34,35,36,37,38,39,40,41,42,55,61,62,63,64,65,66,67,71,73,74,75,77,79,80,85,86,88,89,90,91,92,93,105,106,108,110,111,112,113,114,115,116,117,118,119,120,122,124,125,126,129,132,135,136,137,138,139,140,141,155,156,159,160,161,162,176,185,186,187,188,189,202,205,216,217,220,222,241,249,250,251,252,265,284,302,304,306,313,314,316,318,319,320,],[-152,-107,-153,-161,-164,-168,-106,-86,-73,-173,-109,-104,-140,-105,-147,-142,-144,-156,-158,-72,-108,-170,-82,-81,-84,-80,-110,-85,-83,-182,-185,-184,-180,-172,-173,-171,-130,-172,-129,-131,-74,-75,-139,-171,-172,-125,-171,-151,-150,-149,-155,-154,-148,-162,-163,-165,-166,-167,-183,-118,-117,-90,-169,-132,-141,-146,-145,-143,-157,-160,-159,-186,-174,-172,-171,-135,-137,-65,-171,-172,-100,-186,-98,-63,-65,-181,-91,-134,-138,-64,-99,270,-133,-136,-95,-88,-97,-115,-92,-89,-186,-87,-186,-116,270,]),'BOOLEAN_CONSTANTS':([0,3,14,21,24,27,47,48,71,72,73,74,95,96,97,98,103,122,124,125,126,130,147,148,149,150,154,155,180,184,195,199,201,211,216,237,242,247,256,270,280,289,293,294,295,304,314,],[9,-93,61,9,9,9,9,9,-182,9,-185,-184,9,9,9,9,61,-183,-118,-117,-90,9,61,-120,-119,-94,-60,9,9,9,225,-96,61,9,9,9,9,9,225,9,225,9,225,225,225,-115,9,]),'INT_CONSTANTS':([0,2,3,5,8,14,21,23,24,27,28,33,47,48,49,50,51,52,53,54,56,57,58,59,60,71,72,73,74,81,95,96,97,98,99,100,101,103,122,124,125,126,130,142,147,148,149,150,154,155,180,184,187,195,199,200,201,207,211,214,216,237,242,247,256,270,280,289,293,294,295,304,314,],[-186,-177,-93,-176,55,62,-186,-179,-186,-186,-175,-178,-186,-186,-186,-186,-186,-186,-186,-186,-186,-186,-186,-186,-186,-182,-186,-185,-184,-186,-186,-186,-186,-186,-186,-186,-186,62,-183,-118,-117,-90,-186,170,62,-120,-119,-94,-60,-186,-186,-186,-175,226,-96,170,62,-175,-186,-175,-186,-186,-186,-186,226,-186,226,-186,226,226,226,-115,-186,]),'GREATER':([6,11,12,13,20,22,39,40,46,55,77,79,80,86,93,105,108,113,114,116,117,118,119,120,129,139,140,141,156,159,160,185,186,],[50,-161,-164,-168,-173,-172,-156,-158,-171,-170,-172,-173,-171,-172,-171,-172,-171,-155,-154,-162,-163,-165,-166,-167,-169,-157,-160,-159,-174,-172,-171,-171,-172,]),'BITAND':([11,12,13,20,22,39,40,46,55,77,79,80,86,93,105,108,113,114,116,117,118,119,120,129,139,140,141,156,159,160,185,186,],[-161,-164,-168,-173,-172,99,-158,-171,-170,-172,-173,-171,-172,-171,-172,-171,99,99,-162,-163,-165,-166,-167,-169,-157,-160,-159,-174,-172,-171,-171,-172,]),'LOGICALAND':([6,9,11,12,13,20,22,36,37,38,39,40,46,55,77,79,80,86,93,105,108,110,111,112,113,114,115,116,117,118,119,120,129,135,136,137,138,139,140,141,156,159,160,185,186,],[-152,-153,-161,-164,-168,-173,-172,-147,98,-144,-156,-158,-171,-170,-172,-173,-171,-172,-171,-172,-171,-151,-150,-149,-155,-154,-148,-162,-163,-165,-166,-167,-169,98,-146,-145,-143,-157,-160,-159,-174,-172,-171,-171,-172,]),'SHIFTR':([11,12,13,20,22,40,46,55,77,79,80,86,93,105,108,116,117,118,119,120,129,139,140,141,156,159,160,185,186,],[-161,-164,-168,-173,-172,100,-171,-170,-172,-173,-171,-172,-171,-172,-171,-162,-163,-165,-166,-167,-169,100,-160,-159,-174,-172,-171,-171,-172,]),'STRING_CONSTANTS':([27,47,130,195,256,280,293,294,295,],[92,92,92,229,229,229,229,229,229,]),'KEYWORD_def':([0,71,72,73,74,122,134,196,],[17,-182,17,-185,-184,-183,168,168,]),'KEYWORD_do':([6,9,11,12,13,36,37,38,39,40,55,77,79,80,109,110,111,112,113,114,115,116,117,118,119,120,129,135,136,137,138,139,140,141,156,170,171,172,173,238,],[-152,-153,-161,-164,-168,-147,-142,-144,-156,-158,-170,-172,-173,-171,149,-151,-150,-149,-155,-154,-148,-162,-163,-165,-166,-167,-169,-141,-146,-145,-143,-157,-160,-159,-174,-122,-123,149,-124,-121,]),'KEYWORD_gets':([27,47,130,],[89,89,89,]),'CONSTANTS':([0,3,14,17,21,24,27,32,47,48,49,50,51,52,53,54,56,57,58,59,60,68,69,71,72,73,74,81,95,96,97,98,99,100,101,103,121,122,124,125,126,128,130,142,146,147,148,149,150,154,155,157,168,177,180,184,192,193,198,199,200,201,209,210,211,216,235,237,242,247,270,289,304,314,],[46,-93,67,68,80,80,93,94,108,80,80,80,80,80,80,80,80,80,80,80,80,-53,-52,-182,46,-185,-184,80,80,80,80,80,80,80,80,67,151,-183,-118,-117,-90,151,160,173,151,67,-120,-119,-94,-60,185,151,68,151,185,185,151,151,151,-96,173,67,151,151,185,185,151,185,185,185,80,185,-115,185,]),'MOD':([12,13,20,22,46,55,77,79,80,86,93,105,108,116,117,118,119,120,129,156,159,160,185,186,],[60,-168,-173,-172,-171,-170,-172,-173,-171,-172,-171,-172,-171,60,60,-165,-166,-167,-169,-174,-172,-171,-171,-172,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'class_method_stmt':([236,254,272,281,],[255,255,255,300,]),'statements':([0,],[19,]),'class_mlhs':([134,196,],[164,164,]),'M_8':([150,],[180,]),'class_func':([134,196,],[166,166,]),'opt_then':([78,287,],[126,304,]),'mlhs':([0,27,72,155,180,184,211,216,237,242,247,289,314,],[1,84,1,1,1,1,1,1,1,1,1,1,1,]),'func_defn':([0,72,],[31,31,]),'M_3':([304,],[314,]),'class_method_stmts':([236,254,272,],[260,273,291,]),'expr10':([0,21,24,27,47,48,49,50,51,52,53,54,72,81,95,96,97,98,99,100,101,130,155,180,184,211,216,237,242,247,270,289,314,],[11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,140,141,11,11,11,11,11,11,11,11,11,11,11,11,]),'expr11':([0,21,24,27,47,48,49,50,51,52,53,54,56,57,72,81,95,96,97,98,99,100,101,130,155,180,184,211,216,237,242,247,270,289,314,],[12,12,12,12,12,12,12,12,12,12,12,12,116,117,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,]),'expr13':([0,21,24,27,47,48,49,50,51,52,53,54,56,57,58,59,60,72,81,95,96,97,98,99,100,101,130,155,180,184,211,216,237,242,247,270,289,314,],[13,13,13,13,13,13,13,13,13,13,13,13,13,13,118,119,120,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,]),'array':([0,14,21,24,27,47,48,49,50,51,52,53,54,56,57,58,59,60,72,81,95,96,97,98,99,100,101,103,130,147,155,180,184,201,211,216,237,242,247,270,289,314,],[20,66,79,79,20,79,79,79,79,79,79,79,79,79,79,79,79,79,20,79,79,79,79,79,79,79,79,66,79,66,20,20,20,66,20,20,20,20,20,79,20,20,]),'class_mrhs':([195,],[231,]),'for_range_variables':([142,200,],[174,238,]),'func_stmts':([184,211,],[212,246,]),'M_14':([285,],[303,]),'str_expr':([27,47,130,],[85,85,85,]),'class_method_mrhs':([280,],[297,]),'call_arg':([103,147,201,],[145,179,239,]),'for_range':([142,],[172,]),'expr3':([0,21,24,27,47,48,72,130,155,180,184,211,216,237,242,247,270,289,314,],[34,78,34,34,34,109,34,34,34,34,34,34,34,34,34,34,287,34,34,]),'literal':([195,256,280,293,294,295,],[230,276,299,309,310,311,]),'program':([0,],[4,]),'expr6':([0,21,24,27,47,48,72,95,96,97,98,130,155,180,184,211,216,237,242,247,270,289,314,],[36,36,36,36,36,36,36,36,136,137,36,36,36,36,36,36,36,36,36,36,36,36,36,]),'expr7':([0,21,24,27,47,48,49,50,51,54,72,81,95,96,97,98,130,155,180,184,211,216,237,242,247,270,289,314,],[6,6,6,6,6,6,110,111,112,115,6,127,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,]),'puts_stmt':([0,72,155,180,184,211,216,236,237,242,247,254,272,281,289,314,],[15,15,15,15,15,15,15,262,15,15,15,262,262,262,15,15,]),'expr5':([0,21,24,27,47,48,72,95,98,130,155,180,184,211,216,237,242,247,270,289,314,],[38,38,38,38,38,38,38,38,138,38,38,38,38,38,38,38,38,38,38,38,38,]),'func_call_stmt':([0,72,155,180,184,211,216,237,242,247,289,314,],[26,26,26,26,26,26,26,26,26,26,26,26,]),'expr8':([0,21,24,27,47,48,49,50,51,52,53,54,72,81,95,96,97,98,130,155,180,184,211,216,237,242,247,270,289,314,],[39,39,39,39,39,39,39,39,39,113,114,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,]),'expr9':([0,21,24,27,47,48,49,50,51,52,53,54,72,81,95,96,97,98,99,130,155,180,184,211,216,237,242,247,270,289,314,],[40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,139,40,40,40,40,40,40,40,40,40,40,40,40,]),'arguments':([121,128,146,157,177,192,193,198,209,210,235,],[153,158,178,190,203,219,221,236,244,245,253,]),'terms':([19,164,167,188,206,212,246,258,260,263,273,291,305,318,],[72,194,196,216,242,247,247,279,281,242,281,281,216,216,]),'expr4':([0,21,24,27,47,48,72,95,130,155,180,184,211,216,237,242,247,270,289,314,],[37,37,37,37,37,37,37,135,37,37,37,37,37,37,37,37,37,37,37,37,]),'exit_stmt':([0,72,155,180,184,211,216,237,242,247,289,314,],[42,42,42,42,42,42,42,42,42,42,42,42,]),'class_method_ret_arg':([256,],[277,]),'M_18':([154,],[184,]),'term':([19,72,164,167,188,194,196,206,212,216,242,246,247,258,260,263,273,279,281,291,305,318,],[71,122,71,71,71,122,122,71,71,122,122,71,122,71,71,71,71,122,122,71,71,71,]),'stmt':([0,72,155,180,184,211,216,237,242,247,289,314,],[16,16,16,16,16,16,16,16,16,16,16,16,]),'primary':([14,103,147,201,],[64,144,144,144,]),'M_17':([176,205,],[202,241,]),'mrhs':([27,47,130,],[90,106,106,]),'class_stmts':([134,],[167,]),'loop_stmt':([0,72,155,180,184,211,216,237,242,247,289,314,],[7,7,7,7,7,7,7,7,7,7,7,7,]),'class_method_mlhs':([236,254,272,281,],[258,258,258,258,]),'func_ret_arg':([14,],[65,]),'class_method_arg_expr':([256,295,],[278,312,]),'M_2':([217,],[250,]),'M_1':([126,],[155,]),'opt_do':([109,172,],[150,199,]),'M_7':([3,],[48,]),'M_6':([306,],[316,]),'M_4':([319,],[320,]),'uexpr':([0,21,24,27,47,48,49,50,51,52,53,54,56,57,58,59,60,72,81,95,96,97,98,99,100,101,130,155,180,184,211,216,237,242,247,270,289,314,],[8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,]),'none':([0,19,21,24,27,47,48,49,50,51,52,53,54,56,57,58,59,60,72,81,95,96,97,98,99,100,101,103,130,134,147,155,167,180,184,188,201,206,211,212,216,236,237,242,246,247,250,254,260,263,270,271,272,273,289,291,305,314,318,320,],[28,75,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,143,28,163,143,187,75,207,214,75,143,75,214,75,28,257,207,28,75,28,269,257,75,75,28,288,257,75,187,75,75,187,75,269,]),'gen_stmts':([155,289,314,],[188,305,318,]),'elsif_tail':([250,320,],[271,321,]),'expr':([0,27,72,155,180,184,211,216,237,242,247,289,314,],[29,91,29,29,29,29,29,29,29,29,29,29,29,]),'top_top_compstmt':([0,],[43,]),'M_9':([265,],[284,]),'fname2':([0,47,72,155,180,184,211,216,237,242,247,289,314,],[45,107,45,45,45,45,45,45,45,45,45,45,45,]),'gen_stmts2':([180,237,],[206,263,]),'M_12':([151,152,],[181,182,]),'class_stmt':([134,196,],[169,233,]),'opt_terms':([19,167,188,206,212,246,260,263,273,291,305,318,],[76,197,217,243,248,266,282,283,292,307,315,319,]),'statement':([0,72,],[25,123,]),'M_11':([302,],[313,]),'func_stmt':([184,211,247,],[215,215,267,]),'fname':([17,168,],[70,198,]),'class_defn':([0,72,],[30,30,]),'M_16':([144,],[175,]),'M_15':([268,],[286,]),'opt_else_stmt':([271,],[290,]),'M_13':([153,],[183,]),'expr1':([0,24,27,47,72,130,155,180,184,211,216,237,242,247,289,314,],[35,83,88,88,35,88,35,35,35,35,35,35,35,35,35,35,]),'top_stmt':([0,72,155,180,184,211,216,237,242,247,289,314,],[10,10,189,208,213,213,249,208,264,213,189,189,]),'M_10':([199,],[237,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> top_top_compstmt','program',1,'p_program','parser.py',57),
  ('top_top_compstmt -> statements opt_terms','top_top_compstmt',2,'p_top_top_compstmt','parser.py',61),
  ('statements -> statement','statements',1,'p_statements','parser.py',65),
  ('statements -> statements terms statement','statements',3,'p_statements','parser.py',66),
  ('statement -> top_stmt','statement',1,'p_statement','parser.py',71),
  ('statement -> func_defn','statement',1,'p_statement','parser.py',72),
  ('statement -> class_defn','statement',1,'p_statement','parser.py',73),
  ('statement -> VARIABLES DOT VARIABLES OPEN_PAREN arguments CLOSE_PAREN','statement',6,'p_statement','parser.py',74),
  ('statement -> VARIABLES DOT VARIABLES OPEN_PAREN CLOSE_PAREN','statement',5,'p_statement','parser.py',75),
  ('statement -> VARIABLES DOT VARIABLES arguments','statement',4,'p_statement','parser.py',76),
  ('statement -> CONSTANTS DOT KEYWORD_new OPEN_PAREN arguments CLOSE_PAREN','statement',6,'p_statement','parser.py',77),
  ('statement -> CONSTANTS DOT KEYWORD_new OPEN_PAREN CLOSE_PAREN','statement',5,'p_statement','parser.py',78),
  ('statement -> CONSTANTS DOT KEYWORD_new arguments','statement',4,'p_statement','parser.py',79),
  ('class_defn -> KEYWORD_class CONSTANTS newline class_stmts opt_terms KEYWORD_end','class_defn',6,'p_class_defn','parser.py',87),
  ('class_stmts -> class_stmt','class_stmts',1,'p_class_stmts','parser.py',91),
  ('class_stmts -> class_stmts terms class_stmt','class_stmts',3,'p_class_stmts','parser.py',92),
  ('class_stmts -> none','class_stmts',1,'p_class_stmts','parser.py',93),
  ('class_stmt -> class_mlhs EQUAL class_mrhs','class_stmt',3,'p_class_stmt','parser.py',97),
  ('class_stmt -> class_func','class_stmt',1,'p_class_stmt','parser.py',98),
  ('class_mrhs -> literal','class_mrhs',1,'p_class_mrhs','parser.py',102),
  ('literal -> INT_CONSTANTS','literal',1,'p_literal','parser.py',106),
  ('literal -> FLOAT_CONSTANTS','literal',1,'p_literal','parser.py',107),
  ('literal -> STRING_CONSTANTS','literal',1,'p_literal','parser.py',108),
  ('literal -> BOOLEAN_CONSTANTS','literal',1,'p_literal','parser.py',109),
  ('literal -> CHAR_CONSTANTS','literal',1,'p_literal','parser.py',110),
  ('literal -> SIGIL_AT','literal',1,'p_literal','parser.py',111),
  ('literal -> SIGIL_DOUBLE_AT','literal',1,'p_literal','parser.py',112),
  ('class_mlhs -> class_mlhs terms SIGIL_DOUBLE_AT','class_mlhs',3,'p_class_mlhs','parser.py',117),
  ('class_mlhs -> SIGIL_DOUBLE_AT','class_mlhs',1,'p_class_mlhs','parser.py',118),
  ('class_func -> KEYWORD_def fname OPEN_PAREN arguments CLOSE_PAREN class_method_stmts opt_terms KEYWORD_end','class_func',8,'p_class_func','parser.py',124),
  ('class_func -> KEYWORD_def fname arguments class_method_stmts opt_terms KEYWORD_end','class_func',6,'p_class_func','parser.py',125),
  ('class_func -> KEYWORD_def fname OPEN_PAREN CLOSE_PAREN class_method_stmts opt_terms KEYWORD_end','class_func',7,'p_class_func','parser.py',126),
  ('class_method_stmts -> class_method_stmt','class_method_stmts',1,'p_class_method_stmts','parser.py',131),
  ('class_method_stmts -> class_method_stmts terms class_method_stmt','class_method_stmts',3,'p_class_method_stmts','parser.py',132),
  ('class_method_stmts -> none','class_method_stmts',1,'p_class_method_stmts','parser.py',133),
  ('class_method_stmt -> class_method_mlhs EQUAL class_method_mrhs','class_method_stmt',3,'p_class_method_stmt','parser.py',138),
  ('class_method_stmt -> KEYWORD_return class_method_ret_arg','class_method_stmt',2,'p_class_method_stmt','parser.py',139),
  ('class_method_stmt -> puts_stmt','class_method_stmt',1,'p_class_method_stmt','parser.py',140),
  ('class_method_mlhs -> class_method_mlhs terms SIGIL_AT','class_method_mlhs',3,'p_class_method_mlhs','parser.py',144),
  ('class_method_mlhs -> SIGIL_AT','class_method_mlhs',1,'p_class_method_mlhs','parser.py',145),
  ('class_method_mlhs -> SIGIL_DOUBLE_AT','class_method_mlhs',1,'p_class_method_mlhs','parser.py',146),
  ('class_method_mrhs -> literal','class_method_mrhs',1,'p_class_method_mrhs','parser.py',151),
  ('class_method_mrhs -> VARIABLES','class_method_mrhs',1,'p_class_method_mrhs','parser.py',152),
  ('class_method_ret_arg -> class_method_arg_expr','class_method_ret_arg',1,'p_class_method_ret_arg','parser.py',157),
  ('class_method_ret_arg -> literal','class_method_ret_arg',1,'p_class_method_ret_arg','parser.py',158),
  ('class_method_ret_arg -> class_method_ret_arg COMMA class_method_arg_expr','class_method_ret_arg',3,'p_class_method_ret_arg','parser.py',159),
  ('class_method_ret_arg -> class_method_ret_arg COMMA literal','class_method_ret_arg',3,'p_class_method_ret_arg','parser.py',160),
  ('class_method_arg_expr -> SIGIL_AT EQUAL literal','class_method_arg_expr',3,'p_class_method_arg_expr','parser.py',165),
  ('class_method_arg_expr -> SIGIL_DOUBLE_AT EQUAL literal','class_method_arg_expr',3,'p_class_method_arg_expr','parser.py',166),
  ('func_defn -> KEYWORD_def fname OPEN_PAREN arguments M_13 CLOSE_PAREN func_stmts opt_terms KEYWORD_end M_14','func_defn',10,'p_func_defn','parser.py',170),
  ('func_defn -> KEYWORD_def fname OPEN_PAREN CLOSE_PAREN M_18 func_stmts opt_terms KEYWORD_end M_15','func_defn',9,'p_func_defn','parser.py',171),
  ('fname -> VARIABLES','fname',1,'p_fname','parser.py',183),
  ('fname -> CONSTANTS','fname',1,'p_fname','parser.py',184),
  ('arguments -> VARIABLES M_12 COMMA arguments','arguments',4,'p_arguments','parser.py',198),
  ('arguments -> CONSTANTS M_12 COMMA arguments','arguments',4,'p_arguments','parser.py',199),
  ('arguments -> VARIABLES M_12','arguments',2,'p_arguments','parser.py',200),
  ('arguments -> CONSTANTS M_12','arguments',2,'p_arguments','parser.py',201),
  ('M_12 -> <empty>','M_12',0,'p_M_12','parser.py',209),
  ('M_13 -> <empty>','M_13',0,'p_M_13','parser.py',222),
  ('M_18 -> <empty>','M_18',0,'p_M_18','parser.py',228),
  ('M_14 -> <empty>','M_14',0,'p_M_14','parser.py',234),
  ('M_15 -> <empty>','M_15',0,'p_M_15','parser.py',239),
  ('func_call_stmt -> fname2 OPEN_PAREN call_arg CLOSE_PAREN M_17','func_call_stmt',5,'p_func_call_stmt','parser.py',244),
  ('func_call_stmt -> mlhs EQUAL fname2 OPEN_PAREN call_arg CLOSE_PAREN M_17','func_call_stmt',7,'p_func_call_stmt','parser.py',245),
  ('M_17 -> <empty>','M_17',0,'p_M_17','parser.py',253),
  ('fname2 -> VARIABLES','fname2',1,'p_fname2','parser.py',263),
  ('fname2 -> CONSTANTS','fname2',1,'p_fname2','parser.py',264),
  ('call_arg -> primary M_16 COMMA call_arg','call_arg',4,'p_call_arg','parser.py',269),
  ('call_arg -> primary M_16','call_arg',2,'p_call_arg','parser.py',270),
  ('call_arg -> none','call_arg',1,'p_call_arg','parser.py',271),
  ('M_16 -> <empty>','M_16',0,'p_M_16','parser.py',281),
  ('loop_stmt -> KEYWORD_break','loop_stmt',1,'p_loop_stmt','parser.py',285),
  ('exit_stmt -> KEYWORD_exit','exit_stmt',1,'p_exit_stmt','parser.py',289),
  ('puts_stmt -> KEYWORD_puts mrhs','puts_stmt',2,'p_puts_stmt','parser.py',294),
  ('puts_stmt -> KEYWORD_puts expr','puts_stmt',2,'p_puts_stmt','parser.py',295),
  ('func_stmts -> func_stmt','func_stmts',1,'p_func_stmts','parser.py',309),
  ('func_stmts -> func_stmts terms func_stmt','func_stmts',3,'p_func_stmts','parser.py',310),
  ('func_stmts -> none','func_stmts',1,'p_func_stmts','parser.py',311),
  ('func_stmt -> top_stmt','func_stmt',1,'p_func_stmt','parser.py',315),
  ('func_ret_arg -> primary','func_ret_arg',1,'p_func_ret_arg','parser.py',329),
  ('primary -> INT_CONSTANTS','primary',1,'p_primary','parser.py',334),
  ('primary -> BOOLEAN_CONSTANTS','primary',1,'p_primary','parser.py',335),
  ('primary -> CONSTANTS','primary',1,'p_primary','parser.py',336),
  ('primary -> VARIABLES','primary',1,'p_primary','parser.py',337),
  ('primary -> array','primary',1,'p_primary','parser.py',338),
  ('top_stmt -> stmt','top_stmt',1,'p_top_stmt','parser.py',373),
  ('top_stmt -> KEYWORD_if expr3 opt_then M_1 gen_stmts opt_terms M_2 elsif_tail opt_else_stmt KEYWORD_end M_6','top_stmt',11,'p_top_stmt','parser.py',374),
  ('top_stmt -> KEYWORD_while M_7 expr3 opt_do M_8 gen_stmts2 opt_terms KEYWORD_end M_9','top_stmt',9,'p_top_stmt','parser.py',375),
  ('top_stmt -> KEYWORD_for VARIABLES KEYWORD_in for_range opt_do M_10 gen_stmts2 opt_terms KEYWORD_end M_11','top_stmt',10,'p_top_stmt','parser.py',376),
  ('M_1 -> <empty>','M_1',0,'p_M_1','parser.py',381),
  ('M_2 -> <empty>','M_2',0,'p_M_2','parser.py',387),
  ('M_6 -> <empty>','M_6',0,'p_M_6','parser.py',394),
  ('M_7 -> <empty>','M_7',0,'p_M_7','parser.py',400),
  ('M_8 -> <empty>','M_8',0,'p_M_8','parser.py',406),
  ('M_9 -> <empty>','M_9',0,'p_M_9','parser.py',412),
  ('M_10 -> <empty>','M_10',0,'p_M_10','parser.py',420),
  ('M_11 -> <empty>','M_11',0,'p_M_11','parser.py',433),
  ('gen_stmts -> top_stmt','gen_stmts',1,'p_gen_stmts','parser.py',443),
  ('gen_stmts -> gen_stmts terms top_stmt','gen_stmts',3,'p_gen_stmts','parser.py',444),
  ('gen_stmts -> none','gen_stmts',1,'p_gen_stmts','parser.py',445),
  ('gen_stmts2 -> top_stmt','gen_stmts2',1,'p_gen_stmts2','parser.py',459),
  ('gen_stmts2 -> gen_stmts2 terms top_stmt','gen_stmts2',3,'p_gen_stmts2','parser.py',460),
  ('gen_stmts2 -> none','gen_stmts2',1,'p_gen_stmts2','parser.py',461),
  ('stmt -> expr','stmt',1,'p_stmt','parser.py',483),
  ('stmt -> expr1','stmt',1,'p_stmt','parser.py',484),
  ('stmt -> puts_stmt','stmt',1,'p_stmt','parser.py',485),
  ('stmt -> loop_stmt','stmt',1,'p_stmt','parser.py',486),
  ('stmt -> exit_stmt','stmt',1,'p_stmt','parser.py',487),
  ('stmt -> func_call_stmt','stmt',1,'p_stmt','parser.py',488),
  ('stmt -> KEYWORD_return func_ret_arg','stmt',2,'p_stmt','parser.py',489),
  ('opt_else_stmt -> KEYWORD_else gen_stmts opt_terms','opt_else_stmt',3,'p_opt_else_stmt','parser.py',496),
  ('opt_else_stmt -> none','opt_else_stmt',1,'p_opt_else_stmt','parser.py',497),
  ('elsif_tail -> none','elsif_tail',1,'p_elsif_tail','parser.py',501),
  ('elsif_tail -> KEYWORD_elsif expr3 opt_then M_3 gen_stmts opt_terms M_4 elsif_tail','elsif_tail',8,'p_elsif_tail','parser.py',502),
  ('M_3 -> <empty>','M_3',0,'p_M_3','parser.py',511),
  ('M_4 -> <empty>','M_4',0,'p_M_4','parser.py',517),
  ('opt_then -> KEYWORD_then','opt_then',1,'p_opt_then','parser.py',524),
  ('opt_then -> newline','opt_then',1,'p_opt_then','parser.py',525),
  ('opt_do -> KEYWORD_do','opt_do',1,'p_opt_do','parser.py',529),
  ('opt_do -> newline','opt_do',1,'p_opt_do','parser.py',530),
  ('for_range -> for_range_variables DOUBLEDOT for_range_variables','for_range',3,'p_for_range','parser.py',534),
  ('for_range_variables -> INT_CONSTANTS','for_range_variables',1,'p_for_range_variables','parser.py',539),
  ('for_range_variables -> VARIABLES','for_range_variables',1,'p_for_range_variables','parser.py',540),
  ('for_range_variables -> CONSTANTS','for_range_variables',1,'p_for_range_variables','parser.py',541),
  ('expr -> mlhs EQUAL mrhs','expr',3,'p_expr','parser.py',555),
  ('mlhs -> VARIABLES','mlhs',1,'p_mlhs','parser.py',577),
  ('mlhs -> CONSTANTS','mlhs',1,'p_mlhs','parser.py',578),
  ('mlhs -> array','mlhs',1,'p_mlhs','parser.py',579),
  ('mrhs -> expr1','mrhs',1,'p_mrhs','parser.py',594),
  ('mrhs -> str_expr','mrhs',1,'p_mrhs','parser.py',595),
  ('mrhs -> KEYWORD_gets','mrhs',1,'p_mrhs','parser.py',596),
  ('mrhs -> OPEN_BRACKET CLOSE_BRACKET','mrhs',2,'p_mrhs','parser.py',597),
  ('mrhs -> VARIABLES DOT VARIABLES OPEN_PAREN arguments CLOSE_PAREN','mrhs',6,'p_mrhs','parser.py',598),
  ('mrhs -> VARIABLES DOT VARIABLES OPEN_PAREN CLOSE_PAREN','mrhs',5,'p_mrhs','parser.py',599),
  ('mrhs -> VARIABLES DOT VARIABLES','mrhs',3,'p_mrhs','parser.py',600),
  ('mrhs -> CONSTANTS DOT KEYWORD_new OPEN_PAREN arguments CLOSE_PAREN','mrhs',6,'p_mrhs','parser.py',601),
  ('mrhs -> CONSTANTS DOT KEYWORD_new','mrhs',3,'p_mrhs','parser.py',602),
  ('mrhs -> CONSTANTS DOT KEYWORD_new OPEN_PAREN CLOSE_PAREN','mrhs',5,'p_mrhs','parser.py',603),
  ('str_expr -> STRING_CONSTANTS','str_expr',1,'p_str_expr','parser.py',619),
  ('expr1 -> expr3','expr1',1,'p_expr1','parser.py',627),
  ('expr3 -> expr3 LOGICALOR expr4','expr3',3,'p_expr3','parser.py',632),
  ('expr3 -> expr4','expr3',1,'p_expr3','parser.py',633),
  ('expr4 -> expr4 LOGICALAND expr5','expr4',3,'p_expr4','parser.py',651),
  ('expr4 -> expr5','expr4',1,'p_expr4','parser.py',652),
  ('expr5 -> expr6 DOUBLEEQUAL expr6','expr5',3,'p_expr5','parser.py',672),
  ('expr5 -> expr6 NOTEQUAL expr6','expr5',3,'p_expr5','parser.py',673),
  ('expr5 -> expr6','expr5',1,'p_expr5','parser.py',674),
  ('expr6 -> expr7 LESSEQUAL expr7','expr6',3,'p_expr6','parser.py',696),
  ('expr6 -> expr7 LESS expr7','expr6',3,'p_expr6','parser.py',697),
  ('expr6 -> expr7 GREATER expr7','expr6',3,'p_expr6','parser.py',698),
  ('expr6 -> expr7 GREATEREQUAL expr7','expr6',3,'p_expr6','parser.py',699),
  ('expr6 -> expr7','expr6',1,'p_expr6','parser.py',700),
  ('expr6 -> BOOLEAN_CONSTANTS','expr6',1,'p_expr6','parser.py',701),
  ('expr7 -> expr7 BITXOR expr8','expr7',3,'p_expr7','parser.py',736),
  ('expr7 -> expr7 PIPE expr8','expr7',3,'p_expr7','parser.py',737),
  ('expr7 -> expr8','expr7',1,'p_expr7','parser.py',738),
  ('expr8 -> expr8 BITAND expr9','expr8',3,'p_expr8','parser.py',750),
  ('expr8 -> expr9','expr8',1,'p_expr8','parser.py',751),
  ('expr9 -> expr9 SHIFTL expr10','expr9',3,'p_expr9','parser.py',763),
  ('expr9 -> expr9 SHIFTR expr10','expr9',3,'p_expr9','parser.py',764),
  ('expr9 -> expr10','expr9',1,'p_expr9','parser.py',765),
  ('expr10 -> expr10 PLUS expr11','expr10',3,'p_expr10','parser.py',777),
  ('expr10 -> expr10 MINUS expr11','expr10',3,'p_expr10','parser.py',778),
  ('expr10 -> expr11','expr10',1,'p_expr10','parser.py',779),
  ('expr11 -> expr11 MULTIPLY expr13','expr11',3,'p_expr11','parser.py',791),
  ('expr11 -> expr11 DIV expr13','expr11',3,'p_expr11','parser.py',792),
  ('expr11 -> expr11 MOD expr13','expr11',3,'p_expr11','parser.py',793),
  ('expr11 -> expr13','expr11',1,'p_expr11','parser.py',794),
  ('expr13 -> OPEN_PAREN expr1 CLOSE_PAREN','expr13',3,'p_expr13','parser.py',806),
  ('expr13 -> uexpr INT_CONSTANTS','expr13',2,'p_expr13','parser.py',807),
  ('expr13 -> CONSTANTS','expr13',1,'p_expr13','parser.py',808),
  ('expr13 -> VARIABLES','expr13',1,'p_expr13','parser.py',809),
  ('expr13 -> array','expr13',1,'p_expr13','parser.py',810),
  ('array -> VARIABLES OPEN_BRACKET expr7 CLOSE_BRACKET','array',4,'p_array','parser.py',846),
  ('uexpr -> none','uexpr',1,'p_uexpr','parser.py',863),
  ('uexpr -> PLUS','uexpr',1,'p_uexpr','parser.py',864),
  ('uexpr -> MINUS','uexpr',1,'p_uexpr','parser.py',865),
  ('uexpr -> BITNOT','uexpr',1,'p_uexpr','parser.py',866),
  ('uexpr -> BITCOMP','uexpr',1,'p_uexpr','parser.py',867),
  ('opt_terms -> none','opt_terms',1,'p_opt_terms','parser.py',875),
  ('opt_terms -> terms','opt_terms',1,'p_opt_terms','parser.py',876),
  ('terms -> term','terms',1,'p_terms','parser.py',880),
  ('terms -> terms term','terms',2,'p_terms','parser.py',881),
  ('term -> DELIM','term',1,'p_term','parser.py',885),
  ('term -> newline','term',1,'p_term','parser.py',886),
  ('none -> <empty>','none',0,'p_none','parser.py',890),
]
